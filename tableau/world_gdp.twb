<?xml version='1.0' encoding='utf-8' ?>

<!-- build 10400.17.1103.1137                               -->
<workbook original-version='10.4' source-build='10.4.1 (10400.17.1103.1137)' source-platform='win' version='10.4' xml:base='https://public.tableau.com' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <repository-location id='world_gdp_v2' path='/workbooks' revision='1.0' />
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='world_gpd_pivoted' inline='true' name='federated.0opxemw1tglw111h5k6551wiyoo5' version='10.4'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='world_gpd_pivoted' name='textscan.0sce2em0d1d3xd1fc3zht00ef3a5'>
            <connection class='textscan' directory='D:/Dropbox/Education/Bekerley Data Science/Fall 2017/w209 Data Visualization/w209-final-project/data' filename='world_gpd_pivoted.csv' password='' server='' workgroup-auth-mode='as-is' />
          </named-connection>
        </named-connections>
        <relation connection='textscan.0sce2em0d1d3xd1fc3zht00ef3a5' name='world_gpd_pivoted.csv' table='[world_gpd_pivoted#csv]' type='table'>
          <columns character-set='windows-1252' header='yes' locale='en_US' separator=','>
            <column datatype='string' name='country_name' ordinal='0' />
            <column datatype='string' name='country_code' ordinal='1' />
            <column datatype='integer' name='year' ordinal='2' />
            <column datatype='real' name='gdp_usd' ordinal='3' />
          </columns>
        </relation>
        <refresh increment-key='' incremental-updates='false' />
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>country_name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[country_name]</local-name>
            <parent-name>[world_gpd_pivoted.csv]</parent-name>
            <remote-alias>country_name</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>country_code</remote-name>
            <remote-type>129</remote-type>
            <local-name>[country_code]</local-name>
            <parent-name>[world_gpd_pivoted.csv]</parent-name>
            <remote-alias>country_code</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>year</remote-name>
            <remote-type>20</remote-type>
            <local-name>[year]</local-name>
            <parent-name>[world_gpd_pivoted.csv]</parent-name>
            <remote-alias>year</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>gdp_usd</remote-name>
            <remote-type>5</remote-type>
            <local-name>[gdp_usd]</local-name>
            <parent-name>[world_gpd_pivoted.csv]</parent-name>
            <remote-alias>gdp_usd</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[world_gpd_pivoted.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;windows-1252&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='Country Code' datatype='string' name='[country_code]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column caption='Country Name' datatype='string' name='[country_name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column caption='Gdp Usd' datatype='real' name='[gdp_usd]' role='measure' type='quantitative' />
      <column aggregation='Sum' caption='Year' datatype='integer' name='[year]' role='dimension' type='ordinal' />
      <column-instance column='[country_name]' derivation='None' name='[none:country_name:nk]' pivot='key' type='nominal' />
      <extract count='-1' enabled='true' units='records'>
        <connection class='dataengine' dbname='D:/Dropbox/Education/Bekerley Data Science/Fall 2017/w209 Data Visualization/w209-final-project/tableau/world_gpd_pivoted.tde' schema='Extract' tablename='Extract' update-time='12/12/2017 05:32:30 AM'>
          <relation name='Extract' table='[Extract].[Extract]' type='table' />
          <calculations>
            <calculation column='[Number of Records]' formula='1' />
          </calculations>
          <refresh increment-key='' incremental-updates='false'>
            <refresh-event add-from-file-path='' increment-value='%null%' refresh-type='create' rows-inserted='14994' timestamp-start='2017-12-12 05:32:30.754' />
          </refresh>
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>Number of Records</remote-name>
              <remote-type>16</remote-type>
              <local-name>[Number of Records]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Number of Records</remote-alias>
              <ordinal>0</ordinal>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>14994.0</statistic>
                <statistic aggregation='Avg' datatype='real'>1.0</statistic>
                <statistic aggregation='Min' datatype='integer'>1</statistic>
                <statistic aggregation='Max' datatype='integer'>1</statistic>
                <statistic aggregation='Stdev' datatype='real'>0.0</statistic>
                <statistic aggregation='StdevP' datatype='real'>0.0</statistic>
                <statistic aggregation='Var' datatype='real'>0.0</statistic>
                <statistic aggregation='VarP' datatype='real'>0.0</statistic>
                <statistic aggregation='Count' datatype='integer'>14994</statistic>
                <statistic aggregation='Median' datatype='integer'>1</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>14994.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteMetadata (ordered)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint8&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>country_code</remote-name>
              <remote-type>129</remote-type>
              <local-name>[country_code]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>country_code</remote-alias>
              <ordinal>1</ordinal>
              <family>world_gpd_pivoted.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>266</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;AFG&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;ZWE&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>14993</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>country_name</remote-name>
              <remote-type>129</remote-type>
              <local-name>[country_name]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>country_name</remote-alias>
              <ordinal>2</ordinal>
              <family>world_gpd_pivoted.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>266</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;Afghanistan&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;Zimbabwe&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>14993</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>gdp_usd</remote-name>
              <remote-type>5</remote-type>
              <local-name>[gdp_usd]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>gdp_usd</remote-alias>
              <ordinal>3</ordinal>
              <family>world_gpd_pivoted.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>11396</approx-count>
              <contains-null>true</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>11563381609966420.0</statistic>
                <statistic aggregation='Avg' datatype='real'>771252024942.73462</statistic>
                <statistic aggregation='Min' datatype='real'>0.0</statistic>
                <statistic aggregation='Max' datatype='real'>78870100000000.0</statistic>
                <statistic aggregation='Stdev' datatype='real'>3988515760102.9668</statistic>
                <statistic aggregation='StdevP' datatype='real'>3988382745287.0986</statistic>
                <statistic aggregation='Var' datatype='real'>1.5908257968589748e+25</statistic>
                <statistic aggregation='VarP' datatype='real'>1.5907196922903855e+25</statistic>
                <statistic aggregation='Count' datatype='integer'>14993</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>2.4741488494696969e+29</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>year</remote-name>
              <remote-type>2</remote-type>
              <local-name>[year]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>year</remote-alias>
              <ordinal>4</ordinal>
              <family>world_gpd_pivoted.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>58</approx-count>
              <contains-null>true</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='integer'>1960</statistic>
                <statistic aggregation='Max' datatype='integer'>2016</statistic>
                <statistic aggregation='Count' datatype='integer'>14993</statistic>
                <statistic aggregation='Median' datatype='integer'>1988</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (ordered)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>2</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>0</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint16&quot;</attribute>
              </attributes>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout dim-ordering='alphabetic' dim-percentage='0.486146' measure-ordering='alphabetic' measure-percentage='0.513854' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:country_name:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Argentina&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Brunei Darussalam&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Costa Rica&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Estonia&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Greenland&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Indonesia&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Latin America &amp; Caribbean&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Maldives&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Nauru&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Paraguay&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Singapore&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Sudan&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;United Arab Emirates&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Afghanistan&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Benin&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Chad&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;East Asia &amp; Pacific&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;French Polynesia&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Hungary&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Kiribati&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Low income&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Moldova&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;OECD members&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Samoa&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Sri Lanka&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Trinidad and Tobago&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Yemen Rep.&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Andorra&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Bosnia and Herzegovina&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Colombia&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Egypt Arab Rep.&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Germany&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;IDA blend&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Kuwait&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Macedonia FYR&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Morocco&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Pakistan&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Senegal&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;St. Vincent and the Grenadines&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Turks and Caicos Islands&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Azerbaijan&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Cabo Verde&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Curacao&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Europe &amp; Central Asia (excluding high income)&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Guinea&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Isle of Man&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Least developed countries: UN classification&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Mauritania&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;New Zealand&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Portugal&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Small states&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Switzerland&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Uruguay&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Armenia&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Bulgaria&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Cote d&apos;Ivoire&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Ethiopia&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Grenada&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Iran Islamic Rep.&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Latin America &amp; Caribbean (excluding high income)&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Mali&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Nepal&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Peru&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Sint Maarten (Dutch part)&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Suriname&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;United Kingdom&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Angola&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Botswana&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Comoros&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;El Salvador&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Ghana&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;IDA only&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Kyrgyz Republic&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Madagascar&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Mozambique&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Palau&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Serbia&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Sub-Saharan Africa&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Tuvalu&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Belgium&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Central African Republic&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Dominican Republic&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Fragile and conflict affected situations&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Honduras&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Kazakhstan&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Lithuania&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Middle East &amp; North Africa (IDA &amp; IBRD countries)&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Norway&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Russian Federation&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Silicon Valley Revenue&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;South Sudan&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Togo&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;West Bank and Gaza&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Albania&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Bermuda&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Channel Islands&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;East Asia &amp; Pacific (excluding high income)&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Gabon&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;IBRD only&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Korea Dem. People’s Rep.&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Lower middle income&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Monaco&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Oman&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;San Marino&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Silicon Valley Market Cap&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;St. Kitts and Nevis&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Tunisia&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Zambia&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Barbados&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Caribbean small states&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Djibouti&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Fiji&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Heavily indebted poor countries (HIPC)&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Japan&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Libya&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Middle East &amp; North Africa&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;North America&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Qatar&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;South Asia&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Thailand&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Vietnam&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Antigua and Barbuda&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Brazil&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Congo Dem. Rep.&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Equatorial Guinea&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Gibraltar&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;IDA total&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Lao PDR&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Malawi&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Myanmar&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Panama&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Seychelles&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Sub-Saharan Africa (excluding high income)&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Uganda&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Bahamas The&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Cambodia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Cyprus&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Europe &amp; Central Asia (IDA &amp; IBRD countries)&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Guinea-Bissau&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Israel&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Lebanon&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Mauritius&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Nicaragua&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Post-demographic dividend&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Solomon Islands&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Syrian Arab Republic&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Uzbekistan&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Bahrain&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Cameroon&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Czech Republic&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;European Union&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Guyana&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Italy&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Lesotho&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Mexico&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Niger&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Pre-demographic dividend&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Somalia&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Tajikistan&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Vanuatu&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Belarus&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Cayman Islands&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Dominica&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Finland&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;High income&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Jordan&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Liechtenstein&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Middle East &amp; North Africa (excluding high income)&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Northern Mariana Islands&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Romania&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;South Asia (IDA &amp; IBRD)&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Timor-Leste&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Virgin Islands (U.S.)&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Belize&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Central Europe and the Baltics&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Early-demographic dividend&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;France&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Hong Kong SAR China&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Kenya&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Low &amp; middle income&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Middle income&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Not classified&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Rwanda&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Spain&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Tonga&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;World&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Australia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Burkina Faso&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Croatia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Euro area&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Guam&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Iraq&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Latin America &amp; the Caribbean (IDA &amp; IBRD countries)&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Malta&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Netherlands&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Philippines&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Slovak Republic&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Swaziland&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;United States&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Arab World&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;British Virgin Islands&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Congo Rep.&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Eritrea&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Greece&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;India&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Late-demographic dividend&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Malaysia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Namibia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Papua New Guinea&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Sierra Leone&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Sub-Saharan Africa (IDA &amp; IBRD countries)&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Ukraine&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Algeria&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Bhutan&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Chile&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;East Asia &amp; Pacific (IDA &amp; IBRD countries)&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Gambia The&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Iceland&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Korea Rep.&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Luxembourg&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Mongolia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Other small states&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Sao Tome and Principe&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;St. Lucia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Turkey&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Zimbabwe&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Bangladesh&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Canada&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Denmark&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Faroe Islands&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Haiti&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Jamaica&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Liberia&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Micronesia Fed. Sts.&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Nigeria&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Puerto Rico&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;South Africa&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Tanzania&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Venezuela RB&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Austria&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Burundi&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Cuba&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Europe &amp; Central Asia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Guatemala&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Ireland&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Latvia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Marshall Islands&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;New Caledonia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Poland&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Slovenia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Sweden&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Upper middle income&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;American Samoa&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Bolivia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;China&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Ecuador&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Georgia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;IDA &amp; IBRD total&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Kosovo&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Macao SAR China&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Montenegro&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Pacific island small states&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Saudi Arabia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;St. Martin (French part)&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Turkmenistan&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <actions>
    <action caption='Highlight1' name='[Action1]'>
      <activation auto-clear='true' type='on-hover' />
      <source dashboard='Dashboard 1' type='sheet' worksheet='Groups' />
      <command command='tsc:brush'>
        <param name='exclude' value='Countries,Groups' />
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard 1' />
      </command>
    </action>
    <action caption='Highlight2' name='[Action2]'>
      <activation auto-clear='true' type='on-hover' />
      <source dashboard='World GDP Dashboard' type='sheet' worksheet='Sheet 5' />
      <command command='tsc:brush'>
        <param name='exclude' value='Sheet 4,Sheet 5' />
        <param name='special-fields' value='all' />
        <param name='target' value='World GDP Dashboard' />
      </command>
    </action>
  </actions>
  <worksheets>
    <worksheet name='Countries'>
      <table>
        <view>
          <datasources>
            <datasource caption='world_gpd_pivoted' name='federated.0opxemw1tglw111h5k6551wiyoo5' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0opxemw1tglw111h5k6551wiyoo5'>
            <column-instance column='[gdp_usd]' derivation='Avg' name='[avg:gdp_usd:qk]' pivot='key' type='quantitative' />
            <column caption='Country Name' datatype='string' name='[country_name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column caption='Gdp Usd' datatype='real' name='[gdp_usd]' role='measure' type='quantitative' />
            <column-instance column='[country_name]' derivation='None' name='[none:country_name:nk]' pivot='key' type='nominal' />
            <column-instance column='[gdp_usd]' derivation='None' name='[none:gdp_usd:qk]' pivot='key' type='quantitative' />
            <column-instance column='[year]' derivation='None' name='[none:year:ok]' pivot='key' type='ordinal' />
            <column-instance column='[gdp_usd]' derivation='Sum' name='[sum:gdp_usd:qk]' pivot='key' type='quantitative' />
            <column aggregation='Sum' caption='Year' datatype='integer' name='[year]' role='dimension' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0opxemw1tglw111h5k6551wiyoo5].[none:country_name:nk]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:country_name:nk]' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[none:country_name:nk]' member='&quot;Arab World&quot;' />
                <groupfilter function='member' level='[none:country_name:nk]' member='&quot;Central Europe and the Baltics&quot;' />
                <groupfilter function='member' level='[none:country_name:nk]' member='&quot;Early-demographic dividend&quot;' />
                <groupfilter function='member' level='[none:country_name:nk]' member='&quot;East Asia &amp; Pacific&quot;' />
                <groupfilter function='member' level='[none:country_name:nk]' member='&quot;East Asia &amp; Pacific (excluding high income)&quot;' />
                <groupfilter function='member' level='[none:country_name:nk]' member='&quot;East Asia &amp; Pacific (IDA &amp; IBRD countries)&quot;' />
                <groupfilter function='member' level='[none:country_name:nk]' member='&quot;Euro area&quot;' />
                <groupfilter function='member' level='[none:country_name:nk]' member='&quot;Europe &amp; Central Asia&quot;' />
                <groupfilter function='member' level='[none:country_name:nk]' member='&quot;Europe &amp; Central Asia (excluding high income)&quot;' />
                <groupfilter function='member' level='[none:country_name:nk]' member='&quot;Europe &amp; Central Asia (IDA &amp; IBRD countries)&quot;' />
                <groupfilter function='member' level='[none:country_name:nk]' member='&quot;European Union&quot;' />
                <groupfilter function='member' level='[none:country_name:nk]' member='&quot;Fragile and conflict affected situations&quot;' />
                <groupfilter function='member' level='[none:country_name:nk]' member='&quot;Heavily indebted poor countries (HIPC)&quot;' />
                <groupfilter function='member' level='[none:country_name:nk]' member='&quot;High income&quot;' />
                <groupfilter function='member' level='[none:country_name:nk]' member='&quot;IBRD only&quot;' />
                <groupfilter function='member' level='[none:country_name:nk]' member='&quot;IDA &amp; IBRD total&quot;' />
                <groupfilter function='member' level='[none:country_name:nk]' member='&quot;IDA blend&quot;' />
                <groupfilter function='member' level='[none:country_name:nk]' member='&quot;IDA only&quot;' />
                <groupfilter function='member' level='[none:country_name:nk]' member='&quot;IDA total&quot;' />
                <groupfilter function='member' level='[none:country_name:nk]' member='&quot;Late-demographic dividend&quot;' />
                <groupfilter function='member' level='[none:country_name:nk]' member='&quot;Latin America &amp; Caribbean&quot;' />
                <groupfilter function='member' level='[none:country_name:nk]' member='&quot;Latin America &amp; Caribbean (excluding high income)&quot;' />
                <groupfilter function='member' level='[none:country_name:nk]' member='&quot;Latin America &amp; the Caribbean (IDA &amp; IBRD countries)&quot;' />
                <groupfilter function='member' level='[none:country_name:nk]' member='&quot;Least developed countries: UN classification&quot;' />
                <groupfilter function='member' level='[none:country_name:nk]' member='&quot;Low &amp; middle income&quot;' />
                <groupfilter function='member' level='[none:country_name:nk]' member='&quot;Lower middle income&quot;' />
                <groupfilter function='member' level='[none:country_name:nk]' member='&quot;Middle East &amp; North Africa&quot;' />
                <groupfilter function='member' level='[none:country_name:nk]' member='&quot;Middle East &amp; North Africa (excluding high income)&quot;' />
                <groupfilter function='member' level='[none:country_name:nk]' member='&quot;Middle East &amp; North Africa (IDA &amp; IBRD countries)&quot;' />
                <groupfilter function='member' level='[none:country_name:nk]' member='&quot;Middle income&quot;' />
                <groupfilter function='member' level='[none:country_name:nk]' member='&quot;North America&quot;' />
                <groupfilter function='member' level='[none:country_name:nk]' member='&quot;OECD members&quot;' />
                <groupfilter function='member' level='[none:country_name:nk]' member='&quot;Post-demographic dividend&quot;' />
                <groupfilter function='member' level='[none:country_name:nk]' member='&quot;Pre-demographic dividend&quot;' />
                <groupfilter function='member' level='[none:country_name:nk]' member='&quot;Small states&quot;' />
                <groupfilter function='member' level='[none:country_name:nk]' member='&quot;South Asia&quot;' />
                <groupfilter function='member' level='[none:country_name:nk]' member='&quot;South Asia (IDA &amp; IBRD)&quot;' />
                <groupfilter function='member' level='[none:country_name:nk]' member='&quot;Sub-Saharan Africa&quot;' />
                <groupfilter function='member' level='[none:country_name:nk]' member='&quot;Sub-Saharan Africa (excluding high income)&quot;' />
                <groupfilter function='member' level='[none:country_name:nk]' member='&quot;Sub-Saharan Africa (IDA &amp; IBRD countries)&quot;' />
                <groupfilter function='member' level='[none:country_name:nk]' member='&quot;Upper middle income&quot;' />
                <groupfilter function='member' level='[none:country_name:nk]' member='&quot;World&quot;' />
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='quantitative' column='[federated.0opxemw1tglw111h5k6551wiyoo5].[none:gdp_usd:qk]' included-values='in-range'>
            <min>1.0</min>
          </filter>
          <filter class='categorical' column='[federated.0opxemw1tglw111h5k6551wiyoo5].[none:year:ok]' filter-group='3'>
            <groupfilter function='member' level='[none:year:ok]' member='2016' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0opxemw1tglw111h5k6551wiyoo5].[none:country_name:nk]</column>
            <column>[federated.0opxemw1tglw111h5k6551wiyoo5].[none:year:ok]</column>
            <column>[federated.0opxemw1tglw111h5k6551wiyoo5].[none:gdp_usd:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.0opxemw1tglw111h5k6551wiyoo5].[sum:gdp_usd:qk]' num-steps='20' palette='blue_10_0' type='interpolated' />
            <encoding attr='color' field='[federated.0opxemw1tglw111h5k6551wiyoo5].[avg:gdp_usd:qk]' num-steps='5' type='interpolated' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='tab_base' value='true' />
            <format attr='enabled' id='um_lcover' value='true' />
            <format attr='enabled' id='tab_coastline' value='false' />
            <format attr='enabled' id='pp2_line' value='false' />
            <format attr='enabled' id='light_adm0_bnd' value='false' />
            <format attr='enabled' id='light_adm0_lbl' value='false' />
            <format attr='enabled' id='um_adm0_bnd' value='true' />
            <format attr='enabled' id='um_adm0_lbl' value='true' />
            <format attr='enabled' id='light_pp2_statebounds' value='false' />
            <format attr='enabled' id='light_pp2_statelabels' value='false' />
            <format attr='enabled' id='pp2_adminlabels' value='false' />
            <format attr='enabled' id='pp2_statebounds' value='true' />
            <format attr='enabled' id='pp2_statelabels' value='true' />
            <format attr='enabled' id='countybounds' value='false' />
            <format attr='enabled' id='countylabels' value='false' />
            <format attr='enabled' id='zipbounds' value='false' />
            <format attr='enabled' id='ziplabels' value='false' />
            <format attr='enabled' id='tab_areabounds' value='false' />
            <format attr='enabled' id='tab_arealabels' value='false' />
            <format attr='enabled' id='tab_msabounds' value='false' />
            <format attr='enabled' id='tab_msalabels' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.0opxemw1tglw111h5k6551wiyoo5].[sum:gdp_usd:qk]' />
              <text column='[federated.0opxemw1tglw111h5k6551wiyoo5].[none:country_name:nk]' />
              <lod column='[federated.0opxemw1tglw111h5k6551wiyoo5].[none:country_name:nk]' />
              <size column='[federated.0opxemw1tglw111h5k6551wiyoo5].[avg:gdp_usd:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0opxemw1tglw111h5k6551wiyoo5].[Latitude (generated)]</rows>
        <cols>[federated.0opxemw1tglw111h5k6551wiyoo5].[Longitude (generated)]</cols>
      </table>
    </worksheet>
    <worksheet name='Groups'>
      <table>
        <view>
          <datasources>
            <datasource caption='world_gpd_pivoted' name='federated.0opxemw1tglw111h5k6551wiyoo5' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0opxemw1tglw111h5k6551wiyoo5'>
            <column-instance column='[gdp_usd]' derivation='Avg' name='[avg:gdp_usd:qk]' pivot='key' type='quantitative' />
            <column caption='Country Name' datatype='string' name='[country_name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column caption='Gdp Usd' datatype='real' name='[gdp_usd]' role='measure' type='quantitative' />
            <column-instance column='[country_name]' derivation='None' name='[none:country_name:nk]' pivot='key' type='nominal' />
            <column-instance column='[year]' derivation='None' name='[none:year:ok]' pivot='key' type='ordinal' />
            <column aggregation='Sum' caption='Year' datatype='integer' name='[year]' role='dimension' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0opxemw1tglw111h5k6551wiyoo5].[none:country_name:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:country_name:nk]' member='&quot;Arab World&quot;' />
              <groupfilter function='member' level='[none:country_name:nk]' member='&quot;Caribbean small states&quot;' />
              <groupfilter function='member' level='[none:country_name:nk]' member='&quot;Central Europe and the Baltics&quot;' />
              <groupfilter function='member' level='[none:country_name:nk]' member='&quot;East Asia &amp; Pacific&quot;' />
              <groupfilter function='member' level='[none:country_name:nk]' member='&quot;Europe &amp; Central Asia&quot;' />
              <groupfilter function='member' level='[none:country_name:nk]' member='&quot;European Union&quot;' />
              <groupfilter function='member' level='[none:country_name:nk]' member='&quot;Latin America &amp; Caribbean&quot;' />
              <groupfilter function='member' level='[none:country_name:nk]' member='&quot;Middle East &amp; North Africa&quot;' />
              <groupfilter function='member' level='[none:country_name:nk]' member='&quot;North America&quot;' />
              <groupfilter function='member' level='[none:country_name:nk]' member='&quot;OECD members&quot;' />
              <groupfilter function='member' level='[none:country_name:nk]' member='&quot;Pacific island small states&quot;' />
              <groupfilter function='member' level='[none:country_name:nk]' member='&quot;South Asia&quot;' />
              <groupfilter function='member' level='[none:country_name:nk]' member='&quot;Sub-Saharan Africa&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0opxemw1tglw111h5k6551wiyoo5].[none:year:ok]' filter-group='3'>
            <groupfilter function='member' level='[none:year:ok]' member='2016' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0opxemw1tglw111h5k6551wiyoo5].[none:country_name:nk]</column>
            <column>[federated.0opxemw1tglw111h5k6551wiyoo5].[none:year:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.0opxemw1tglw111h5k6551wiyoo5].[avg:gdp_usd:qk]' num-steps='5' type='interpolated' />
            <encoding attr='size-bar' field='[federated.0opxemw1tglw111h5k6551wiyoo5].[avg:gdp_usd:qk]' field-type='quantitative' max-size='1' min-size='0.005' type='centersize' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='tab_base' value='true' />
            <format attr='enabled' id='um_lcover' value='true' />
            <format attr='enabled' id='tab_coastline' value='false' />
            <format attr='enabled' id='pp2_line' value='false' />
            <format attr='enabled' id='light_adm0_bnd' value='false' />
            <format attr='enabled' id='light_adm0_lbl' value='false' />
            <format attr='enabled' id='um_adm0_bnd' value='true' />
            <format attr='enabled' id='um_adm0_lbl' value='true' />
            <format attr='enabled' id='light_pp2_statebounds' value='false' />
            <format attr='enabled' id='light_pp2_statelabels' value='false' />
            <format attr='enabled' id='pp2_adminlabels' value='false' />
            <format attr='enabled' id='pp2_statebounds' value='true' />
            <format attr='enabled' id='pp2_statelabels' value='true' />
            <format attr='enabled' id='countybounds' value='false' />
            <format attr='enabled' id='countylabels' value='false' />
            <format attr='enabled' id='zipbounds' value='false' />
            <format attr='enabled' id='ziplabels' value='false' />
            <format attr='enabled' id='tab_areabounds' value='false' />
            <format attr='enabled' id='tab_arealabels' value='false' />
            <format attr='enabled' id='tab_msabounds' value='false' />
            <format attr='enabled' id='tab_msalabels' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='on' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <size column='[federated.0opxemw1tglw111h5k6551wiyoo5].[avg:gdp_usd:qk]' />
              <color column='[federated.0opxemw1tglw111h5k6551wiyoo5].[avg:gdp_usd:qk]' />
              <text column='[federated.0opxemw1tglw111h5k6551wiyoo5].[none:country_name:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
    </worksheet>
    <worksheet name='Sheet 4'>
      <layout-options>
        <title>
          <formatted-text>
            <run>2016 Country GDP</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='world_gpd_pivoted' name='federated.0opxemw1tglw111h5k6551wiyoo5' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0opxemw1tglw111h5k6551wiyoo5'>
            <column-instance column='[gdp_usd]' derivation='Avg' name='[avg:gdp_usd:qk]' pivot='key' type='quantitative' />
            <column caption='Country Name' datatype='string' name='[country_name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column caption='Gdp Usd' datatype='real' name='[gdp_usd]' role='measure' type='quantitative' />
            <column-instance column='[country_name]' derivation='None' name='[none:country_name:nk]' pivot='key' type='nominal' />
            <column-instance column='[gdp_usd]' derivation='None' name='[none:gdp_usd:qk]' pivot='key' type='quantitative' />
            <column-instance column='[year]' derivation='None' name='[none:year:ok]' pivot='key' type='ordinal' />
            <column-instance column='[gdp_usd]' derivation='Sum' name='[sum:gdp_usd:qk]' pivot='key' type='quantitative' />
            <column aggregation='Sum' caption='Year' datatype='integer' name='[year]' role='dimension' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0opxemw1tglw111h5k6551wiyoo5].[none:country_name:nk]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:country_name:nk]' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[none:country_name:nk]' member='&quot;Arab World&quot;' />
                <groupfilter function='member' level='[none:country_name:nk]' member='&quot;Central Europe and the Baltics&quot;' />
                <groupfilter function='member' level='[none:country_name:nk]' member='&quot;Early-demographic dividend&quot;' />
                <groupfilter function='member' level='[none:country_name:nk]' member='&quot;East Asia &amp; Pacific&quot;' />
                <groupfilter function='member' level='[none:country_name:nk]' member='&quot;East Asia &amp; Pacific (excluding high income)&quot;' />
                <groupfilter function='member' level='[none:country_name:nk]' member='&quot;East Asia &amp; Pacific (IDA &amp; IBRD countries)&quot;' />
                <groupfilter function='member' level='[none:country_name:nk]' member='&quot;Euro area&quot;' />
                <groupfilter function='member' level='[none:country_name:nk]' member='&quot;Europe &amp; Central Asia&quot;' />
                <groupfilter function='member' level='[none:country_name:nk]' member='&quot;Europe &amp; Central Asia (excluding high income)&quot;' />
                <groupfilter function='member' level='[none:country_name:nk]' member='&quot;Europe &amp; Central Asia (IDA &amp; IBRD countries)&quot;' />
                <groupfilter function='member' level='[none:country_name:nk]' member='&quot;European Union&quot;' />
                <groupfilter function='member' level='[none:country_name:nk]' member='&quot;Fragile and conflict affected situations&quot;' />
                <groupfilter function='member' level='[none:country_name:nk]' member='&quot;Heavily indebted poor countries (HIPC)&quot;' />
                <groupfilter function='member' level='[none:country_name:nk]' member='&quot;High income&quot;' />
                <groupfilter function='member' level='[none:country_name:nk]' member='&quot;IBRD only&quot;' />
                <groupfilter function='member' level='[none:country_name:nk]' member='&quot;IDA &amp; IBRD total&quot;' />
                <groupfilter function='member' level='[none:country_name:nk]' member='&quot;IDA blend&quot;' />
                <groupfilter function='member' level='[none:country_name:nk]' member='&quot;IDA only&quot;' />
                <groupfilter function='member' level='[none:country_name:nk]' member='&quot;IDA total&quot;' />
                <groupfilter function='member' level='[none:country_name:nk]' member='&quot;Late-demographic dividend&quot;' />
                <groupfilter function='member' level='[none:country_name:nk]' member='&quot;Latin America &amp; Caribbean&quot;' />
                <groupfilter function='member' level='[none:country_name:nk]' member='&quot;Latin America &amp; Caribbean (excluding high income)&quot;' />
                <groupfilter function='member' level='[none:country_name:nk]' member='&quot;Latin America &amp; the Caribbean (IDA &amp; IBRD countries)&quot;' />
                <groupfilter function='member' level='[none:country_name:nk]' member='&quot;Least developed countries: UN classification&quot;' />
                <groupfilter function='member' level='[none:country_name:nk]' member='&quot;Low &amp; middle income&quot;' />
                <groupfilter function='member' level='[none:country_name:nk]' member='&quot;Lower middle income&quot;' />
                <groupfilter function='member' level='[none:country_name:nk]' member='&quot;Middle East &amp; North Africa&quot;' />
                <groupfilter function='member' level='[none:country_name:nk]' member='&quot;Middle East &amp; North Africa (excluding high income)&quot;' />
                <groupfilter function='member' level='[none:country_name:nk]' member='&quot;Middle East &amp; North Africa (IDA &amp; IBRD countries)&quot;' />
                <groupfilter function='member' level='[none:country_name:nk]' member='&quot;Middle income&quot;' />
                <groupfilter function='member' level='[none:country_name:nk]' member='&quot;North America&quot;' />
                <groupfilter function='member' level='[none:country_name:nk]' member='&quot;OECD members&quot;' />
                <groupfilter function='member' level='[none:country_name:nk]' member='&quot;Post-demographic dividend&quot;' />
                <groupfilter function='member' level='[none:country_name:nk]' member='&quot;Pre-demographic dividend&quot;' />
                <groupfilter function='member' level='[none:country_name:nk]' member='&quot;Small states&quot;' />
                <groupfilter function='member' level='[none:country_name:nk]' member='&quot;South Asia&quot;' />
                <groupfilter function='member' level='[none:country_name:nk]' member='&quot;South Asia (IDA &amp; IBRD)&quot;' />
                <groupfilter function='member' level='[none:country_name:nk]' member='&quot;Sub-Saharan Africa&quot;' />
                <groupfilter function='member' level='[none:country_name:nk]' member='&quot;Sub-Saharan Africa (excluding high income)&quot;' />
                <groupfilter function='member' level='[none:country_name:nk]' member='&quot;Sub-Saharan Africa (IDA &amp; IBRD countries)&quot;' />
                <groupfilter function='member' level='[none:country_name:nk]' member='&quot;Upper middle income&quot;' />
                <groupfilter function='member' level='[none:country_name:nk]' member='&quot;World&quot;' />
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='quantitative' column='[federated.0opxemw1tglw111h5k6551wiyoo5].[none:gdp_usd:qk]' included-values='in-range'>
            <min>1.0</min>
          </filter>
          <filter class='categorical' column='[federated.0opxemw1tglw111h5k6551wiyoo5].[none:year:ok]'>
            <groupfilter function='member' level='[none:year:ok]' member='2016' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0opxemw1tglw111h5k6551wiyoo5].[none:country_name:nk]</column>
            <column>[federated.0opxemw1tglw111h5k6551wiyoo5].[none:gdp_usd:qk]</column>
            <column>[federated.0opxemw1tglw111h5k6551wiyoo5].[none:year:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.0opxemw1tglw111h5k6551wiyoo5].[sum:gdp_usd:qk]' num-steps='20' palette='blue_10_0' type='interpolated' />
            <encoding attr='color' field='[federated.0opxemw1tglw111h5k6551wiyoo5].[avg:gdp_usd:qk]' num-steps='5' type='interpolated' />
          </style-rule>
          <style-rule element='legend-title-text'>
            <format attr='color' field='[federated.0opxemw1tglw111h5k6551wiyoo5].[sum:gdp_usd:qk]' value='GDP USD'>
              <formatted-text>
                <run>GDP USD</run>
              </formatted-text>
            </format>
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='tab_base' value='true' />
            <format attr='enabled' id='um_lcover' value='true' />
            <format attr='enabled' id='tab_coastline' value='false' />
            <format attr='enabled' id='pp2_line' value='false' />
            <format attr='enabled' id='light_adm0_bnd' value='false' />
            <format attr='enabled' id='light_adm0_lbl' value='false' />
            <format attr='enabled' id='um_adm0_bnd' value='true' />
            <format attr='enabled' id='um_adm0_lbl' value='true' />
            <format attr='enabled' id='light_pp2_statebounds' value='false' />
            <format attr='enabled' id='light_pp2_statelabels' value='false' />
            <format attr='enabled' id='pp2_adminlabels' value='false' />
            <format attr='enabled' id='pp2_statebounds' value='true' />
            <format attr='enabled' id='pp2_statelabels' value='true' />
            <format attr='enabled' id='countybounds' value='false' />
            <format attr='enabled' id='countylabels' value='false' />
            <format attr='enabled' id='zipbounds' value='false' />
            <format attr='enabled' id='ziplabels' value='false' />
            <format attr='enabled' id='tab_areabounds' value='false' />
            <format attr='enabled' id='tab_arealabels' value='false' />
            <format attr='enabled' id='tab_msabounds' value='false' />
            <format attr='enabled' id='tab_msalabels' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='on' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <size column='[federated.0opxemw1tglw111h5k6551wiyoo5].[avg:gdp_usd:qk]' />
              <color column='[federated.0opxemw1tglw111h5k6551wiyoo5].[sum:gdp_usd:qk]' />
              <text column='[federated.0opxemw1tglw111h5k6551wiyoo5].[none:country_name:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
    </worksheet>
    <worksheet name='Sheet 5'>
      <layout-options>
        <title>
          <formatted-text>
            <run>2016 World GDP</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='world_gpd_pivoted' name='federated.0opxemw1tglw111h5k6551wiyoo5' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0opxemw1tglw111h5k6551wiyoo5'>
            <column-instance column='[gdp_usd]' derivation='Avg' name='[avg:gdp_usd:qk]' pivot='key' type='quantitative' />
            <column caption='Country Name' datatype='string' name='[country_name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column caption='Gdp Usd' datatype='real' name='[gdp_usd]' role='measure' type='quantitative' />
            <column-instance column='[country_name]' derivation='None' name='[none:country_name:nk]' pivot='key' type='nominal' />
            <column-instance column='[year]' derivation='None' name='[none:year:ok]' pivot='key' type='ordinal' />
            <column aggregation='Sum' caption='Year' datatype='integer' name='[year]' role='dimension' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0opxemw1tglw111h5k6551wiyoo5].[none:country_name:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:country_name:nk]' member='&quot;Arab World&quot;' />
              <groupfilter function='member' level='[none:country_name:nk]' member='&quot;Caribbean small states&quot;' />
              <groupfilter function='member' level='[none:country_name:nk]' member='&quot;Central Europe and the Baltics&quot;' />
              <groupfilter function='member' level='[none:country_name:nk]' member='&quot;East Asia &amp; Pacific&quot;' />
              <groupfilter function='member' level='[none:country_name:nk]' member='&quot;Europe &amp; Central Asia&quot;' />
              <groupfilter function='member' level='[none:country_name:nk]' member='&quot;European Union&quot;' />
              <groupfilter function='member' level='[none:country_name:nk]' member='&quot;Latin America &amp; Caribbean&quot;' />
              <groupfilter function='member' level='[none:country_name:nk]' member='&quot;Middle East &amp; North Africa&quot;' />
              <groupfilter function='member' level='[none:country_name:nk]' member='&quot;North America&quot;' />
              <groupfilter function='member' level='[none:country_name:nk]' member='&quot;OECD members&quot;' />
              <groupfilter function='member' level='[none:country_name:nk]' member='&quot;Pacific island small states&quot;' />
              <groupfilter function='member' level='[none:country_name:nk]' member='&quot;Silicon Valley Market Cap&quot;' />
              <groupfilter function='member' level='[none:country_name:nk]' member='&quot;Silicon Valley Revenue&quot;' />
              <groupfilter function='member' level='[none:country_name:nk]' member='&quot;South Asia&quot;' />
              <groupfilter function='member' level='[none:country_name:nk]' member='&quot;Sub-Saharan Africa&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0opxemw1tglw111h5k6551wiyoo5].[none:year:ok]' filter-group='3'>
            <groupfilter function='member' level='[none:year:ok]' member='2016' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0opxemw1tglw111h5k6551wiyoo5].[none:country_name:nk]</column>
            <column>[federated.0opxemw1tglw111h5k6551wiyoo5].[none:year:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.0opxemw1tglw111h5k6551wiyoo5].[avg:gdp_usd:qk]' num-steps='5' type='interpolated' />
            <encoding attr='size-bar' field='[federated.0opxemw1tglw111h5k6551wiyoo5].[avg:gdp_usd:qk]' field-type='quantitative' max-size='1' min-size='0.005' type='centersize' />
          </style-rule>
          <style-rule element='legend-title-text'>
            <format attr='color' field='[federated.0opxemw1tglw111h5k6551wiyoo5].[avg:gdp_usd:qk]' value='Average GDP (USD)'>
              <formatted-text>
                <run>Average GDP (USD)</run>
              </formatted-text>
            </format>
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='tab_base' value='true' />
            <format attr='enabled' id='um_lcover' value='true' />
            <format attr='enabled' id='tab_coastline' value='false' />
            <format attr='enabled' id='pp2_line' value='false' />
            <format attr='enabled' id='light_adm0_bnd' value='false' />
            <format attr='enabled' id='light_adm0_lbl' value='false' />
            <format attr='enabled' id='um_adm0_bnd' value='true' />
            <format attr='enabled' id='um_adm0_lbl' value='true' />
            <format attr='enabled' id='light_pp2_statebounds' value='false' />
            <format attr='enabled' id='light_pp2_statelabels' value='false' />
            <format attr='enabled' id='pp2_adminlabels' value='false' />
            <format attr='enabled' id='pp2_statebounds' value='true' />
            <format attr='enabled' id='pp2_statelabels' value='true' />
            <format attr='enabled' id='countybounds' value='false' />
            <format attr='enabled' id='countylabels' value='false' />
            <format attr='enabled' id='zipbounds' value='false' />
            <format attr='enabled' id='ziplabels' value='false' />
            <format attr='enabled' id='tab_areabounds' value='false' />
            <format attr='enabled' id='tab_arealabels' value='false' />
            <format attr='enabled' id='tab_msabounds' value='false' />
            <format attr='enabled' id='tab_msalabels' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='on' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <size column='[federated.0opxemw1tglw111h5k6551wiyoo5].[avg:gdp_usd:qk]' />
              <color column='[federated.0opxemw1tglw111h5k6551wiyoo5].[avg:gdp_usd:qk]' />
              <text column='[federated.0opxemw1tglw111h5k6551wiyoo5].[none:country_name:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
    </worksheet>
    <worksheet name='Sheet 7'>
      <table>
        <view>
          <datasources>
            <datasource caption='world_gpd_pivoted' name='federated.0opxemw1tglw111h5k6551wiyoo5' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0opxemw1tglw111h5k6551wiyoo5'>
            <column-instance column='[gdp_usd]' derivation='Avg' name='[avg:gdp_usd:qk]' pivot='key' type='quantitative' />
            <column caption='Country Name' datatype='string' name='[country_name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column caption='Gdp Usd' datatype='real' name='[gdp_usd]' role='measure' type='quantitative' />
            <column-instance column='[country_name]' derivation='None' name='[none:country_name:nk]' pivot='key' type='nominal' />
            <column-instance column='[gdp_usd]' derivation='None' name='[none:gdp_usd:qk]' pivot='key' type='quantitative' />
            <column-instance column='[year]' derivation='None' name='[none:year:ok]' pivot='key' type='ordinal' />
            <column aggregation='Sum' caption='Year' datatype='integer' name='[year]' role='dimension' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0opxemw1tglw111h5k6551wiyoo5].[none:country_name:nk]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:country_name:nk]' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[none:country_name:nk]' member='&quot;Arab World&quot;' />
                <groupfilter function='member' level='[none:country_name:nk]' member='&quot;Central Europe and the Baltics&quot;' />
                <groupfilter function='member' level='[none:country_name:nk]' member='&quot;Early-demographic dividend&quot;' />
                <groupfilter function='member' level='[none:country_name:nk]' member='&quot;East Asia &amp; Pacific&quot;' />
                <groupfilter function='member' level='[none:country_name:nk]' member='&quot;East Asia &amp; Pacific (excluding high income)&quot;' />
                <groupfilter function='member' level='[none:country_name:nk]' member='&quot;East Asia &amp; Pacific (IDA &amp; IBRD countries)&quot;' />
                <groupfilter function='member' level='[none:country_name:nk]' member='&quot;Euro area&quot;' />
                <groupfilter function='member' level='[none:country_name:nk]' member='&quot;Europe &amp; Central Asia&quot;' />
                <groupfilter function='member' level='[none:country_name:nk]' member='&quot;Europe &amp; Central Asia (excluding high income)&quot;' />
                <groupfilter function='member' level='[none:country_name:nk]' member='&quot;Europe &amp; Central Asia (IDA &amp; IBRD countries)&quot;' />
                <groupfilter function='member' level='[none:country_name:nk]' member='&quot;European Union&quot;' />
                <groupfilter function='member' level='[none:country_name:nk]' member='&quot;Fragile and conflict affected situations&quot;' />
                <groupfilter function='member' level='[none:country_name:nk]' member='&quot;Heavily indebted poor countries (HIPC)&quot;' />
                <groupfilter function='member' level='[none:country_name:nk]' member='&quot;High income&quot;' />
                <groupfilter function='member' level='[none:country_name:nk]' member='&quot;IBRD only&quot;' />
                <groupfilter function='member' level='[none:country_name:nk]' member='&quot;IDA &amp; IBRD total&quot;' />
                <groupfilter function='member' level='[none:country_name:nk]' member='&quot;IDA blend&quot;' />
                <groupfilter function='member' level='[none:country_name:nk]' member='&quot;IDA only&quot;' />
                <groupfilter function='member' level='[none:country_name:nk]' member='&quot;IDA total&quot;' />
                <groupfilter function='member' level='[none:country_name:nk]' member='&quot;Late-demographic dividend&quot;' />
                <groupfilter function='member' level='[none:country_name:nk]' member='&quot;Latin America &amp; Caribbean&quot;' />
                <groupfilter function='member' level='[none:country_name:nk]' member='&quot;Latin America &amp; Caribbean (excluding high income)&quot;' />
                <groupfilter function='member' level='[none:country_name:nk]' member='&quot;Latin America &amp; the Caribbean (IDA &amp; IBRD countries)&quot;' />
                <groupfilter function='member' level='[none:country_name:nk]' member='&quot;Least developed countries: UN classification&quot;' />
                <groupfilter function='member' level='[none:country_name:nk]' member='&quot;Low &amp; middle income&quot;' />
                <groupfilter function='member' level='[none:country_name:nk]' member='&quot;Lower middle income&quot;' />
                <groupfilter function='member' level='[none:country_name:nk]' member='&quot;Middle East &amp; North Africa&quot;' />
                <groupfilter function='member' level='[none:country_name:nk]' member='&quot;Middle East &amp; North Africa (excluding high income)&quot;' />
                <groupfilter function='member' level='[none:country_name:nk]' member='&quot;Middle East &amp; North Africa (IDA &amp; IBRD countries)&quot;' />
                <groupfilter function='member' level='[none:country_name:nk]' member='&quot;Middle income&quot;' />
                <groupfilter function='member' level='[none:country_name:nk]' member='&quot;North America&quot;' />
                <groupfilter function='member' level='[none:country_name:nk]' member='&quot;OECD members&quot;' />
                <groupfilter function='member' level='[none:country_name:nk]' member='&quot;Post-demographic dividend&quot;' />
                <groupfilter function='member' level='[none:country_name:nk]' member='&quot;Pre-demographic dividend&quot;' />
                <groupfilter function='member' level='[none:country_name:nk]' member='&quot;Small states&quot;' />
                <groupfilter function='member' level='[none:country_name:nk]' member='&quot;South Asia&quot;' />
                <groupfilter function='member' level='[none:country_name:nk]' member='&quot;South Asia (IDA &amp; IBRD)&quot;' />
                <groupfilter function='member' level='[none:country_name:nk]' member='&quot;Sub-Saharan Africa&quot;' />
                <groupfilter function='member' level='[none:country_name:nk]' member='&quot;Sub-Saharan Africa (excluding high income)&quot;' />
                <groupfilter function='member' level='[none:country_name:nk]' member='&quot;Sub-Saharan Africa (IDA &amp; IBRD countries)&quot;' />
                <groupfilter function='member' level='[none:country_name:nk]' member='&quot;Upper middle income&quot;' />
                <groupfilter function='member' level='[none:country_name:nk]' member='&quot;World&quot;' />
              </groupfilter>
            </groupfilter>
          </filter>
          <sort class='manual' column='[federated.0opxemw1tglw111h5k6551wiyoo5].[none:country_name:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;United States&quot;</bucket>
              <bucket>&quot;China&quot;</bucket>
              <bucket>&quot;Silicon Valley Market Cap&quot;</bucket>
              <bucket>&quot;Japan&quot;</bucket>
              <bucket>&quot;Germany&quot;</bucket>
              <bucket>&quot;United Kingdom&quot;</bucket>
              <bucket>&quot;France&quot;</bucket>
              <bucket>&quot;India&quot;</bucket>
              <bucket>&quot;Italy&quot;</bucket>
              <bucket>&quot;Silicon Valley Revenue&quot;</bucket>
              <bucket>&quot;Brazil&quot;</bucket>
              <bucket>&quot;Canada&quot;</bucket>
              <bucket>&quot;Korea Rep.&quot;</bucket>
              <bucket>&quot;Russian Federation&quot;</bucket>
              <bucket>&quot;Spain&quot;</bucket>
              <bucket>&quot;Australia&quot;</bucket>
              <bucket>&quot;Mexico&quot;</bucket>
              <bucket>&quot;Indonesia&quot;</bucket>
              <bucket>&quot;Turkey&quot;</bucket>
              <bucket>&quot;Netherlands&quot;</bucket>
              <bucket>&quot;Switzerland&quot;</bucket>
              <bucket>&quot;Saudi Arabia&quot;</bucket>
              <bucket>&quot;Argentina&quot;</bucket>
              <bucket>&quot;Sweden&quot;</bucket>
              <bucket>&quot;Poland&quot;</bucket>
              <bucket>&quot;Belgium&quot;</bucket>
              <bucket>&quot;Thailand&quot;</bucket>
              <bucket>&quot;Low income&quot;</bucket>
              <bucket>&quot;Nigeria&quot;</bucket>
              <bucket>&quot;Austria&quot;</bucket>
              <bucket>&quot;Norway&quot;</bucket>
              <bucket>&quot;Other small states&quot;</bucket>
              <bucket>&quot;United Arab Emirates&quot;</bucket>
              <bucket>&quot;Egypt Arab Rep.&quot;</bucket>
              <bucket>&quot;Hong Kong SAR China&quot;</bucket>
              <bucket>&quot;Israel&quot;</bucket>
              <bucket>&quot;Denmark&quot;</bucket>
              <bucket>&quot;Philippines&quot;</bucket>
              <bucket>&quot;Singapore&quot;</bucket>
              <bucket>&quot;Malaysia&quot;</bucket>
              <bucket>&quot;South Africa&quot;</bucket>
              <bucket>&quot;Ireland&quot;</bucket>
              <bucket>&quot;Pakistan&quot;</bucket>
              <bucket>&quot;Colombia&quot;</bucket>
              <bucket>&quot;Chile&quot;</bucket>
              <bucket>&quot;Finland&quot;</bucket>
              <bucket>&quot;Bangladesh&quot;</bucket>
              <bucket>&quot;Portugal&quot;</bucket>
              <bucket>&quot;Vietnam&quot;</bucket>
              <bucket>&quot;Greece&quot;</bucket>
              <bucket>&quot;Czech Republic&quot;</bucket>
              <bucket>&quot;Peru&quot;</bucket>
              <bucket>&quot;Romania&quot;</bucket>
              <bucket>&quot;New Zealand&quot;</bucket>
              <bucket>&quot;Iraq&quot;</bucket>
              <bucket>&quot;Algeria&quot;</bucket>
              <bucket>&quot;Qatar&quot;</bucket>
              <bucket>&quot;Kazakhstan&quot;</bucket>
              <bucket>&quot;Hungary&quot;</bucket>
              <bucket>&quot;Morocco&quot;</bucket>
              <bucket>&quot;Ecuador&quot;</bucket>
              <bucket>&quot;Sudan&quot;</bucket>
              <bucket>&quot;Ukraine&quot;</bucket>
              <bucket>&quot;Angola&quot;</bucket>
              <bucket>&quot;Slovak Republic&quot;</bucket>
              <bucket>&quot;Sri Lanka&quot;</bucket>
              <bucket>&quot;Ethiopia&quot;</bucket>
              <bucket>&quot;Dominican Republic&quot;</bucket>
              <bucket>&quot;Kenya&quot;</bucket>
              <bucket>&quot;Guatemala&quot;</bucket>
              <bucket>&quot;Myanmar&quot;</bucket>
              <bucket>&quot;Uzbekistan&quot;</bucket>
              <bucket>&quot;Oman&quot;</bucket>
              <bucket>&quot;Caribbean small states&quot;</bucket>
              <bucket>&quot;Luxembourg&quot;</bucket>
              <bucket>&quot;Costa Rica&quot;</bucket>
              <bucket>&quot;Panama&quot;</bucket>
              <bucket>&quot;Uruguay&quot;</bucket>
              <bucket>&quot;Bulgaria&quot;</bucket>
              <bucket>&quot;Croatia&quot;</bucket>
              <bucket>&quot;Lebanon&quot;</bucket>
              <bucket>&quot;Belarus&quot;</bucket>
              <bucket>&quot;Tanzania&quot;</bucket>
              <bucket>&quot;Macao SAR China&quot;</bucket>
              <bucket>&quot;Slovenia&quot;</bucket>
              <bucket>&quot;Lithuania&quot;</bucket>
              <bucket>&quot;Ghana&quot;</bucket>
              <bucket>&quot;Tunisia&quot;</bucket>
              <bucket>&quot;Jordan&quot;</bucket>
              <bucket>&quot;Azerbaijan&quot;</bucket>
              <bucket>&quot;Serbia&quot;</bucket>
              <bucket>&quot;Turkmenistan&quot;</bucket>
              <bucket>&quot;Cote d&apos;Ivoire&quot;</bucket>
              <bucket>&quot;Congo Dem. Rep.&quot;</bucket>
              <bucket>&quot;Bolivia&quot;</bucket>
              <bucket>&quot;Bahrain&quot;</bucket>
              <bucket>&quot;Latvia&quot;</bucket>
              <bucket>&quot;Paraguay&quot;</bucket>
              <bucket>&quot;Yemen Rep.&quot;</bucket>
              <bucket>&quot;El Salvador&quot;</bucket>
              <bucket>&quot;Uganda&quot;</bucket>
              <bucket>&quot;Cameroon&quot;</bucket>
              <bucket>&quot;Estonia&quot;</bucket>
              <bucket>&quot;Honduras&quot;</bucket>
              <bucket>&quot;Nepal&quot;</bucket>
              <bucket>&quot;Trinidad and Tobago&quot;</bucket>
              <bucket>&quot;Iceland&quot;</bucket>
              <bucket>&quot;Cambodia&quot;</bucket>
              <bucket>&quot;Cyprus&quot;</bucket>
              <bucket>&quot;Zambia&quot;</bucket>
              <bucket>&quot;Afghanistan&quot;</bucket>
              <bucket>&quot;Bosnia and Herzegovina&quot;</bucket>
              <bucket>&quot;Zimbabwe&quot;</bucket>
              <bucket>&quot;Lao PDR&quot;</bucket>
              <bucket>&quot;Botswana&quot;</bucket>
              <bucket>&quot;Senegal&quot;</bucket>
              <bucket>&quot;Georgia&quot;</bucket>
              <bucket>&quot;Gabon&quot;</bucket>
              <bucket>&quot;Mali&quot;</bucket>
              <bucket>&quot;Jamaica&quot;</bucket>
              <bucket>&quot;West Bank and Gaza&quot;</bucket>
              <bucket>&quot;Nicaragua&quot;</bucket>
              <bucket>&quot;Mauritius&quot;</bucket>
              <bucket>&quot;Burkina Faso&quot;</bucket>
              <bucket>&quot;Albania&quot;</bucket>
              <bucket>&quot;Brunei Darussalam&quot;</bucket>
              <bucket>&quot;Mongolia&quot;</bucket>
              <bucket>&quot;Mozambique&quot;</bucket>
              <bucket>&quot;Malta&quot;</bucket>
              <bucket>&quot;Macedonia FYR&quot;</bucket>
              <bucket>&quot;Armenia&quot;</bucket>
              <bucket>&quot;Namibia&quot;</bucket>
              <bucket>&quot;Equatorial Guinea&quot;</bucket>
              <bucket>&quot;Madagascar&quot;</bucket>
              <bucket>&quot;Chad&quot;</bucket>
              <bucket>&quot;Bahamas The&quot;</bucket>
              <bucket>&quot;Pacific island small states&quot;</bucket>
              <bucket>&quot;Benin&quot;</bucket>
              <bucket>&quot;Rwanda&quot;</bucket>
              <bucket>&quot;Haiti&quot;</bucket>
              <bucket>&quot;Congo Rep.&quot;</bucket>
              <bucket>&quot;Niger&quot;</bucket>
              <bucket>&quot;Tajikistan&quot;</bucket>
              <bucket>&quot;Moldova&quot;</bucket>
              <bucket>&quot;Kosovo&quot;</bucket>
              <bucket>&quot;Kyrgyz Republic&quot;</bucket>
              <bucket>&quot;Guinea&quot;</bucket>
              <bucket>&quot;Somalia&quot;</bucket>
              <bucket>&quot;Malawi&quot;</bucket>
              <bucket>&quot;Mauritania&quot;</bucket>
              <bucket>&quot;Fiji&quot;</bucket>
              <bucket>&quot;Barbados&quot;</bucket>
              <bucket>&quot;Togo&quot;</bucket>
              <bucket>&quot;Montenegro&quot;</bucket>
              <bucket>&quot;Swaziland&quot;</bucket>
              <bucket>&quot;Sierra Leone&quot;</bucket>
              <bucket>&quot;Suriname&quot;</bucket>
              <bucket>&quot;Maldives&quot;</bucket>
              <bucket>&quot;Guyana&quot;</bucket>
              <bucket>&quot;Burundi&quot;</bucket>
              <bucket>&quot;Bhutan&quot;</bucket>
              <bucket>&quot;Lesotho&quot;</bucket>
              <bucket>&quot;Liberia&quot;</bucket>
              <bucket>&quot;Belize&quot;</bucket>
              <bucket>&quot;Central African Republic&quot;</bucket>
              <bucket>&quot;Cabo Verde&quot;</bucket>
              <bucket>&quot;Antigua and Barbuda&quot;</bucket>
              <bucket>&quot;Seychelles&quot;</bucket>
              <bucket>&quot;St. Lucia&quot;</bucket>
              <bucket>&quot;Solomon Islands&quot;</bucket>
              <bucket>&quot;Guinea-Bissau&quot;</bucket>
              <bucket>&quot;Grenada&quot;</bucket>
              <bucket>&quot;Gambia The&quot;</bucket>
              <bucket>&quot;St. Kitts and Nevis&quot;</bucket>
              <bucket>&quot;Samoa&quot;</bucket>
              <bucket>&quot;Vanuatu&quot;</bucket>
              <bucket>&quot;St. Vincent and the Grenadines&quot;</bucket>
              <bucket>&quot;Comoros&quot;</bucket>
              <bucket>&quot;Dominica&quot;</bucket>
              <bucket>&quot;Tonga&quot;</bucket>
              <bucket>&quot;Sao Tome and Principe&quot;</bucket>
              <bucket>&quot;Micronesia Fed. Sts.&quot;</bucket>
              <bucket>&quot;Palau&quot;</bucket>
              <bucket>&quot;Marshall Islands&quot;</bucket>
              <bucket>&quot;Kiribati&quot;</bucket>
              <bucket>&quot;Nauru&quot;</bucket>
              <bucket>&quot;Tuvalu&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </sort>
          <filter class='quantitative' column='[federated.0opxemw1tglw111h5k6551wiyoo5].[none:gdp_usd:qk]' included-values='in-range'>
            <min>1.0</min>
          </filter>
          <filter class='categorical' column='[federated.0opxemw1tglw111h5k6551wiyoo5].[none:year:ok]' filter-group='3'>
            <groupfilter function='member' level='[none:year:ok]' member='2016' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0opxemw1tglw111h5k6551wiyoo5].[none:country_name:nk]</column>
            <column>[federated.0opxemw1tglw111h5k6551wiyoo5].[none:year:ok]</column>
            <column>[federated.0opxemw1tglw111h5k6551wiyoo5].[none:gdp_usd:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.0opxemw1tglw111h5k6551wiyoo5].[avg:gdp_usd:qk]' num-steps='5' type='interpolated' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='tab_base' value='true' />
            <format attr='enabled' id='um_lcover' value='true' />
            <format attr='enabled' id='tab_coastline' value='false' />
            <format attr='enabled' id='pp2_line' value='false' />
            <format attr='enabled' id='light_adm0_bnd' value='false' />
            <format attr='enabled' id='light_adm0_lbl' value='false' />
            <format attr='enabled' id='um_adm0_bnd' value='true' />
            <format attr='enabled' id='um_adm0_lbl' value='true' />
            <format attr='enabled' id='light_pp2_statebounds' value='false' />
            <format attr='enabled' id='light_pp2_statelabels' value='false' />
            <format attr='enabled' id='pp2_adminlabels' value='false' />
            <format attr='enabled' id='pp2_statebounds' value='true' />
            <format attr='enabled' id='pp2_statelabels' value='true' />
            <format attr='enabled' id='countybounds' value='false' />
            <format attr='enabled' id='countylabels' value='false' />
            <format attr='enabled' id='zipbounds' value='false' />
            <format attr='enabled' id='ziplabels' value='false' />
            <format attr='enabled' id='tab_areabounds' value='false' />
            <format attr='enabled' id='tab_arealabels' value='false' />
            <format attr='enabled' id='tab_msabounds' value='false' />
            <format attr='enabled' id='tab_msalabels' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.0opxemw1tglw111h5k6551wiyoo5].[avg:gdp_usd:qk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0opxemw1tglw111h5k6551wiyoo5].[none:country_name:nk]</rows>
        <cols />
      </table>
    </worksheet>
    <worksheet name='World &amp; Group'>
      <layout-options>
        <title>
          <formatted-text>
            <run>World &amp; Country GDP Time Series</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='world_gpd_pivoted' name='federated.0opxemw1tglw111h5k6551wiyoo5' />
          </datasources>
          <datasource-dependencies datasource='federated.0opxemw1tglw111h5k6551wiyoo5'>
            <column-instance column='[gdp_usd]' derivation='Avg' name='[avg:gdp_usd:qk]' pivot='key' type='quantitative' />
            <column caption='Country Name' datatype='string' name='[country_name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column caption='Gdp Usd' datatype='real' name='[gdp_usd]' role='measure' type='quantitative' />
            <column-instance column='[country_name]' derivation='None' name='[none:country_name:nk]' pivot='key' type='nominal' />
            <column-instance column='[year]' derivation='None' name='[none:year:qk]' pivot='key' type='quantitative' />
            <column aggregation='Sum' caption='Year' datatype='integer' name='[year]' role='dimension' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0opxemw1tglw111h5k6551wiyoo5].[none:country_name:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:country_name:nk]' member='&quot;Arab World&quot;' />
              <groupfilter function='member' level='[none:country_name:nk]' member='&quot;Central African Republic&quot;' />
              <groupfilter function='member' level='[none:country_name:nk]' member='&quot;Central Europe and the Baltics&quot;' />
              <groupfilter function='member' level='[none:country_name:nk]' member='&quot;East Asia &amp; Pacific&quot;' />
              <groupfilter function='member' level='[none:country_name:nk]' member='&quot;Euro area&quot;' />
              <groupfilter function='member' level='[none:country_name:nk]' member='&quot;Europe &amp; Central Asia&quot;' />
              <groupfilter function='member' level='[none:country_name:nk]' member='&quot;European Union&quot;' />
              <groupfilter function='member' level='[none:country_name:nk]' member='&quot;Latin America &amp; Caribbean&quot;' />
              <groupfilter function='member' level='[none:country_name:nk]' member='&quot;Middle East &amp; North Africa&quot;' />
              <groupfilter function='member' level='[none:country_name:nk]' member='&quot;North America&quot;' />
              <groupfilter function='member' level='[none:country_name:nk]' member='&quot;OECD members&quot;' />
              <groupfilter function='member' level='[none:country_name:nk]' member='&quot;Pacific island small states&quot;' />
              <groupfilter function='member' level='[none:country_name:nk]' member='&quot;Sub-Saharan Africa&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0opxemw1tglw111h5k6551wiyoo5].[none:country_name:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.0opxemw1tglw111h5k6551wiyoo5].[avg:gdp_usd:qk]' scope='rows' value='GDP (USD)' />
            <format attr='subtitle' class='0' field='[federated.0opxemw1tglw111h5k6551wiyoo5].[avg:gdp_usd:qk]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[federated.0opxemw1tglw111h5k6551wiyoo5].[avg:gdp_usd:qk]' scope='rows' value='true' />
            <format attr='width' field='[federated.0opxemw1tglw111h5k6551wiyoo5].[avg:gdp_usd:qk]' value='40' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Area' />
            <encodings>
              <color column='[federated.0opxemw1tglw111h5k6551wiyoo5].[none:country_name:nk]' />
              <text column='[federated.0opxemw1tglw111h5k6551wiyoo5].[none:country_name:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0opxemw1tglw111h5k6551wiyoo5].[avg:gdp_usd:qk]</rows>
        <cols>[federated.0opxemw1tglw111h5k6551wiyoo5].[none:year:qk]</cols>
      </table>
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard name='Dashboard 1'>
      <style />
      <size sizing-mode='automatic' />
      <datasources>
        <datasource caption='world_gpd_pivoted' name='federated.0opxemw1tglw111h5k6551wiyoo5' />
      </datasources>
      <datasource-dependencies datasource='federated.0opxemw1tglw111h5k6551wiyoo5'>
        <column-instance column='[year]' derivation='None' name='[none:year:ok]' pivot='key' type='ordinal' />
        <column aggregation='Sum' caption='Year' datatype='integer' name='[year]' role='dimension' type='ordinal' />
      </datasource-dependencies>
      <zones use-insets='false'>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='61282' id='5' param='horz' type='layout-flow' w='99064' x='468' y='885'>
            <zone h='61282' id='3' type='layout-basic' w='89702' x='468' y='885'>
              <zone h='61282' id='1' name='Countries' w='44851' x='468' y='885'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='61282' id='8' name='Groups' w='44851' x='45319' y='885'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
            <zone fixed-size='160' h='61282' id='4' is-fixed='true' param='vert' type='layout-flow' w='9362' x='90170' y='885'>
              <zone h='5752' id='6' mode='dropdown' name='Countries' param='[federated.0opxemw1tglw111h5k6551wiyoo5].[none:year:ok]' type='filter' w='9362' x='90170' y='885'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='7190' id='7' name='Countries' pane-specification-id='0' param='[federated.0opxemw1tglw111h5k6551wiyoo5].[sum:gdp_usd:qk]' type='color' w='9362' x='90170' y='6637'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='31637' id='11' name='World &amp; Group' pane-specification-id='0' param='[federated.0opxemw1tglw111h5k6551wiyoo5].[none:country_name:nk]' type='color' w='9362' x='90170' y='13827'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone h='36948' id='10' name='World &amp; Group' w='99064' x='468' y='62167'>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
    </dashboard>
    <dashboard name='Dashboard 3'>
      <style />
      <size sizing-mode='automatic' />
      <datasources>
        <datasource caption='world_gpd_pivoted' name='federated.0opxemw1tglw111h5k6551wiyoo5' />
      </datasources>
      <datasource-dependencies datasource='federated.0opxemw1tglw111h5k6551wiyoo5'>
        <column-instance column='[year]' derivation='None' name='[none:year:ok]' pivot='key' type='ordinal' />
        <column aggregation='Sum' caption='Year' datatype='integer' name='[year]' role='dimension' type='ordinal' />
      </datasource-dependencies>
      <zones use-insets='false'>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='98230' id='5' param='horz' type='layout-flow' w='99064' x='468' y='885'>
            <zone h='98230' id='3' type='layout-basic' w='89702' x='468' y='885'>
              <zone h='98230' id='1' name='Sheet 7' w='44851' x='45319' y='885'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='49115' id='7' name='Sheet 4' w='44851' x='468' y='885'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='49115' id='9' name='Sheet 5' w='44851' x='468' y='50000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
            <zone fixed-size='160' h='98230' id='4' is-fixed='true' param='vert' type='layout-flow' w='9362' x='90170' y='885'>
              <zone h='5752' id='6' mode='dropdown' name='Sheet 7' param='[federated.0opxemw1tglw111h5k6551wiyoo5].[none:year:ok]' type='filter' w='9362' x='90170' y='885'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='7190' id='8' name='Sheet 4' pane-specification-id='0' param='[federated.0opxemw1tglw111h5k6551wiyoo5].[sum:gdp_usd:qk]' type='color' w='9362' x='90170' y='6637'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='7190' id='10' name='Sheet 5' pane-specification-id='0' param='[federated.0opxemw1tglw111h5k6551wiyoo5].[avg:gdp_usd:qk]' type='color' w='9362' x='90170' y='13827'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
    </dashboard>
    <dashboard name='World GDP Dashboard'>
      <style />
      <size sizing-mode='automatic' />
      <zones use-insets='false'>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='98230' id='15' param='horz' type='layout-flow' w='99064' x='468' y='885'>
            <zone h='98230' id='5' param='horz' type='layout-flow' w='99064' x='468' y='885'>
              <zone h='98230' id='3' type='layout-basic' w='99064' x='468' y='885'>
                <zone h='49115' id='11' name='World &amp; Group' w='99064' x='468' y='50000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='49115' id='13' name='Sheet 4' w='54702' x='44830' y='885'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='49115' id='17' name='Sheet 5' w='44362' x='468' y='885'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
        <zone h='8407' id='16' name='Sheet 4' pane-specification-id='0' param='[federated.0opxemw1tglw111h5k6551wiyoo5].[sum:gdp_usd:qk]' type='color' w='10942' x='58397' y='221'>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='4' />
          </zone-style>
        </zone>
        <zone h='8407' id='18' name='Sheet 5' pane-specification-id='0' param='[federated.0opxemw1tglw111h5k6551wiyoo5].[avg:gdp_usd:qk]' type='color' w='11995' x='16150' y='664'>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='4' />
          </zone-style>
        </zone>
      </zones>
    </dashboard>
  </dashboards>
  <windows source-height='30'>
    <window class='dashboard' maximized='true' name='World GDP Dashboard'>
      <viewpoints>
        <viewpoint name='Sheet 4' />
        <viewpoint name='Sheet 5' />
        <viewpoint name='World &amp; Group'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='-1' />
    </window>
    <window class='dashboard' name='Dashboard 1'>
      <viewpoints>
        <viewpoint name='Countries'>
          <highlight>
            <color-one-way>
              <field>[federated.0opxemw1tglw111h5k6551wiyoo5].[sum:gdp_usd:qk]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
        <viewpoint name='Groups' />
        <viewpoint name='World &amp; Group'>
          <zoom type='entire-view' />
          <highlight field='[federated.0opxemw1tglw111h5k6551wiyoo5].[none:country_name:nk]'>
            <bucket-selection />
          </highlight>
        </viewpoint>
      </viewpoints>
      <active id='6' />
    </window>
    <window class='worksheet' name='Sheet 4'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0opxemw1tglw111h5k6551wiyoo5].[sum:gdp_usd:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0opxemw1tglw111h5k6551wiyoo5].[avg:gdp_usd:qk]</field>
            <field>[federated.0opxemw1tglw111h5k6551wiyoo5].[none:country_name:nk]</field>
            <field>[federated.0opxemw1tglw111h5k6551wiyoo5].[none:gdp_usd:qk]</field>
            <field>[federated.0opxemw1tglw111h5k6551wiyoo5].[none:year:ok]</field>
            <field>[federated.0opxemw1tglw111h5k6551wiyoo5].[none:year:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Sheet 5'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0opxemw1tglw111h5k6551wiyoo5].[avg:gdp_usd:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0opxemw1tglw111h5k6551wiyoo5].[avg:gdp_usd:qk]</field>
            <field>[federated.0opxemw1tglw111h5k6551wiyoo5].[none:country_name:nk]</field>
            <field>[federated.0opxemw1tglw111h5k6551wiyoo5].[none:year:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Sheet 7'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='dropdown' param='[federated.0opxemw1tglw111h5k6551wiyoo5].[none:year:ok]' type='filter' />
          </strip>
        </edge>
      </cards>
    </window>
    <window class='dashboard' name='Dashboard 3'>
      <viewpoints>
        <viewpoint name='Sheet 4' />
        <viewpoint name='Sheet 5' />
        <viewpoint name='Sheet 7' />
      </viewpoints>
      <active id='1' />
    </window>
    <window class='worksheet' hidden='true' name='Countries'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='dropdown' param='[federated.0opxemw1tglw111h5k6551wiyoo5].[none:year:ok]' type='filter' />
            <card pane-specification-id='0' param='[federated.0opxemw1tglw111h5k6551wiyoo5].[sum:gdp_usd:qk]' type='color' />
            <card pane-specification-id='0' param='[federated.0opxemw1tglw111h5k6551wiyoo5].[avg:gdp_usd:qk]' type='size' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0opxemw1tglw111h5k6551wiyoo5].[avg:gdp_usd:qk]</field>
            <field>[federated.0opxemw1tglw111h5k6551wiyoo5].[none:country_name:nk]</field>
            <field>[federated.0opxemw1tglw111h5k6551wiyoo5].[none:gdp_usd:qk]</field>
            <field>[federated.0opxemw1tglw111h5k6551wiyoo5].[none:year:ok]</field>
            <field>[federated.0opxemw1tglw111h5k6551wiyoo5].[none:year:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' hidden='true' name='Groups'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='dropdown' param='[federated.0opxemw1tglw111h5k6551wiyoo5].[none:year:ok]' type='filter' />
            <card pane-specification-id='0' param='[federated.0opxemw1tglw111h5k6551wiyoo5].[avg:gdp_usd:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0opxemw1tglw111h5k6551wiyoo5].[avg:gdp_usd:qk]</field>
            <field>[federated.0opxemw1tglw111h5k6551wiyoo5].[none:country_name:nk]</field>
            <field>[federated.0opxemw1tglw111h5k6551wiyoo5].[none:year:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' hidden='true' name='World &amp; Group'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0opxemw1tglw111h5k6551wiyoo5].[none:country_name:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0opxemw1tglw111h5k6551wiyoo5].[none:country_code:nk]</field>
            <field>[federated.0opxemw1tglw111h5k6551wiyoo5].[none:country_name:nk]</field>
            <field>[federated.0opxemw1tglw111h5k6551wiyoo5].[none:year:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Dashboard 1' width='192'>
      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
      Pfj/ASYyorptZcvFAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Dashboard 3' width='192'>
      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
      NVpDBq2RECeaEqQCBj0NcS61JndVPs9zWah4tEaCxEyVnliQJ7MZio7HVDYHqkZnPExV0TgR
      NZgtlMlVPd7tSNEbD7NYKBE0DRKWQUciygftDfv0SdbHhpFg6QRvr5ZOcNwySJc33lboIEkn
      uDbSCd4H9f7yi9pJAISvSQCEr0kAhK9JAISvSQCEr0kAhK9JAISvSQCEr0kAhK9JAISvSQCE
      r0kAhK9JAISvSQCEr0kAhK9JAISvSQCEr0kAhK9JAISvSQCEr0kAhK9JAISvSQCEr0kAhK9J
      AISvSQCEr0kAhK9JAISvSQCEr0kAhK9JAISvSQCEr0kAhK9JAISvSQCEr0kAhK9JAISvSQCE
      r0kAhK9JAISv6fUuwGGjKArxQP0/toCuYW5TjIaQRlfC2tN96qpG1XX2dF1DU163WK+l/v+S
      h4yqwFttsXoXg/5klNbE9uu83xfe030mzCCLdnFP141Z2usW67VIE0j4mgTgFXlOlaGb35HL
      5He1nVNKk8+WyC8svHyew664r1wOp1Lk3p+vM/18iqnxKdLpzKbr2fkFMtkys5MzACxMTjE1
      OfXK+z0qpAn0ijzHoZDNkBkZodIYYq6gYxRmKZeqWIYDRpjJ+zdoOXuJ0fsDHLt0hnJJoasv
      Qb4Qw8lOMHbvLvFUHJsw5cwigZCGqwbpPX+25nK4ToVSyaYwP0e66BAuhZl8MoCLTiabIxiO
      ULIdLr9/nvE79zAjcb76+/9F34XLmBGDoe//TMFIcLy/i0CyheZU/Zt3B0lqgFelKBiWhaZ7
      PH/8lGhrJ+FIAAC7WERRVRp6T6JrCqn2NoxEiobWJrRQA4tD90EP0nryHKryS0cxnGoj3rhD
      w34dFRXT1CkUigQjYVRAUX75Zw3GG+nuaUc1glSLJZqaIrT0H0PXTcKRMLHmNo6dPsXE4DDJ
      Rn99+QEUz/O81Qv+5m//jlsPR+tVnjfeB2/30fXxiW3XsYtFzGBwX8tRSye4Vq5TYX52kaaW
      1Lbr7Ucn+IPmXsLG3h6t2g2pAfbBfn/5V3OdKnMzc+TmZymWqyvLS4XNvnwe448GyBXKa5aq
      mrHjl/+okj7AIeeUbO7f+pG4VSbcfI5SOU8yBNPpCh2dLdjZBUolm/HpHL+6coySFsfJLXDv
      4SyJEBRci9Pntq/RjjKpAY6AeNCjrIaZGR3i2v/5mrynkwh6jI8+54c/fsXsYpmgpaNZQWYG
      HzP0cIBrn3/D9Owc6fmFehe/rqQGOOSMcIh3PvvdyvOP/tVfrHn98oeX1zz/1e8+BeDip5+x
      ODdPorFh/wv5BpMawMf8/uUHCYDwOQmA8DUJgPA1CYDwNQmA8LUNh0HPv9WL1RCtR1kOhVNd
      KbL1LoTYMxsC8CJkMRg7uKH8wyYeNNnby0xEPf1/0PI8n3yPAwYAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Sheet 4' width='192'>
      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
      rkJggg==
    </thumbnail>
    <thumbnail height='192' name='Sheet 5' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAG90lEQVR4nO3dW28cdx3G8Wdm9uxdr+NDbMdp4pC0CiEBlXISUishVbwALrjntXDD64C+
      i15xATcgVQhCGpqkSbBdH2J77T3NzM6BC0clVn3jYtia5/u52vl7x/uztV/7P7LkCcqyLAWY
      Cqc9ADBNBABrlTcPfvPbj/X4xc60ZsEl997Pvqfno3jaY5zLqQAev9jRnx+9nNYsuOTmHqzr
      YX807THOhS0QrFXOWnzv/rd0pR7oYFQoGfZV78xqcHio9fXr2tvZ1cONnm6vdJXluV4NM9WK
      RN35eQVFpkoQKC9ybfZizVZKZVFNtVBKxmPtHl+uX4/4eu6vLCiJY20MYgVhqNlaRaUCTbKJ
      5ltNbRwPtdpuaGOY6sObV/XHF1ua78yqGRQ6SAvFSaKFdksKI0VZouOsUDWq6HiSa7laaiOR
      3p1v6u+9WFUVCgKpW6/pyUFfxTlnPTOAIk21k0r1qHpyPEn0fK+vLNjWXLumpaWuWlGksaQf
      fPuaevv7GiSRoijS6lKoZwe5fn7/qrZ6faV5qVEeqF0LCMBKoJtzM2rU60pGI1WqVUW1tvqD
      WB/cWlGWpBpmhZI8V6dWVS2Unh2O9P6tFR2MYh0mieqKtJfmWqpFqjWbul6NtH/U0825tjqN
      qlZapfJS6tRCLcw01RuOtJvk55ryzACebB9pvi6Ny4qWWpGefnGk1bmmmq2GPn22oSyo6FBS
      IWm7n6odZto9ThVI2tivaqXT0McPj7TYDLV1MNTcXFf5ePiff09xKewMxpqrBOpPCu0OjjRI
      J5ptNVUOY93qNPX7Z9u62W3pYJTo88OBemmu7XigG52G/rrTU5FN1EszRUGohVZVT4/HWiwC
      jdOJ4kkmDQ/1WVFqcaapLJtos19oNZ7ocHK+N78kBW/+IexXv/6Ii2B8bR/+8gMugoHLhABg
      jQBgjQBgjQBgjQBgjQBgjQBgjQBgjQBgjQBgjQBgjQBgjQBgjQBgjQBgjQBgjQBgjQBgjQBg
      jQBgjQBgjQBgjQBgjQBgjQBgjQBgjQBgjQBgjQBgjQBgjQBgjQBgjQBgjQBgjQBgjQBgjQBg
      jQBgjQBgjQBgjQBgjQBgjQBgjQBgjQBgjQBgjQBgjQBgjQBgjQBgjQBgjQBgjQBgjQBgjQBg
      jQBgjQBgjQBgjQBgjQBgjQBgjQBgjQBgjQBgjQBgjQBgjQBgjQBgjQBgjQBgjQBgjQBgjQBg
      jQBgjQBgjQBgjQBgjQBgjQBgjQBgjQBgjQBgjQBgjQBgjQBgjQBgjQBgrTLtAfD/452FWc3P
      t6c9xrkQAC5MGeQqg3zaY5wLWyBYIwBcuK2Hn2jr6fNzn7f34rmOvthS8fp43O9f6FxnYQuE
      CzeJY1UbE20+eqx8sKdBFinKYoVBqCRLFExK7e3u68rqgsKwISWxrv/oJ0pHQymb6PM//UG5
      GmoEsQbjRJGkOCl058fva6ZTv9BZCQAXbmbuilJVpOxQ1bkVrV9b0/E/P5NUUbKzq9V7t9Vc
      OlSr21SZR+ouLChs1lQ0qxrGpVbu3JMk5elI5daWZq5eU7M9o1o1uvBZCQAXbvH23dePbn25
      1rr7XUnSyt2TN/f82ltfOa+x/o4WTq1c0ezy2n9nyNe4BoA1AoA1AoA1AoA1AoA1AoA1AoA1
      AoA1AoA1AoA1AoA1AoA1AoA1AoA1AoA1AoA1AoA1AoA1AoA1AoA1AoA1AoA1AoA1AoA1AoA1
      AoA1AoC1U/8b9N2f3lPn7WvTmgWXXGOmIQ2H0x7jXE4F8DLP9ekkm9YsuOS+U5bTHuHc2ALB
      2pkB3Fte0I1O49Rat16VJC13ZvRW++QmBZWoonrw7+d8f21ZK62K1rod/XBtUW9+hplqRavd
      tm7MNvXGKcBUnXl/gEYl0lChfvHgjrZ7R7paj3SQhfpkY1vrc23Vlevt1WUdjkcK00z3Fjv6
      3aNNtWuh6mGkSiVSUZZ6sHZVq41QO2mpYpJKlaqKSapmvaEkjvW8P/5ff73AKWcGcBSnKiX9
      Y/dAgyTV8TjQ0etLgyevegoCqd2YKCtyhXmhv706PjlvnKiQ9Gow1NP9ida6HQ3GpbKwomyS
      6iAenLxopaoOmy98A5wZwNP93smD/uirH8wSSdKrUfLl0svX9zL7y/bBqaduHvW1edYLJBPt
      n3tU4OLxcxjWCADWCADWCADWCADWCADWCADWCADWCADWCADWCADWCADWCADWCADWCADWCADW
      CADWCADWCADWCADWCADWCADWCADWCADWCADWCADWCADWCADWCADWCADWCADWCADWCADWCADW
      CADWCADWCADWCADWCADWCADWCADWCADWCADWCADWCADWCADWCADWCADWCADWCADWCADWCADW
      CADW/gXzP+N49y9FRwAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Sheet 7' width='192'>
      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
      67rwD97n+QvI/AJVAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='World GDP Dashboard' width='192'>
      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
      E51EWafBYWOmZuNUzEeuZuC1QSzgY2o5h2GahN0aum5wL5WlLeinWinhdTop1apkayY+1WQy
      u/l16Pe66bLbKComTpuNpUIZr8dJs6ZSwE4ik2G+bHCuMcD4UpHOgItytUZOB/Q6fpdGsWbg
      0uzkylW8doXHL12dPug23AOoDgdNfifGd8OakyOxAD1dzVCv4fc5SC/nWc5XuTDQQ39bmPRy
      nsXlMoGQE5fXw0enjjDQGaVSKuIPh+lpDu7SYu0et8vFpdYGnLUSdrtG2OMk6nISdrv4oKOR
      qEvD69TojQXRTAO/20V/NMSF5gg+1SBfN0iXa/g1lYyhcKmtiQZt9X6kZo9Gs89DXzREzKXR
      FQlyoTm8pfqZpkG6ZtLscxNwqHQF3DxJZSnpJolcHlQb7UEvdcVGn18jVayQr5u81xbjSNDL
      SrGM26ERcmq0hfx80Hq4LrCtOw0qjeA320wjOOjUyFRqb5zmXZNG8OZII/gd2Osvv9g8CYCw
      NAmAsDQJgLA0CYCwNAmAsDQJgLA0CYCwNAmAsDQJgLA0CYCwNAmAsDQJgLA0CYCwNAmAsDQJ
      gLA0CYCwNAmAsDQJgLA0CYCwNAmAsDQJgLA0CYCwNAmAsDQJgLA0CYCwNAmAsDQJgLA0CYCw
      NAmAsDQJgLA0CYCwNAmAsDQJgLA0CYCwNAmAsDQJgLA0CYCwNAmAsDQJgLA0CYCwNPteV+Cg
      URSFoGvvV5vLbsPxhmpEPDY6Qs4dLdOu2qgb+o5Oq9mUH1utH2Xvt+QBoypwuiWw19WgJ+yn
      OfTmad7v9u5omSGHm5VqaUenDThtP7ZaP4ocAglLkwBsk6nXmRz+hny2sKX59HKGQq5MIZ1+
      MZynWjO2XQ+9VuLu9ZssziVIxBNkMtnXTlctpMnmKqQWkgCkFxIkFhLbLvewkEOgbTJ1nWIu
      S3Z6mlqDh6WiHa2YolKu49R00LwsjA3SdPICM2MPOXrhBJWyQkd3iEIxgJ57zuzdUYKxIFW8
      VLIruDw2DNXNkVMnN10PQ69RLlcpLi+RKel4y14WnjzEwE42l8ft9VGu6lx8/xTxb+/i8AX5
      wz/9C91nL+LwaUwOXaeohejt6cAVbqIxtveHd7tJ9gDbpShoTic2u8nc46f4m9vx+lwAVEsl
      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
      B6IQyagAAAAASUVORK5CYII=
    </thumbnail>
  </thumbnails>
</workbook>
