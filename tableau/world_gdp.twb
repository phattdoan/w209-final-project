<?xml version='1.0' encoding='utf-8' ?>

<!-- build 10400.17.0915.2112                               -->
<workbook original-version='10.4' source-build='10.4.0 (10400.17.0915.2112)' source-platform='win' version='10.4' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='world_gpd_pivoted' inline='true' name='federated.0opxemw1tglw111h5k6551wiyoo5' version='10.4'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='world_gpd_pivoted' name='textscan.0sce2em0d1d3xd1fc3zht00ef3a5'>
            <connection class='textscan' directory='D:/Dropbox/Education/Bekerley Data Science/Fall 2017/w209 Data Visualization/w209-final-project/data' filename='world_gpd_pivoted.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <relation connection='textscan.0sce2em0d1d3xd1fc3zht00ef3a5' name='world_gpd_pivoted.csv' table='[world_gpd_pivoted#csv]' type='table'>
          <columns character-set='windows-1252' header='yes' locale='en_US' separator=','>
            <column datatype='string' name='country_name' ordinal='0' />
            <column datatype='string' name='country_code' ordinal='1' />
            <column datatype='integer' name='year' ordinal='2' />
            <column datatype='real' name='gdp_usd' ordinal='3' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>country_name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[country_name]</local-name>
            <parent-name>[world_gpd_pivoted.csv]</parent-name>
            <remote-alias>country_name</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>country_code</remote-name>
            <remote-type>129</remote-type>
            <local-name>[country_code]</local-name>
            <parent-name>[world_gpd_pivoted.csv]</parent-name>
            <remote-alias>country_code</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>year</remote-name>
            <remote-type>20</remote-type>
            <local-name>[year]</local-name>
            <parent-name>[world_gpd_pivoted.csv]</parent-name>
            <remote-alias>year</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>gdp_usd</remote-name>
            <remote-type>5</remote-type>
            <local-name>[gdp_usd]</local-name>
            <parent-name>[world_gpd_pivoted.csv]</parent-name>
            <remote-alias>gdp_usd</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[world_gpd_pivoted.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;windows-1252&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='Country Code' datatype='string' name='[country_code]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column caption='Country Name' datatype='string' name='[country_name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column caption='Gdp Usd' datatype='real' name='[gdp_usd]' role='measure' type='quantitative' />
      <column aggregation='Sum' caption='Year' datatype='integer' name='[year]' role='dimension' type='ordinal' />
      <column-instance column='[country_name]' derivation='None' name='[none:country_name:nk]' pivot='key' type='nominal' />
      <layout dim-ordering='alphabetic' dim-percentage='0.494755' measure-ordering='alphabetic' measure-percentage='0.505245' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:country_name:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Argentina&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Brunei Darussalam&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Costa Rica&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Estonia&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Greenland&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Indonesia&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Latin America &amp; Caribbean&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Maldives&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Nauru&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Paraguay&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Singapore&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Sudan&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;United Arab Emirates&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Afghanistan&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Benin&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Chad&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;East Asia &amp; Pacific&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;French Polynesia&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Hungary&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Kiribati&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Low income&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Moldova&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;OECD members&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Samoa&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Sri Lanka&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Trinidad and Tobago&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Yemen Rep.&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Andorra&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Bosnia and Herzegovina&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Colombia&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Egypt Arab Rep.&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Germany&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;IDA blend&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Kuwait&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Macedonia FYR&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Morocco&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Pakistan&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Senegal&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;St. Vincent and the Grenadines&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Turks and Caicos Islands&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Azerbaijan&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Cabo Verde&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Curacao&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Europe &amp; Central Asia (excluding high income)&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Guinea&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Isle of Man&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Least developed countries: UN classification&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Mauritania&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;New Zealand&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Portugal&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Small states&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Switzerland&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Uruguay&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Armenia&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Bulgaria&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Cote d&apos;Ivoire&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Ethiopia&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Grenada&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Iran Islamic Rep.&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Latin America &amp; Caribbean (excluding high income)&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Mali&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Nepal&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Peru&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Sint Maarten (Dutch part)&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Suriname&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;United Kingdom&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Angola&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Botswana&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Comoros&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;El Salvador&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Ghana&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;IDA only&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Kyrgyz Republic&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Madagascar&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Mozambique&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Palau&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Serbia&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Sub-Saharan Africa&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Tuvalu&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Belgium&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Central African Republic&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Dominican Republic&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Fragile and conflict affected situations&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Honduras&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Kazakhstan&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Lithuania&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Middle East &amp; North Africa (IDA &amp; IBRD countries)&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Norway&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Russian Federation&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Silicon Valley Revenue&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;South Sudan&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Togo&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;West Bank and Gaza&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Albania&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Bermuda&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Channel Islands&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;East Asia &amp; Pacific (excluding high income)&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Gabon&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;IBRD only&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Korea Dem. People’s Rep.&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Lower middle income&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Monaco&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Oman&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;San Marino&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Silicon Valley Market Cap&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;St. Kitts and Nevis&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Tunisia&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Zambia&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Barbados&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Caribbean small states&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Djibouti&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Fiji&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Heavily indebted poor countries (HIPC)&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Japan&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Libya&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Middle East &amp; North Africa&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;North America&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Qatar&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;South Asia&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Thailand&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Vietnam&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Antigua and Barbuda&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Brazil&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Congo Dem. Rep.&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Equatorial Guinea&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Gibraltar&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;IDA total&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Lao PDR&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Malawi&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Myanmar&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Panama&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Seychelles&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Sub-Saharan Africa (excluding high income)&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Uganda&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Bahamas The&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Cambodia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Cyprus&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Europe &amp; Central Asia (IDA &amp; IBRD countries)&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Guinea-Bissau&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Israel&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Lebanon&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Mauritius&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Nicaragua&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Post-demographic dividend&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Solomon Islands&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Syrian Arab Republic&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Uzbekistan&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Bahrain&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Cameroon&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Czech Republic&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;European Union&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Guyana&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Italy&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Lesotho&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Mexico&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Niger&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Pre-demographic dividend&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Somalia&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Tajikistan&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Vanuatu&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Belarus&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Cayman Islands&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Dominica&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Finland&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;High income&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Jordan&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Liechtenstein&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Middle East &amp; North Africa (excluding high income)&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Northern Mariana Islands&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Romania&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;South Asia (IDA &amp; IBRD)&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Timor-Leste&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Virgin Islands (U.S.)&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Belize&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Central Europe and the Baltics&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Early-demographic dividend&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;France&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Hong Kong SAR China&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Kenya&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Low &amp; middle income&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Middle income&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Not classified&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Rwanda&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Spain&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Tonga&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;World&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Australia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Burkina Faso&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Croatia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Euro area&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Guam&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Iraq&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Latin America &amp; the Caribbean (IDA &amp; IBRD countries)&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Malta&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Netherlands&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Philippines&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Slovak Republic&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Swaziland&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;United States&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Arab World&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;British Virgin Islands&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Congo Rep.&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Eritrea&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Greece&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;India&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Late-demographic dividend&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Malaysia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Namibia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Papua New Guinea&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Sierra Leone&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Sub-Saharan Africa (IDA &amp; IBRD countries)&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Ukraine&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Algeria&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Bhutan&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Chile&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;East Asia &amp; Pacific (IDA &amp; IBRD countries)&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Gambia The&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Iceland&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Korea Rep.&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Luxembourg&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Mongolia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Other small states&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Sao Tome and Principe&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;St. Lucia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Turkey&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Zimbabwe&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Bangladesh&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Canada&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Denmark&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Faroe Islands&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Haiti&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Jamaica&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Liberia&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Micronesia Fed. Sts.&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Nigeria&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Puerto Rico&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;South Africa&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Tanzania&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Venezuela RB&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Austria&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Burundi&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Cuba&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Europe &amp; Central Asia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Guatemala&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Ireland&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Latvia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Marshall Islands&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;New Caledonia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Poland&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Slovenia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Sweden&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Upper middle income&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;American Samoa&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Bolivia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;China&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Ecuador&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Georgia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;IDA &amp; IBRD total&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Kosovo&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Macao SAR China&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Montenegro&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Pacific island small states&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Saudi Arabia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;St. Martin (French part)&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Turkmenistan&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <actions>
    <action caption='Highlight1' name='[Action1]'>
      <activation auto-clear='true' type='on-hover' />
      <source dashboard='Dashboard 1' type='sheet' worksheet='Groups' />
      <command command='tsc:brush'>
        <param name='exclude' value='Countries,Groups' />
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard 1' />
      </command>
    </action>
    <action caption='Highlight2' name='[Action2]'>
      <activation auto-clear='true' type='on-hover' />
      <source dashboard='Dashboard 2' type='sheet' worksheet='Groups' />
      <command command='tsc:brush'>
        <param name='exclude' value='Countries,Groups' />
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard 2' />
      </command>
    </action>
  </actions>
  <worksheets>
    <worksheet name='Countries'>
      <table>
        <view>
          <datasources>
            <datasource caption='world_gpd_pivoted' name='federated.0opxemw1tglw111h5k6551wiyoo5' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0opxemw1tglw111h5k6551wiyoo5'>
            <column-instance column='[gdp_usd]' derivation='Avg' name='[avg:gdp_usd:qk]' pivot='key' type='quantitative' />
            <column caption='Country Name' datatype='string' name='[country_name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column caption='Gdp Usd' datatype='real' name='[gdp_usd]' role='measure' type='quantitative' />
            <column-instance column='[country_name]' derivation='None' name='[none:country_name:nk]' pivot='key' type='nominal' />
            <column-instance column='[gdp_usd]' derivation='None' name='[none:gdp_usd:qk]' pivot='key' type='quantitative' />
            <column-instance column='[year]' derivation='None' name='[none:year:ok]' pivot='key' type='ordinal' />
            <column-instance column='[gdp_usd]' derivation='Sum' name='[sum:gdp_usd:qk]' pivot='key' type='quantitative' />
            <column aggregation='Sum' caption='Year' datatype='integer' name='[year]' role='dimension' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0opxemw1tglw111h5k6551wiyoo5].[none:country_name:nk]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:country_name:nk]' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[none:country_name:nk]' member='&quot;Arab World&quot;' />
                <groupfilter function='member' level='[none:country_name:nk]' member='&quot;Central Europe and the Baltics&quot;' />
                <groupfilter function='member' level='[none:country_name:nk]' member='&quot;Early-demographic dividend&quot;' />
                <groupfilter function='member' level='[none:country_name:nk]' member='&quot;East Asia &amp; Pacific&quot;' />
                <groupfilter function='member' level='[none:country_name:nk]' member='&quot;East Asia &amp; Pacific (excluding high income)&quot;' />
                <groupfilter function='member' level='[none:country_name:nk]' member='&quot;East Asia &amp; Pacific (IDA &amp; IBRD countries)&quot;' />
                <groupfilter function='member' level='[none:country_name:nk]' member='&quot;Euro area&quot;' />
                <groupfilter function='member' level='[none:country_name:nk]' member='&quot;Europe &amp; Central Asia&quot;' />
                <groupfilter function='member' level='[none:country_name:nk]' member='&quot;Europe &amp; Central Asia (excluding high income)&quot;' />
                <groupfilter function='member' level='[none:country_name:nk]' member='&quot;Europe &amp; Central Asia (IDA &amp; IBRD countries)&quot;' />
                <groupfilter function='member' level='[none:country_name:nk]' member='&quot;European Union&quot;' />
                <groupfilter function='member' level='[none:country_name:nk]' member='&quot;Fragile and conflict affected situations&quot;' />
                <groupfilter function='member' level='[none:country_name:nk]' member='&quot;Heavily indebted poor countries (HIPC)&quot;' />
                <groupfilter function='member' level='[none:country_name:nk]' member='&quot;High income&quot;' />
                <groupfilter function='member' level='[none:country_name:nk]' member='&quot;IBRD only&quot;' />
                <groupfilter function='member' level='[none:country_name:nk]' member='&quot;IDA &amp; IBRD total&quot;' />
                <groupfilter function='member' level='[none:country_name:nk]' member='&quot;IDA blend&quot;' />
                <groupfilter function='member' level='[none:country_name:nk]' member='&quot;IDA only&quot;' />
                <groupfilter function='member' level='[none:country_name:nk]' member='&quot;IDA total&quot;' />
                <groupfilter function='member' level='[none:country_name:nk]' member='&quot;Late-demographic dividend&quot;' />
                <groupfilter function='member' level='[none:country_name:nk]' member='&quot;Latin America &amp; Caribbean&quot;' />
                <groupfilter function='member' level='[none:country_name:nk]' member='&quot;Latin America &amp; Caribbean (excluding high income)&quot;' />
                <groupfilter function='member' level='[none:country_name:nk]' member='&quot;Latin America &amp; the Caribbean (IDA &amp; IBRD countries)&quot;' />
                <groupfilter function='member' level='[none:country_name:nk]' member='&quot;Least developed countries: UN classification&quot;' />
                <groupfilter function='member' level='[none:country_name:nk]' member='&quot;Low &amp; middle income&quot;' />
                <groupfilter function='member' level='[none:country_name:nk]' member='&quot;Lower middle income&quot;' />
                <groupfilter function='member' level='[none:country_name:nk]' member='&quot;Middle East &amp; North Africa&quot;' />
                <groupfilter function='member' level='[none:country_name:nk]' member='&quot;Middle East &amp; North Africa (excluding high income)&quot;' />
                <groupfilter function='member' level='[none:country_name:nk]' member='&quot;Middle East &amp; North Africa (IDA &amp; IBRD countries)&quot;' />
                <groupfilter function='member' level='[none:country_name:nk]' member='&quot;Middle income&quot;' />
                <groupfilter function='member' level='[none:country_name:nk]' member='&quot;North America&quot;' />
                <groupfilter function='member' level='[none:country_name:nk]' member='&quot;OECD members&quot;' />
                <groupfilter function='member' level='[none:country_name:nk]' member='&quot;Post-demographic dividend&quot;' />
                <groupfilter function='member' level='[none:country_name:nk]' member='&quot;Pre-demographic dividend&quot;' />
                <groupfilter function='member' level='[none:country_name:nk]' member='&quot;Small states&quot;' />
                <groupfilter function='member' level='[none:country_name:nk]' member='&quot;South Asia&quot;' />
                <groupfilter function='member' level='[none:country_name:nk]' member='&quot;South Asia (IDA &amp; IBRD)&quot;' />
                <groupfilter function='member' level='[none:country_name:nk]' member='&quot;Sub-Saharan Africa&quot;' />
                <groupfilter function='member' level='[none:country_name:nk]' member='&quot;Sub-Saharan Africa (excluding high income)&quot;' />
                <groupfilter function='member' level='[none:country_name:nk]' member='&quot;Sub-Saharan Africa (IDA &amp; IBRD countries)&quot;' />
                <groupfilter function='member' level='[none:country_name:nk]' member='&quot;Upper middle income&quot;' />
                <groupfilter function='member' level='[none:country_name:nk]' member='&quot;World&quot;' />
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='quantitative' column='[federated.0opxemw1tglw111h5k6551wiyoo5].[none:gdp_usd:qk]' included-values='in-range'>
            <min>1.0</min>
          </filter>
          <filter class='categorical' column='[federated.0opxemw1tglw111h5k6551wiyoo5].[none:year:ok]' filter-group='3'>
            <groupfilter function='member' level='[none:year:ok]' member='2016' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0opxemw1tglw111h5k6551wiyoo5].[none:country_name:nk]</column>
            <column>[federated.0opxemw1tglw111h5k6551wiyoo5].[none:year:ok]</column>
            <column>[federated.0opxemw1tglw111h5k6551wiyoo5].[none:gdp_usd:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.0opxemw1tglw111h5k6551wiyoo5].[sum:gdp_usd:qk]' num-steps='20' palette='blue_10_0' type='interpolated' />
            <encoding attr='color' field='[federated.0opxemw1tglw111h5k6551wiyoo5].[avg:gdp_usd:qk]' num-steps='5' type='interpolated' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='tab_base' value='true' />
            <format attr='enabled' id='um_lcover' value='true' />
            <format attr='enabled' id='tab_coastline' value='false' />
            <format attr='enabled' id='pp2_line' value='false' />
            <format attr='enabled' id='light_adm0_bnd' value='false' />
            <format attr='enabled' id='light_adm0_lbl' value='false' />
            <format attr='enabled' id='um_adm0_bnd' value='true' />
            <format attr='enabled' id='um_adm0_lbl' value='true' />
            <format attr='enabled' id='light_pp2_statebounds' value='false' />
            <format attr='enabled' id='light_pp2_statelabels' value='false' />
            <format attr='enabled' id='pp2_adminlabels' value='false' />
            <format attr='enabled' id='pp2_statebounds' value='true' />
            <format attr='enabled' id='pp2_statelabels' value='true' />
            <format attr='enabled' id='countybounds' value='false' />
            <format attr='enabled' id='countylabels' value='false' />
            <format attr='enabled' id='zipbounds' value='false' />
            <format attr='enabled' id='ziplabels' value='false' />
            <format attr='enabled' id='tab_areabounds' value='false' />
            <format attr='enabled' id='tab_arealabels' value='false' />
            <format attr='enabled' id='tab_msabounds' value='false' />
            <format attr='enabled' id='tab_msalabels' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.0opxemw1tglw111h5k6551wiyoo5].[sum:gdp_usd:qk]' />
              <text column='[federated.0opxemw1tglw111h5k6551wiyoo5].[none:country_name:nk]' />
              <lod column='[federated.0opxemw1tglw111h5k6551wiyoo5].[none:country_name:nk]' />
              <size column='[federated.0opxemw1tglw111h5k6551wiyoo5].[avg:gdp_usd:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0opxemw1tglw111h5k6551wiyoo5].[Latitude (generated)]</rows>
        <cols>[federated.0opxemw1tglw111h5k6551wiyoo5].[Longitude (generated)]</cols>
      </table>
    </worksheet>
    <worksheet name='Groups'>
      <table>
        <view>
          <datasources>
            <datasource caption='world_gpd_pivoted' name='federated.0opxemw1tglw111h5k6551wiyoo5' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0opxemw1tglw111h5k6551wiyoo5'>
            <column-instance column='[gdp_usd]' derivation='Avg' name='[avg:gdp_usd:qk]' pivot='key' type='quantitative' />
            <column caption='Country Name' datatype='string' name='[country_name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column caption='Gdp Usd' datatype='real' name='[gdp_usd]' role='measure' type='quantitative' />
            <column-instance column='[country_name]' derivation='None' name='[none:country_name:nk]' pivot='key' type='nominal' />
            <column-instance column='[year]' derivation='None' name='[none:year:ok]' pivot='key' type='ordinal' />
            <column aggregation='Sum' caption='Year' datatype='integer' name='[year]' role='dimension' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0opxemw1tglw111h5k6551wiyoo5].[none:country_name:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:country_name:nk]' member='&quot;Arab World&quot;' />
              <groupfilter function='member' level='[none:country_name:nk]' member='&quot;Caribbean small states&quot;' />
              <groupfilter function='member' level='[none:country_name:nk]' member='&quot;Central Europe and the Baltics&quot;' />
              <groupfilter function='member' level='[none:country_name:nk]' member='&quot;East Asia &amp; Pacific&quot;' />
              <groupfilter function='member' level='[none:country_name:nk]' member='&quot;Europe &amp; Central Asia&quot;' />
              <groupfilter function='member' level='[none:country_name:nk]' member='&quot;European Union&quot;' />
              <groupfilter function='member' level='[none:country_name:nk]' member='&quot;Latin America &amp; Caribbean&quot;' />
              <groupfilter function='member' level='[none:country_name:nk]' member='&quot;Middle East &amp; North Africa&quot;' />
              <groupfilter function='member' level='[none:country_name:nk]' member='&quot;North America&quot;' />
              <groupfilter function='member' level='[none:country_name:nk]' member='&quot;OECD members&quot;' />
              <groupfilter function='member' level='[none:country_name:nk]' member='&quot;Pacific island small states&quot;' />
              <groupfilter function='member' level='[none:country_name:nk]' member='&quot;South Asia&quot;' />
              <groupfilter function='member' level='[none:country_name:nk]' member='&quot;Sub-Saharan Africa&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0opxemw1tglw111h5k6551wiyoo5].[none:year:ok]' filter-group='3'>
            <groupfilter function='member' level='[none:year:ok]' member='2016' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0opxemw1tglw111h5k6551wiyoo5].[none:country_name:nk]</column>
            <column>[federated.0opxemw1tglw111h5k6551wiyoo5].[none:year:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.0opxemw1tglw111h5k6551wiyoo5].[avg:gdp_usd:qk]' num-steps='5' type='interpolated' />
            <encoding attr='size-bar' field='[federated.0opxemw1tglw111h5k6551wiyoo5].[avg:gdp_usd:qk]' field-type='quantitative' max-size='1' min-size='0.005' type='centersize' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='tab_base' value='true' />
            <format attr='enabled' id='um_lcover' value='true' />
            <format attr='enabled' id='tab_coastline' value='false' />
            <format attr='enabled' id='pp2_line' value='false' />
            <format attr='enabled' id='light_adm0_bnd' value='false' />
            <format attr='enabled' id='light_adm0_lbl' value='false' />
            <format attr='enabled' id='um_adm0_bnd' value='true' />
            <format attr='enabled' id='um_adm0_lbl' value='true' />
            <format attr='enabled' id='light_pp2_statebounds' value='false' />
            <format attr='enabled' id='light_pp2_statelabels' value='false' />
            <format attr='enabled' id='pp2_adminlabels' value='false' />
            <format attr='enabled' id='pp2_statebounds' value='true' />
            <format attr='enabled' id='pp2_statelabels' value='true' />
            <format attr='enabled' id='countybounds' value='false' />
            <format attr='enabled' id='countylabels' value='false' />
            <format attr='enabled' id='zipbounds' value='false' />
            <format attr='enabled' id='ziplabels' value='false' />
            <format attr='enabled' id='tab_areabounds' value='false' />
            <format attr='enabled' id='tab_arealabels' value='false' />
            <format attr='enabled' id='tab_msabounds' value='false' />
            <format attr='enabled' id='tab_msalabels' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='on' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <size column='[federated.0opxemw1tglw111h5k6551wiyoo5].[avg:gdp_usd:qk]' />
              <color column='[federated.0opxemw1tglw111h5k6551wiyoo5].[avg:gdp_usd:qk]' />
              <text column='[federated.0opxemw1tglw111h5k6551wiyoo5].[none:country_name:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
    </worksheet>
    <worksheet name='Sheet 4'>
      <table>
        <view>
          <datasources>
            <datasource caption='world_gpd_pivoted' name='federated.0opxemw1tglw111h5k6551wiyoo5' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0opxemw1tglw111h5k6551wiyoo5'>
            <column-instance column='[gdp_usd]' derivation='Avg' name='[avg:gdp_usd:qk]' pivot='key' type='quantitative' />
            <column caption='Country Name' datatype='string' name='[country_name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column caption='Gdp Usd' datatype='real' name='[gdp_usd]' role='measure' type='quantitative' />
            <column-instance column='[country_name]' derivation='None' name='[none:country_name:nk]' pivot='key' type='nominal' />
            <column-instance column='[gdp_usd]' derivation='None' name='[none:gdp_usd:qk]' pivot='key' type='quantitative' />
            <column-instance column='[year]' derivation='None' name='[none:year:ok]' pivot='key' type='ordinal' />
            <column-instance column='[gdp_usd]' derivation='Sum' name='[sum:gdp_usd:qk]' pivot='key' type='quantitative' />
            <column aggregation='Sum' caption='Year' datatype='integer' name='[year]' role='dimension' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0opxemw1tglw111h5k6551wiyoo5].[none:country_name:nk]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:country_name:nk]' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[none:country_name:nk]' member='&quot;Arab World&quot;' />
                <groupfilter function='member' level='[none:country_name:nk]' member='&quot;Central Europe and the Baltics&quot;' />
                <groupfilter function='member' level='[none:country_name:nk]' member='&quot;Early-demographic dividend&quot;' />
                <groupfilter function='member' level='[none:country_name:nk]' member='&quot;East Asia &amp; Pacific&quot;' />
                <groupfilter function='member' level='[none:country_name:nk]' member='&quot;East Asia &amp; Pacific (excluding high income)&quot;' />
                <groupfilter function='member' level='[none:country_name:nk]' member='&quot;East Asia &amp; Pacific (IDA &amp; IBRD countries)&quot;' />
                <groupfilter function='member' level='[none:country_name:nk]' member='&quot;Euro area&quot;' />
                <groupfilter function='member' level='[none:country_name:nk]' member='&quot;Europe &amp; Central Asia&quot;' />
                <groupfilter function='member' level='[none:country_name:nk]' member='&quot;Europe &amp; Central Asia (excluding high income)&quot;' />
                <groupfilter function='member' level='[none:country_name:nk]' member='&quot;Europe &amp; Central Asia (IDA &amp; IBRD countries)&quot;' />
                <groupfilter function='member' level='[none:country_name:nk]' member='&quot;European Union&quot;' />
                <groupfilter function='member' level='[none:country_name:nk]' member='&quot;Fragile and conflict affected situations&quot;' />
                <groupfilter function='member' level='[none:country_name:nk]' member='&quot;Heavily indebted poor countries (HIPC)&quot;' />
                <groupfilter function='member' level='[none:country_name:nk]' member='&quot;High income&quot;' />
                <groupfilter function='member' level='[none:country_name:nk]' member='&quot;IBRD only&quot;' />
                <groupfilter function='member' level='[none:country_name:nk]' member='&quot;IDA &amp; IBRD total&quot;' />
                <groupfilter function='member' level='[none:country_name:nk]' member='&quot;IDA blend&quot;' />
                <groupfilter function='member' level='[none:country_name:nk]' member='&quot;IDA only&quot;' />
                <groupfilter function='member' level='[none:country_name:nk]' member='&quot;IDA total&quot;' />
                <groupfilter function='member' level='[none:country_name:nk]' member='&quot;Late-demographic dividend&quot;' />
                <groupfilter function='member' level='[none:country_name:nk]' member='&quot;Latin America &amp; Caribbean&quot;' />
                <groupfilter function='member' level='[none:country_name:nk]' member='&quot;Latin America &amp; Caribbean (excluding high income)&quot;' />
                <groupfilter function='member' level='[none:country_name:nk]' member='&quot;Latin America &amp; the Caribbean (IDA &amp; IBRD countries)&quot;' />
                <groupfilter function='member' level='[none:country_name:nk]' member='&quot;Least developed countries: UN classification&quot;' />
                <groupfilter function='member' level='[none:country_name:nk]' member='&quot;Low &amp; middle income&quot;' />
                <groupfilter function='member' level='[none:country_name:nk]' member='&quot;Lower middle income&quot;' />
                <groupfilter function='member' level='[none:country_name:nk]' member='&quot;Middle East &amp; North Africa&quot;' />
                <groupfilter function='member' level='[none:country_name:nk]' member='&quot;Middle East &amp; North Africa (excluding high income)&quot;' />
                <groupfilter function='member' level='[none:country_name:nk]' member='&quot;Middle East &amp; North Africa (IDA &amp; IBRD countries)&quot;' />
                <groupfilter function='member' level='[none:country_name:nk]' member='&quot;Middle income&quot;' />
                <groupfilter function='member' level='[none:country_name:nk]' member='&quot;North America&quot;' />
                <groupfilter function='member' level='[none:country_name:nk]' member='&quot;OECD members&quot;' />
                <groupfilter function='member' level='[none:country_name:nk]' member='&quot;Post-demographic dividend&quot;' />
                <groupfilter function='member' level='[none:country_name:nk]' member='&quot;Pre-demographic dividend&quot;' />
                <groupfilter function='member' level='[none:country_name:nk]' member='&quot;Small states&quot;' />
                <groupfilter function='member' level='[none:country_name:nk]' member='&quot;South Asia&quot;' />
                <groupfilter function='member' level='[none:country_name:nk]' member='&quot;South Asia (IDA &amp; IBRD)&quot;' />
                <groupfilter function='member' level='[none:country_name:nk]' member='&quot;Sub-Saharan Africa&quot;' />
                <groupfilter function='member' level='[none:country_name:nk]' member='&quot;Sub-Saharan Africa (excluding high income)&quot;' />
                <groupfilter function='member' level='[none:country_name:nk]' member='&quot;Sub-Saharan Africa (IDA &amp; IBRD countries)&quot;' />
                <groupfilter function='member' level='[none:country_name:nk]' member='&quot;Upper middle income&quot;' />
                <groupfilter function='member' level='[none:country_name:nk]' member='&quot;World&quot;' />
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='quantitative' column='[federated.0opxemw1tglw111h5k6551wiyoo5].[none:gdp_usd:qk]' included-values='in-range'>
            <min>1.0</min>
          </filter>
          <filter class='categorical' column='[federated.0opxemw1tglw111h5k6551wiyoo5].[none:year:ok]'>
            <groupfilter function='member' level='[none:year:ok]' member='2016' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0opxemw1tglw111h5k6551wiyoo5].[none:country_name:nk]</column>
            <column>[federated.0opxemw1tglw111h5k6551wiyoo5].[none:gdp_usd:qk]</column>
            <column>[federated.0opxemw1tglw111h5k6551wiyoo5].[none:year:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.0opxemw1tglw111h5k6551wiyoo5].[sum:gdp_usd:qk]' num-steps='20' palette='blue_10_0' type='interpolated' />
            <encoding attr='color' field='[federated.0opxemw1tglw111h5k6551wiyoo5].[avg:gdp_usd:qk]' num-steps='5' type='interpolated' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='tab_base' value='true' />
            <format attr='enabled' id='um_lcover' value='true' />
            <format attr='enabled' id='tab_coastline' value='false' />
            <format attr='enabled' id='pp2_line' value='false' />
            <format attr='enabled' id='light_adm0_bnd' value='false' />
            <format attr='enabled' id='light_adm0_lbl' value='false' />
            <format attr='enabled' id='um_adm0_bnd' value='true' />
            <format attr='enabled' id='um_adm0_lbl' value='true' />
            <format attr='enabled' id='light_pp2_statebounds' value='false' />
            <format attr='enabled' id='light_pp2_statelabels' value='false' />
            <format attr='enabled' id='pp2_adminlabels' value='false' />
            <format attr='enabled' id='pp2_statebounds' value='true' />
            <format attr='enabled' id='pp2_statelabels' value='true' />
            <format attr='enabled' id='countybounds' value='false' />
            <format attr='enabled' id='countylabels' value='false' />
            <format attr='enabled' id='zipbounds' value='false' />
            <format attr='enabled' id='ziplabels' value='false' />
            <format attr='enabled' id='tab_areabounds' value='false' />
            <format attr='enabled' id='tab_arealabels' value='false' />
            <format attr='enabled' id='tab_msabounds' value='false' />
            <format attr='enabled' id='tab_msalabels' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='on' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <size column='[federated.0opxemw1tglw111h5k6551wiyoo5].[avg:gdp_usd:qk]' />
              <color column='[federated.0opxemw1tglw111h5k6551wiyoo5].[sum:gdp_usd:qk]' />
              <text column='[federated.0opxemw1tglw111h5k6551wiyoo5].[none:country_name:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
    </worksheet>
    <worksheet name='Sheet 5'>
      <table>
        <view>
          <datasources>
            <datasource caption='world_gpd_pivoted' name='federated.0opxemw1tglw111h5k6551wiyoo5' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0opxemw1tglw111h5k6551wiyoo5'>
            <column-instance column='[gdp_usd]' derivation='Avg' name='[avg:gdp_usd:qk]' pivot='key' type='quantitative' />
            <column caption='Country Name' datatype='string' name='[country_name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column caption='Gdp Usd' datatype='real' name='[gdp_usd]' role='measure' type='quantitative' />
            <column-instance column='[country_name]' derivation='None' name='[none:country_name:nk]' pivot='key' type='nominal' />
            <column-instance column='[year]' derivation='None' name='[none:year:ok]' pivot='key' type='ordinal' />
            <column aggregation='Sum' caption='Year' datatype='integer' name='[year]' role='dimension' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0opxemw1tglw111h5k6551wiyoo5].[none:country_name:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:country_name:nk]' member='&quot;Arab World&quot;' />
              <groupfilter function='member' level='[none:country_name:nk]' member='&quot;Caribbean small states&quot;' />
              <groupfilter function='member' level='[none:country_name:nk]' member='&quot;Central Europe and the Baltics&quot;' />
              <groupfilter function='member' level='[none:country_name:nk]' member='&quot;East Asia &amp; Pacific&quot;' />
              <groupfilter function='member' level='[none:country_name:nk]' member='&quot;Europe &amp; Central Asia&quot;' />
              <groupfilter function='member' level='[none:country_name:nk]' member='&quot;European Union&quot;' />
              <groupfilter function='member' level='[none:country_name:nk]' member='&quot;Latin America &amp; Caribbean&quot;' />
              <groupfilter function='member' level='[none:country_name:nk]' member='&quot;Middle East &amp; North Africa&quot;' />
              <groupfilter function='member' level='[none:country_name:nk]' member='&quot;North America&quot;' />
              <groupfilter function='member' level='[none:country_name:nk]' member='&quot;OECD members&quot;' />
              <groupfilter function='member' level='[none:country_name:nk]' member='&quot;Pacific island small states&quot;' />
              <groupfilter function='member' level='[none:country_name:nk]' member='&quot;Silicon Valley Market Cap&quot;' />
              <groupfilter function='member' level='[none:country_name:nk]' member='&quot;Silicon Valley Revenue&quot;' />
              <groupfilter function='member' level='[none:country_name:nk]' member='&quot;South Asia&quot;' />
              <groupfilter function='member' level='[none:country_name:nk]' member='&quot;Sub-Saharan Africa&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0opxemw1tglw111h5k6551wiyoo5].[none:year:ok]' filter-group='3'>
            <groupfilter function='member' level='[none:year:ok]' member='2016' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0opxemw1tglw111h5k6551wiyoo5].[none:country_name:nk]</column>
            <column>[federated.0opxemw1tglw111h5k6551wiyoo5].[none:year:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.0opxemw1tglw111h5k6551wiyoo5].[avg:gdp_usd:qk]' num-steps='5' type='interpolated' />
            <encoding attr='size-bar' field='[federated.0opxemw1tglw111h5k6551wiyoo5].[avg:gdp_usd:qk]' field-type='quantitative' max-size='1' min-size='0.005' type='centersize' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='tab_base' value='true' />
            <format attr='enabled' id='um_lcover' value='true' />
            <format attr='enabled' id='tab_coastline' value='false' />
            <format attr='enabled' id='pp2_line' value='false' />
            <format attr='enabled' id='light_adm0_bnd' value='false' />
            <format attr='enabled' id='light_adm0_lbl' value='false' />
            <format attr='enabled' id='um_adm0_bnd' value='true' />
            <format attr='enabled' id='um_adm0_lbl' value='true' />
            <format attr='enabled' id='light_pp2_statebounds' value='false' />
            <format attr='enabled' id='light_pp2_statelabels' value='false' />
            <format attr='enabled' id='pp2_adminlabels' value='false' />
            <format attr='enabled' id='pp2_statebounds' value='true' />
            <format attr='enabled' id='pp2_statelabels' value='true' />
            <format attr='enabled' id='countybounds' value='false' />
            <format attr='enabled' id='countylabels' value='false' />
            <format attr='enabled' id='zipbounds' value='false' />
            <format attr='enabled' id='ziplabels' value='false' />
            <format attr='enabled' id='tab_areabounds' value='false' />
            <format attr='enabled' id='tab_arealabels' value='false' />
            <format attr='enabled' id='tab_msabounds' value='false' />
            <format attr='enabled' id='tab_msalabels' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='on' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <size column='[federated.0opxemw1tglw111h5k6551wiyoo5].[avg:gdp_usd:qk]' />
              <color column='[federated.0opxemw1tglw111h5k6551wiyoo5].[avg:gdp_usd:qk]' />
              <text column='[federated.0opxemw1tglw111h5k6551wiyoo5].[none:country_name:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
    </worksheet>
    <worksheet name='Sheet 7'>
      <table>
        <view>
          <datasources>
            <datasource caption='world_gpd_pivoted' name='federated.0opxemw1tglw111h5k6551wiyoo5' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0opxemw1tglw111h5k6551wiyoo5'>
            <column-instance column='[gdp_usd]' derivation='Avg' name='[avg:gdp_usd:qk]' pivot='key' type='quantitative' />
            <column caption='Country Name' datatype='string' name='[country_name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column caption='Gdp Usd' datatype='real' name='[gdp_usd]' role='measure' type='quantitative' />
            <column-instance column='[country_name]' derivation='None' name='[none:country_name:nk]' pivot='key' type='nominal' />
            <column-instance column='[gdp_usd]' derivation='None' name='[none:gdp_usd:qk]' pivot='key' type='quantitative' />
            <column-instance column='[year]' derivation='None' name='[none:year:ok]' pivot='key' type='ordinal' />
            <column aggregation='Sum' caption='Year' datatype='integer' name='[year]' role='dimension' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0opxemw1tglw111h5k6551wiyoo5].[none:country_name:nk]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:country_name:nk]' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[none:country_name:nk]' member='&quot;Arab World&quot;' />
                <groupfilter function='member' level='[none:country_name:nk]' member='&quot;Central Europe and the Baltics&quot;' />
                <groupfilter function='member' level='[none:country_name:nk]' member='&quot;Early-demographic dividend&quot;' />
                <groupfilter function='member' level='[none:country_name:nk]' member='&quot;East Asia &amp; Pacific&quot;' />
                <groupfilter function='member' level='[none:country_name:nk]' member='&quot;East Asia &amp; Pacific (excluding high income)&quot;' />
                <groupfilter function='member' level='[none:country_name:nk]' member='&quot;East Asia &amp; Pacific (IDA &amp; IBRD countries)&quot;' />
                <groupfilter function='member' level='[none:country_name:nk]' member='&quot;Euro area&quot;' />
                <groupfilter function='member' level='[none:country_name:nk]' member='&quot;Europe &amp; Central Asia&quot;' />
                <groupfilter function='member' level='[none:country_name:nk]' member='&quot;Europe &amp; Central Asia (excluding high income)&quot;' />
                <groupfilter function='member' level='[none:country_name:nk]' member='&quot;Europe &amp; Central Asia (IDA &amp; IBRD countries)&quot;' />
                <groupfilter function='member' level='[none:country_name:nk]' member='&quot;European Union&quot;' />
                <groupfilter function='member' level='[none:country_name:nk]' member='&quot;Fragile and conflict affected situations&quot;' />
                <groupfilter function='member' level='[none:country_name:nk]' member='&quot;Heavily indebted poor countries (HIPC)&quot;' />
                <groupfilter function='member' level='[none:country_name:nk]' member='&quot;High income&quot;' />
                <groupfilter function='member' level='[none:country_name:nk]' member='&quot;IBRD only&quot;' />
                <groupfilter function='member' level='[none:country_name:nk]' member='&quot;IDA &amp; IBRD total&quot;' />
                <groupfilter function='member' level='[none:country_name:nk]' member='&quot;IDA blend&quot;' />
                <groupfilter function='member' level='[none:country_name:nk]' member='&quot;IDA only&quot;' />
                <groupfilter function='member' level='[none:country_name:nk]' member='&quot;IDA total&quot;' />
                <groupfilter function='member' level='[none:country_name:nk]' member='&quot;Late-demographic dividend&quot;' />
                <groupfilter function='member' level='[none:country_name:nk]' member='&quot;Latin America &amp; Caribbean&quot;' />
                <groupfilter function='member' level='[none:country_name:nk]' member='&quot;Latin America &amp; Caribbean (excluding high income)&quot;' />
                <groupfilter function='member' level='[none:country_name:nk]' member='&quot;Latin America &amp; the Caribbean (IDA &amp; IBRD countries)&quot;' />
                <groupfilter function='member' level='[none:country_name:nk]' member='&quot;Least developed countries: UN classification&quot;' />
                <groupfilter function='member' level='[none:country_name:nk]' member='&quot;Low &amp; middle income&quot;' />
                <groupfilter function='member' level='[none:country_name:nk]' member='&quot;Lower middle income&quot;' />
                <groupfilter function='member' level='[none:country_name:nk]' member='&quot;Middle East &amp; North Africa&quot;' />
                <groupfilter function='member' level='[none:country_name:nk]' member='&quot;Middle East &amp; North Africa (excluding high income)&quot;' />
                <groupfilter function='member' level='[none:country_name:nk]' member='&quot;Middle East &amp; North Africa (IDA &amp; IBRD countries)&quot;' />
                <groupfilter function='member' level='[none:country_name:nk]' member='&quot;Middle income&quot;' />
                <groupfilter function='member' level='[none:country_name:nk]' member='&quot;North America&quot;' />
                <groupfilter function='member' level='[none:country_name:nk]' member='&quot;OECD members&quot;' />
                <groupfilter function='member' level='[none:country_name:nk]' member='&quot;Post-demographic dividend&quot;' />
                <groupfilter function='member' level='[none:country_name:nk]' member='&quot;Pre-demographic dividend&quot;' />
                <groupfilter function='member' level='[none:country_name:nk]' member='&quot;Small states&quot;' />
                <groupfilter function='member' level='[none:country_name:nk]' member='&quot;South Asia&quot;' />
                <groupfilter function='member' level='[none:country_name:nk]' member='&quot;South Asia (IDA &amp; IBRD)&quot;' />
                <groupfilter function='member' level='[none:country_name:nk]' member='&quot;Sub-Saharan Africa&quot;' />
                <groupfilter function='member' level='[none:country_name:nk]' member='&quot;Sub-Saharan Africa (excluding high income)&quot;' />
                <groupfilter function='member' level='[none:country_name:nk]' member='&quot;Sub-Saharan Africa (IDA &amp; IBRD countries)&quot;' />
                <groupfilter function='member' level='[none:country_name:nk]' member='&quot;Upper middle income&quot;' />
                <groupfilter function='member' level='[none:country_name:nk]' member='&quot;World&quot;' />
              </groupfilter>
            </groupfilter>
          </filter>
          <sort class='manual' column='[federated.0opxemw1tglw111h5k6551wiyoo5].[none:country_name:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;United States&quot;</bucket>
              <bucket>&quot;China&quot;</bucket>
              <bucket>&quot;Silicon Valley Market Cap&quot;</bucket>
              <bucket>&quot;Japan&quot;</bucket>
              <bucket>&quot;Germany&quot;</bucket>
              <bucket>&quot;United Kingdom&quot;</bucket>
              <bucket>&quot;France&quot;</bucket>
              <bucket>&quot;India&quot;</bucket>
              <bucket>&quot;Italy&quot;</bucket>
              <bucket>&quot;Silicon Valley Revenue&quot;</bucket>
              <bucket>&quot;Brazil&quot;</bucket>
              <bucket>&quot;Canada&quot;</bucket>
              <bucket>&quot;Korea Rep.&quot;</bucket>
              <bucket>&quot;Russian Federation&quot;</bucket>
              <bucket>&quot;Spain&quot;</bucket>
              <bucket>&quot;Australia&quot;</bucket>
              <bucket>&quot;Mexico&quot;</bucket>
              <bucket>&quot;Indonesia&quot;</bucket>
              <bucket>&quot;Turkey&quot;</bucket>
              <bucket>&quot;Netherlands&quot;</bucket>
              <bucket>&quot;Switzerland&quot;</bucket>
              <bucket>&quot;Saudi Arabia&quot;</bucket>
              <bucket>&quot;Argentina&quot;</bucket>
              <bucket>&quot;Sweden&quot;</bucket>
              <bucket>&quot;Poland&quot;</bucket>
              <bucket>&quot;Belgium&quot;</bucket>
              <bucket>&quot;Thailand&quot;</bucket>
              <bucket>&quot;Low income&quot;</bucket>
              <bucket>&quot;Nigeria&quot;</bucket>
              <bucket>&quot;Austria&quot;</bucket>
              <bucket>&quot;Norway&quot;</bucket>
              <bucket>&quot;Other small states&quot;</bucket>
              <bucket>&quot;United Arab Emirates&quot;</bucket>
              <bucket>&quot;Egypt Arab Rep.&quot;</bucket>
              <bucket>&quot;Hong Kong SAR China&quot;</bucket>
              <bucket>&quot;Israel&quot;</bucket>
              <bucket>&quot;Denmark&quot;</bucket>
              <bucket>&quot;Philippines&quot;</bucket>
              <bucket>&quot;Singapore&quot;</bucket>
              <bucket>&quot;Malaysia&quot;</bucket>
              <bucket>&quot;South Africa&quot;</bucket>
              <bucket>&quot;Ireland&quot;</bucket>
              <bucket>&quot;Pakistan&quot;</bucket>
              <bucket>&quot;Colombia&quot;</bucket>
              <bucket>&quot;Chile&quot;</bucket>
              <bucket>&quot;Finland&quot;</bucket>
              <bucket>&quot;Bangladesh&quot;</bucket>
              <bucket>&quot;Portugal&quot;</bucket>
              <bucket>&quot;Vietnam&quot;</bucket>
              <bucket>&quot;Greece&quot;</bucket>
              <bucket>&quot;Czech Republic&quot;</bucket>
              <bucket>&quot;Peru&quot;</bucket>
              <bucket>&quot;Romania&quot;</bucket>
              <bucket>&quot;New Zealand&quot;</bucket>
              <bucket>&quot;Iraq&quot;</bucket>
              <bucket>&quot;Algeria&quot;</bucket>
              <bucket>&quot;Qatar&quot;</bucket>
              <bucket>&quot;Kazakhstan&quot;</bucket>
              <bucket>&quot;Hungary&quot;</bucket>
              <bucket>&quot;Morocco&quot;</bucket>
              <bucket>&quot;Ecuador&quot;</bucket>
              <bucket>&quot;Sudan&quot;</bucket>
              <bucket>&quot;Ukraine&quot;</bucket>
              <bucket>&quot;Angola&quot;</bucket>
              <bucket>&quot;Slovak Republic&quot;</bucket>
              <bucket>&quot;Sri Lanka&quot;</bucket>
              <bucket>&quot;Ethiopia&quot;</bucket>
              <bucket>&quot;Dominican Republic&quot;</bucket>
              <bucket>&quot;Kenya&quot;</bucket>
              <bucket>&quot;Guatemala&quot;</bucket>
              <bucket>&quot;Myanmar&quot;</bucket>
              <bucket>&quot;Uzbekistan&quot;</bucket>
              <bucket>&quot;Oman&quot;</bucket>
              <bucket>&quot;Caribbean small states&quot;</bucket>
              <bucket>&quot;Luxembourg&quot;</bucket>
              <bucket>&quot;Costa Rica&quot;</bucket>
              <bucket>&quot;Panama&quot;</bucket>
              <bucket>&quot;Uruguay&quot;</bucket>
              <bucket>&quot;Bulgaria&quot;</bucket>
              <bucket>&quot;Croatia&quot;</bucket>
              <bucket>&quot;Lebanon&quot;</bucket>
              <bucket>&quot;Belarus&quot;</bucket>
              <bucket>&quot;Tanzania&quot;</bucket>
              <bucket>&quot;Macao SAR China&quot;</bucket>
              <bucket>&quot;Slovenia&quot;</bucket>
              <bucket>&quot;Lithuania&quot;</bucket>
              <bucket>&quot;Ghana&quot;</bucket>
              <bucket>&quot;Tunisia&quot;</bucket>
              <bucket>&quot;Jordan&quot;</bucket>
              <bucket>&quot;Azerbaijan&quot;</bucket>
              <bucket>&quot;Serbia&quot;</bucket>
              <bucket>&quot;Turkmenistan&quot;</bucket>
              <bucket>&quot;Cote d&apos;Ivoire&quot;</bucket>
              <bucket>&quot;Congo Dem. Rep.&quot;</bucket>
              <bucket>&quot;Bolivia&quot;</bucket>
              <bucket>&quot;Bahrain&quot;</bucket>
              <bucket>&quot;Latvia&quot;</bucket>
              <bucket>&quot;Paraguay&quot;</bucket>
              <bucket>&quot;Yemen Rep.&quot;</bucket>
              <bucket>&quot;El Salvador&quot;</bucket>
              <bucket>&quot;Uganda&quot;</bucket>
              <bucket>&quot;Cameroon&quot;</bucket>
              <bucket>&quot;Estonia&quot;</bucket>
              <bucket>&quot;Honduras&quot;</bucket>
              <bucket>&quot;Nepal&quot;</bucket>
              <bucket>&quot;Trinidad and Tobago&quot;</bucket>
              <bucket>&quot;Iceland&quot;</bucket>
              <bucket>&quot;Cambodia&quot;</bucket>
              <bucket>&quot;Cyprus&quot;</bucket>
              <bucket>&quot;Zambia&quot;</bucket>
              <bucket>&quot;Afghanistan&quot;</bucket>
              <bucket>&quot;Bosnia and Herzegovina&quot;</bucket>
              <bucket>&quot;Zimbabwe&quot;</bucket>
              <bucket>&quot;Lao PDR&quot;</bucket>
              <bucket>&quot;Botswana&quot;</bucket>
              <bucket>&quot;Senegal&quot;</bucket>
              <bucket>&quot;Georgia&quot;</bucket>
              <bucket>&quot;Gabon&quot;</bucket>
              <bucket>&quot;Mali&quot;</bucket>
              <bucket>&quot;Jamaica&quot;</bucket>
              <bucket>&quot;West Bank and Gaza&quot;</bucket>
              <bucket>&quot;Nicaragua&quot;</bucket>
              <bucket>&quot;Mauritius&quot;</bucket>
              <bucket>&quot;Burkina Faso&quot;</bucket>
              <bucket>&quot;Albania&quot;</bucket>
              <bucket>&quot;Brunei Darussalam&quot;</bucket>
              <bucket>&quot;Mongolia&quot;</bucket>
              <bucket>&quot;Mozambique&quot;</bucket>
              <bucket>&quot;Malta&quot;</bucket>
              <bucket>&quot;Macedonia FYR&quot;</bucket>
              <bucket>&quot;Armenia&quot;</bucket>
              <bucket>&quot;Namibia&quot;</bucket>
              <bucket>&quot;Equatorial Guinea&quot;</bucket>
              <bucket>&quot;Madagascar&quot;</bucket>
              <bucket>&quot;Chad&quot;</bucket>
              <bucket>&quot;Bahamas The&quot;</bucket>
              <bucket>&quot;Pacific island small states&quot;</bucket>
              <bucket>&quot;Benin&quot;</bucket>
              <bucket>&quot;Rwanda&quot;</bucket>
              <bucket>&quot;Haiti&quot;</bucket>
              <bucket>&quot;Congo Rep.&quot;</bucket>
              <bucket>&quot;Niger&quot;</bucket>
              <bucket>&quot;Tajikistan&quot;</bucket>
              <bucket>&quot;Moldova&quot;</bucket>
              <bucket>&quot;Kosovo&quot;</bucket>
              <bucket>&quot;Kyrgyz Republic&quot;</bucket>
              <bucket>&quot;Guinea&quot;</bucket>
              <bucket>&quot;Somalia&quot;</bucket>
              <bucket>&quot;Malawi&quot;</bucket>
              <bucket>&quot;Mauritania&quot;</bucket>
              <bucket>&quot;Fiji&quot;</bucket>
              <bucket>&quot;Barbados&quot;</bucket>
              <bucket>&quot;Togo&quot;</bucket>
              <bucket>&quot;Montenegro&quot;</bucket>
              <bucket>&quot;Swaziland&quot;</bucket>
              <bucket>&quot;Sierra Leone&quot;</bucket>
              <bucket>&quot;Suriname&quot;</bucket>
              <bucket>&quot;Maldives&quot;</bucket>
              <bucket>&quot;Guyana&quot;</bucket>
              <bucket>&quot;Burundi&quot;</bucket>
              <bucket>&quot;Bhutan&quot;</bucket>
              <bucket>&quot;Lesotho&quot;</bucket>
              <bucket>&quot;Liberia&quot;</bucket>
              <bucket>&quot;Belize&quot;</bucket>
              <bucket>&quot;Central African Republic&quot;</bucket>
              <bucket>&quot;Cabo Verde&quot;</bucket>
              <bucket>&quot;Antigua and Barbuda&quot;</bucket>
              <bucket>&quot;Seychelles&quot;</bucket>
              <bucket>&quot;St. Lucia&quot;</bucket>
              <bucket>&quot;Solomon Islands&quot;</bucket>
              <bucket>&quot;Guinea-Bissau&quot;</bucket>
              <bucket>&quot;Grenada&quot;</bucket>
              <bucket>&quot;Gambia The&quot;</bucket>
              <bucket>&quot;St. Kitts and Nevis&quot;</bucket>
              <bucket>&quot;Samoa&quot;</bucket>
              <bucket>&quot;Vanuatu&quot;</bucket>
              <bucket>&quot;St. Vincent and the Grenadines&quot;</bucket>
              <bucket>&quot;Comoros&quot;</bucket>
              <bucket>&quot;Dominica&quot;</bucket>
              <bucket>&quot;Tonga&quot;</bucket>
              <bucket>&quot;Sao Tome and Principe&quot;</bucket>
              <bucket>&quot;Micronesia Fed. Sts.&quot;</bucket>
              <bucket>&quot;Palau&quot;</bucket>
              <bucket>&quot;Marshall Islands&quot;</bucket>
              <bucket>&quot;Kiribati&quot;</bucket>
              <bucket>&quot;Nauru&quot;</bucket>
              <bucket>&quot;Tuvalu&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </sort>
          <filter class='quantitative' column='[federated.0opxemw1tglw111h5k6551wiyoo5].[none:gdp_usd:qk]' included-values='in-range'>
            <min>1.0</min>
          </filter>
          <filter class='categorical' column='[federated.0opxemw1tglw111h5k6551wiyoo5].[none:year:ok]' filter-group='3'>
            <groupfilter function='member' level='[none:year:ok]' member='2016' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0opxemw1tglw111h5k6551wiyoo5].[none:country_name:nk]</column>
            <column>[federated.0opxemw1tglw111h5k6551wiyoo5].[none:year:ok]</column>
            <column>[federated.0opxemw1tglw111h5k6551wiyoo5].[none:gdp_usd:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.0opxemw1tglw111h5k6551wiyoo5].[avg:gdp_usd:qk]' num-steps='5' type='interpolated' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='tab_base' value='true' />
            <format attr='enabled' id='um_lcover' value='true' />
            <format attr='enabled' id='tab_coastline' value='false' />
            <format attr='enabled' id='pp2_line' value='false' />
            <format attr='enabled' id='light_adm0_bnd' value='false' />
            <format attr='enabled' id='light_adm0_lbl' value='false' />
            <format attr='enabled' id='um_adm0_bnd' value='true' />
            <format attr='enabled' id='um_adm0_lbl' value='true' />
            <format attr='enabled' id='light_pp2_statebounds' value='false' />
            <format attr='enabled' id='light_pp2_statelabels' value='false' />
            <format attr='enabled' id='pp2_adminlabels' value='false' />
            <format attr='enabled' id='pp2_statebounds' value='true' />
            <format attr='enabled' id='pp2_statelabels' value='true' />
            <format attr='enabled' id='countybounds' value='false' />
            <format attr='enabled' id='countylabels' value='false' />
            <format attr='enabled' id='zipbounds' value='false' />
            <format attr='enabled' id='ziplabels' value='false' />
            <format attr='enabled' id='tab_areabounds' value='false' />
            <format attr='enabled' id='tab_arealabels' value='false' />
            <format attr='enabled' id='tab_msabounds' value='false' />
            <format attr='enabled' id='tab_msalabels' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.0opxemw1tglw111h5k6551wiyoo5].[avg:gdp_usd:qk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0opxemw1tglw111h5k6551wiyoo5].[none:country_name:nk]</rows>
        <cols />
      </table>
    </worksheet>
    <worksheet name='World &amp; Group'>
      <table>
        <view>
          <datasources>
            <datasource caption='world_gpd_pivoted' name='federated.0opxemw1tglw111h5k6551wiyoo5' />
          </datasources>
          <datasource-dependencies datasource='federated.0opxemw1tglw111h5k6551wiyoo5'>
            <column-instance column='[gdp_usd]' derivation='Avg' name='[avg:gdp_usd:qk]' pivot='key' type='quantitative' />
            <column caption='Country Name' datatype='string' name='[country_name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column caption='Gdp Usd' datatype='real' name='[gdp_usd]' role='measure' type='quantitative' />
            <column-instance column='[country_name]' derivation='None' name='[none:country_name:nk]' pivot='key' type='nominal' />
            <column-instance column='[year]' derivation='None' name='[none:year:qk]' pivot='key' type='quantitative' />
            <column aggregation='Sum' caption='Year' datatype='integer' name='[year]' role='dimension' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0opxemw1tglw111h5k6551wiyoo5].[none:country_name:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:country_name:nk]' member='&quot;Arab World&quot;' />
              <groupfilter function='member' level='[none:country_name:nk]' member='&quot;Central African Republic&quot;' />
              <groupfilter function='member' level='[none:country_name:nk]' member='&quot;Central Europe and the Baltics&quot;' />
              <groupfilter function='member' level='[none:country_name:nk]' member='&quot;East Asia &amp; Pacific&quot;' />
              <groupfilter function='member' level='[none:country_name:nk]' member='&quot;Euro area&quot;' />
              <groupfilter function='member' level='[none:country_name:nk]' member='&quot;Europe &amp; Central Asia&quot;' />
              <groupfilter function='member' level='[none:country_name:nk]' member='&quot;European Union&quot;' />
              <groupfilter function='member' level='[none:country_name:nk]' member='&quot;Latin America &amp; Caribbean&quot;' />
              <groupfilter function='member' level='[none:country_name:nk]' member='&quot;Middle East &amp; North Africa&quot;' />
              <groupfilter function='member' level='[none:country_name:nk]' member='&quot;North America&quot;' />
              <groupfilter function='member' level='[none:country_name:nk]' member='&quot;OECD members&quot;' />
              <groupfilter function='member' level='[none:country_name:nk]' member='&quot;Pacific island small states&quot;' />
              <groupfilter function='member' level='[none:country_name:nk]' member='&quot;Sub-Saharan Africa&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0opxemw1tglw111h5k6551wiyoo5].[none:country_name:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.0opxemw1tglw111h5k6551wiyoo5].[avg:gdp_usd:qk]' scope='rows' value='GDP (USD)' />
            <format attr='subtitle' class='0' field='[federated.0opxemw1tglw111h5k6551wiyoo5].[avg:gdp_usd:qk]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[federated.0opxemw1tglw111h5k6551wiyoo5].[avg:gdp_usd:qk]' scope='rows' value='true' />
            <format attr='width' field='[federated.0opxemw1tglw111h5k6551wiyoo5].[avg:gdp_usd:qk]' value='10' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Area' />
            <encodings>
              <color column='[federated.0opxemw1tglw111h5k6551wiyoo5].[none:country_name:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0opxemw1tglw111h5k6551wiyoo5].[avg:gdp_usd:qk]</rows>
        <cols>[federated.0opxemw1tglw111h5k6551wiyoo5].[none:year:qk]</cols>
      </table>
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard name='Dashboard 1'>
      <style />
      <size sizing-mode='automatic' />
      <datasources>
        <datasource caption='world_gpd_pivoted' name='federated.0opxemw1tglw111h5k6551wiyoo5' />
      </datasources>
      <datasource-dependencies datasource='federated.0opxemw1tglw111h5k6551wiyoo5'>
        <column-instance column='[year]' derivation='None' name='[none:year:ok]' pivot='key' type='ordinal' />
        <column aggregation='Sum' caption='Year' datatype='integer' name='[year]' role='dimension' type='ordinal' />
      </datasource-dependencies>
      <zones use-insets='false'>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='61591' id='5' param='horz' type='layout-flow' w='99318' x='341' y='638'>
            <zone h='61591' id='3' type='layout-basic' w='92507' x='341' y='638'>
              <zone h='61591' id='1' name='Countries' w='46254' x='341' y='638'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='61591' id='8' name='Groups' w='46253' x='46595' y='638'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
            <zone fixed-size='160' h='61591' id='4' is-fixed='true' param='vert' type='layout-flow' w='6811' x='92848' y='638'>
              <zone h='4147' id='6' mode='dropdown' name='Countries' param='[federated.0opxemw1tglw111h5k6551wiyoo5].[none:year:ok]' type='filter' w='6811' x='92848' y='638'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='5183' id='7' name='Countries' pane-specification-id='0' param='[federated.0opxemw1tglw111h5k6551wiyoo5].[sum:gdp_usd:qk]' type='color' w='6811' x='92848' y='4785'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='22807' id='11' name='World &amp; Group' pane-specification-id='0' param='[federated.0opxemw1tglw111h5k6551wiyoo5].[none:country_name:nk]' type='color' w='6811' x='92848' y='9968'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone h='37133' id='10' name='World &amp; Group' w='99318' x='341' y='62229'>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
    </dashboard>
    <dashboard name='Dashboard 2'>
      <style />
      <size sizing-mode='automatic' />
      <datasources>
        <datasource caption='world_gpd_pivoted' name='federated.0opxemw1tglw111h5k6551wiyoo5' />
      </datasources>
      <datasource-dependencies datasource='federated.0opxemw1tglw111h5k6551wiyoo5'>
        <column-instance column='[year]' derivation='None' name='[none:year:ok]' pivot='key' type='ordinal' />
        <column aggregation='Sum' caption='Year' datatype='integer' name='[year]' role='dimension' type='ordinal' />
      </datasource-dependencies>
      <zones use-insets='false'>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='98724' id='5' param='horz' type='layout-flow' w='99318' x='341' y='638'>
            <zone h='98724' id='3' type='layout-basic' w='92507' x='341' y='638'>
              <zone h='58589' id='1' name='Countries' w='92507' x='341' y='638'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='40135' id='9' name='Groups' w='35603' x='341' y='59227'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='40135' id='11' name='World &amp; Group' w='56904' x='35944' y='59227'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
            <zone fixed-size='160' h='98724' id='4' is-fixed='true' param='vert' type='layout-flow' w='6811' x='92848' y='638'>
              <zone h='4147' id='6' mode='dropdown' name='Countries' param='[federated.0opxemw1tglw111h5k6551wiyoo5].[none:year:ok]' type='filter' w='6811' x='92848' y='638'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='5183' id='7' name='Countries' pane-specification-id='0' param='[federated.0opxemw1tglw111h5k6551wiyoo5].[sum:gdp_usd:qk]' type='color' w='6811' x='92848' y='4785'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='5183' id='10' name='Groups' pane-specification-id='0' param='[federated.0opxemw1tglw111h5k6551wiyoo5].[avg:gdp_usd:qk]' type='color' w='6811' x='92848' y='9968'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='22807' id='12' name='World &amp; Group' pane-specification-id='0' param='[federated.0opxemw1tglw111h5k6551wiyoo5].[none:country_name:nk]' type='color' w='6811' x='92848' y='15151'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
    </dashboard>
    <dashboard name='Dashboard 3'>
      <style />
      <size sizing-mode='automatic' />
      <datasources>
        <datasource caption='world_gpd_pivoted' name='federated.0opxemw1tglw111h5k6551wiyoo5' />
      </datasources>
      <datasource-dependencies datasource='federated.0opxemw1tglw111h5k6551wiyoo5'>
        <column-instance column='[year]' derivation='None' name='[none:year:ok]' pivot='key' type='ordinal' />
        <column aggregation='Sum' caption='Year' datatype='integer' name='[year]' role='dimension' type='ordinal' />
      </datasource-dependencies>
      <zones use-insets='false'>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='98724' id='5' param='horz' type='layout-flow' w='99318' x='341' y='638'>
            <zone h='98724' id='3' type='layout-basic' w='92507' x='341' y='638'>
              <zone h='98724' id='1' name='Sheet 7' w='46254' x='46594' y='638'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='49362' id='7' name='Sheet 4' w='46253' x='341' y='638'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='49362' id='9' name='Sheet 5' w='46253' x='341' y='50000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
            <zone fixed-size='160' h='98724' id='4' is-fixed='true' param='vert' type='layout-flow' w='6811' x='92848' y='638'>
              <zone h='4147' id='6' mode='dropdown' name='Sheet 7' param='[federated.0opxemw1tglw111h5k6551wiyoo5].[none:year:ok]' type='filter' w='6811' x='92848' y='638'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='5183' id='8' name='Sheet 4' pane-specification-id='0' param='[federated.0opxemw1tglw111h5k6551wiyoo5].[sum:gdp_usd:qk]' type='color' w='6811' x='92848' y='4785'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='5183' id='10' name='Sheet 5' pane-specification-id='0' param='[federated.0opxemw1tglw111h5k6551wiyoo5].[avg:gdp_usd:qk]' type='color' w='6811' x='92848' y='9968'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
    </dashboard>
  </dashboards>
  <windows saved-dpi-scale-factor='1.25' source-height='30'>
    <window class='worksheet' name='Countries'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='dropdown' param='[federated.0opxemw1tglw111h5k6551wiyoo5].[none:year:ok]' type='filter' />
            <card pane-specification-id='0' param='[federated.0opxemw1tglw111h5k6551wiyoo5].[sum:gdp_usd:qk]' type='color' />
            <card pane-specification-id='0' param='[federated.0opxemw1tglw111h5k6551wiyoo5].[avg:gdp_usd:qk]' type='size' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0opxemw1tglw111h5k6551wiyoo5].[avg:gdp_usd:qk]</field>
            <field>[federated.0opxemw1tglw111h5k6551wiyoo5].[none:country_name:nk]</field>
            <field>[federated.0opxemw1tglw111h5k6551wiyoo5].[none:gdp_usd:qk]</field>
            <field>[federated.0opxemw1tglw111h5k6551wiyoo5].[none:year:ok]</field>
            <field>[federated.0opxemw1tglw111h5k6551wiyoo5].[none:year:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Groups'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='dropdown' param='[federated.0opxemw1tglw111h5k6551wiyoo5].[none:year:ok]' type='filter' />
            <card pane-specification-id='0' param='[federated.0opxemw1tglw111h5k6551wiyoo5].[avg:gdp_usd:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0opxemw1tglw111h5k6551wiyoo5].[avg:gdp_usd:qk]</field>
            <field>[federated.0opxemw1tglw111h5k6551wiyoo5].[none:country_name:nk]</field>
            <field>[federated.0opxemw1tglw111h5k6551wiyoo5].[none:year:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='World &amp; Group'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0opxemw1tglw111h5k6551wiyoo5].[none:country_name:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0opxemw1tglw111h5k6551wiyoo5].[none:country_code:nk]</field>
            <field>[federated.0opxemw1tglw111h5k6551wiyoo5].[none:country_name:nk]</field>
            <field>[federated.0opxemw1tglw111h5k6551wiyoo5].[none:year:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='dashboard' name='Dashboard 1'>
      <viewpoints>
        <viewpoint name='Countries'>
          <highlight>
            <color-one-way>
              <field>[federated.0opxemw1tglw111h5k6551wiyoo5].[sum:gdp_usd:qk]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
        <viewpoint name='Groups' />
        <viewpoint name='World &amp; Group'>
          <zoom type='entire-view' />
          <highlight field='[federated.0opxemw1tglw111h5k6551wiyoo5].[none:country_name:nk]'>
            <bucket-selection />
          </highlight>
        </viewpoint>
      </viewpoints>
      <active id='6' />
    </window>
    <window class='dashboard' name='Dashboard 2'>
      <viewpoints>
        <viewpoint name='Countries'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Groups' />
        <viewpoint name='World &amp; Group'>
          <zoom type='entire-view' />
          <highlight>
            <color-one-way>
              <field>[federated.0opxemw1tglw111h5k6551wiyoo5].[none:country_name:nk]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
      </viewpoints>
      <active id='-1' />
    </window>
    <window class='worksheet' name='Sheet 4'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0opxemw1tglw111h5k6551wiyoo5].[sum:gdp_usd:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0opxemw1tglw111h5k6551wiyoo5].[avg:gdp_usd:qk]</field>
            <field>[federated.0opxemw1tglw111h5k6551wiyoo5].[none:country_name:nk]</field>
            <field>[federated.0opxemw1tglw111h5k6551wiyoo5].[none:gdp_usd:qk]</field>
            <field>[federated.0opxemw1tglw111h5k6551wiyoo5].[none:year:ok]</field>
            <field>[federated.0opxemw1tglw111h5k6551wiyoo5].[none:year:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Sheet 5'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0opxemw1tglw111h5k6551wiyoo5].[avg:gdp_usd:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0opxemw1tglw111h5k6551wiyoo5].[avg:gdp_usd:qk]</field>
            <field>[federated.0opxemw1tglw111h5k6551wiyoo5].[none:country_name:nk]</field>
            <field>[federated.0opxemw1tglw111h5k6551wiyoo5].[none:year:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Sheet 7'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='dropdown' param='[federated.0opxemw1tglw111h5k6551wiyoo5].[none:year:ok]' type='filter' />
          </strip>
        </edge>
      </cards>
    </window>
    <window class='dashboard' maximized='true' name='Dashboard 3'>
      <viewpoints>
        <viewpoint name='Sheet 4' />
        <viewpoint name='Sheet 5' />
        <viewpoint name='Sheet 7' />
      </viewpoints>
      <active id='-1' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Countries' width='192'>
      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
      gg==
    </thumbnail>
    <thumbnail height='192' name='Dashboard 1' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Dashboard 2' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Dashboard 3' width='192'>
      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
      7f8D9oNhevIlYfoAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Groups' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAADrUlEQVR4nO3Zz2pjdRjG8SdNmloqrVOrDLpQBlwI4kLmArw6r8PbcOcVuJWKIorj1P6b
      ZNo4bZI2bmZ0BurgYmjB5/PZhPdwAu9v8T0cksFqtVoFSq3d9QJwlwRAtdHLw1dff5Mffj28
      q13g1r0SwP4vf+S7/d/uahe4df/6CjR48Tn4Zx68GOB/YnTTxYefPcj2OJleJM/Optnc3snT
      6SQffXA/R8fH2X/8NA/e38l8ucjk4jpry8vs7t7L6nqZ0XCYxfwyR7OrbGSZ4fp6RqNRzqbT
      nM4Wt30+eK0bA7iaz3OySMbDcTIY5GpxmUens1xfH2Z7a5z39razMVzLajXKw0/v58nkSc5n
      qwyH69nZWcvxbJQvP34njybnWf55nuX47YxXi5zOprd9PnitGwP48WCSnfVV5oNx7m0M8tPB
      NLub6xm/Nc73Pz/O9dowx0lWSY5m82xkkZOzeQZJxifj7G2u59vDabZGqxxPZ9l99zqz6exW
      Dwb/xY0BnD09z1mSZJYXvwmdJcnJ+fNp+fe9FyeTV777bL7I9PmD/snza78fnLyZbeEN8z8A
      1QRANQFQTQBUEwDVBEA1AVBNAFQTANUEQDUBUE0AVBMA1QRANQFQTQBUEwDVBEA1AVBNAFQT
      ANUEQDUBUE0AVBMA1QRANQFQTQBUEwDVBEA1AVBNAFQTANUEQDUBUE0AVBMA1QRANQFQTQBU
      EwDVBEA1AVBNAFQTANUEQDUBUE0AVBMA1QRANQFQTQBUEwDVBEA1AVBNAFQTANUEQDUBUE0A
      VBMA1QRANQFQTQBUEwDVBEA1AVBNAFQTANUEQDUBUE0AVBMA1QRANQFQTQBUEwDVBEA1AVBN
      AFQTANUEQDUBUE0AVBMA1QRANQFQTQBUEwDVBEA1AVBNAFQTANUEQDUBUE0AVBMA1QRANQFQ
      TQBUEwDVBEA1AVBNAFQTANUEQDUBUE0AVBMA1QRANQFQTQBUEwDVBEA1AVBNAFQTANUEQDUB
      UE0AVBMA1QRANQFQTQBUEwDVBEA1AVBNAFQTANUEQDUBUE0AVBMA1QRANQFQTQBUEwDVBEA1
      AVBNAFQTANUEQDUBUE0AVBMA1QRANQFQTQBUEwDVBEA1AVBNAFQTANUEQDUBUE0AVBMA1QRA
      NQFQTQBUEwDVBEA1AVBNAFQTANUEQDUBUE0AVBMA1QRANQFQTQBUEwDVBEA1AVBNAFQTANUE
      QDUBUE0AVBMA1UYvD59/8Um2Pty7q13g1v0FKluOlfzv+/4AAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Sheet 4' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAGiUlEQVR4nO3Zy24b1wHG8W+GF5HiRaIkW5RIXSpbiBsHghs4QNCg6LbookAfoM/SVR+h
      66K7vkG7aLPopkCbuE1cG3LQWrIs27rfTPE+M104UGVETRw1lAR//99qhhiec0Twj+HRBEmS
      JAJMhZe9AOAyEQCspU+f/Oo3f9AXa1uXtRbgxORYST/80Ydq9aKBzvNaAMurm7r36OlAJwTe
      xGy1ou8ttdXoXGAA5xFIYheNQUriWAqCk/Pg1PHJNaf+lxMEwanz4PRbv3LdmQG8tzClVqen
      RjdWNukpUyhqYSynfz47Uvf4paZr02oe7mhmblZbm7uqTY7o4eq2MkGgxdkJffbvDWUVqVAu
      afXpproRieCc4rb+/sffq35rSd3OscJMQeWRslqtjrrNI41NVrW7taPa3LSerW1L/SMpltKZ
      tI7bbV2v1tXtRyqUxxUkfa3e+5Mm3/1Ay59+rrn56tmb4EwmpUIuq/FiVrnhggrZQE93Grr7
      7owWF28o3WsoTqTllQ1NlPNa3zzQeKWspYVJrW8daOmdWc1NX1N1YkQj+cxFf2R4q6RVu3lT
      e08fq9XuqHW4rWdPnijVO1QSt/XoH/cVBpF6Kqp/8FiZfFG7zx5p/cu97Mr9v2rnxXOtf/6x
      jjuJRuuLWr33iaozE9p/8eTsO8DK5pEKYaTdRkdSoDAMNFkp6m8P1qRuS+WRsjb3mxqtDOmL
      tQ2l8wXFxwfa295RkM3ps+UnKmQCZXN5HTS7F/lp4W0ThEqSULNLHyoI9er3dtzVcbOjVPRS
      3797S0EYKJ2Srt/8gXLFEanf1XBlSulMWkmtrkYzUnM/UGW0oF5+XqXxKaVSGR3kSgpOPwj7
      xS9/yyYYV8JstaKf/fynA98E8xwA1ggA1ggA1ggA1ggA1ggA1ggA1ggA1ggA1ggA1ggA1ggA
      1ggA1ggA1ggA1ggA1ggA1ggA1ggA1ggA1ggA1ggA1ggA1ggA1ggA1ggA1ggA1ggA1ggA1ggA
      1ggA1ggA1ggA1ggA1ggA1ggA1ggA1ggA1ggA1ggA1ggA1ggA1ggA1ggA1ggA1ggA1ggA1ggA
      1ggA1ggA1ggA1ggA1ggA1ggA1ggA1ggA1ggA1ggA1ggA1ggA1ggA1ggA1ggA1ggA1ggA1ggA
      1ggA1ggA1ggA1ggA1ggA1ggA1ggA1ggA1ggA1ggA1ggA1ggA1ggA1ggA1ggA1ggA1ggA1tKX
      vQDgf6kMZzWUjgY6BwHgymr1IjW7/YHOQQC4stq9SK1ePNA52APgyov6XcVxMpCxuQPgymvs
      rqvbDdWLJXX2lC1Pqrn7QqVrVe1tbmv+9h2lwuBcYxMArrQk6mr3xXP1Om1tbO6rVrum5stD
      bfzrvobr72uqXlW/Fys1lDrX+ASAqy1Mq/bO+0qlQs3HUmNvQyPX66rfuqt0NqcwDBWE5/8l
      TwC40oIg1FB+WNKrL+vQ9Pyr43TpOxmfTTCsEQCsEQCsEQCsEQCsEQCsEQCsEQCsEQCsEQCs
      EQCsEQCsEQCsEQCsEQCsEQCsEQCsEQCsEQCsEQCsEQCsEQCsEQCsEQCsEQCsEQCsEQCsEQCs
      EQCsEQCsEQCsEQCsEQCsEQCsEQCsEQCsEQCsEQCsEQCsEQCsEQCsEQCsEQCsEQCsEQCsEQCs
      EQCsEQCsEQCsEQCsEQCsEQCsEQCsEQCsEQCsEQCsEQCsEQCsEQCsEQCsEQCsEQCsEQCsEQCs
      EQCsEQCsEQCsEQCsEQCsEQCsEQCsEQCsEQCsEQCsEQCspU+ffPTBe6rNzFzWWoAT4+X8hczz
      WgDP9zt6vN28kImBr9PsSz+5XVCrFw90nvQ3XwJcjsNOrOZlBHCjNqZ+p6dIkbaOesokkeIg
      UC9OFCaJulEy0EUBF+XsO0AUaX2/rTs3KiqWUxqJW4pSaR3HKU3lA338cOOClwlfidYefqJw
      +Jrq8/Pf+ehnBnDYiTQ9ktXy2p4y2SHtxV01+1KhkFPr5WBvScBr4ob68bDUOtCff/drleq3
      lS9X1DtcUbeXUuX6rB58+hfdWlpSN06pUikpTBdVnZ19o+HPDGBnv/Hfk3b/5LDR7v1/fwzw
      bYUFqX+gKChqcuG2CmPTGq/PqXU4Kkl6ubWn6YVFlSZmlM2mtLPyQFNLP37j4dkE44oLtXDn
      o6+8ms/NSZLGJuc0d+r1zFBOxeHsG49OAHirlEbHvtX1PAmGNQKANQKANQKANQKANQKANQKA
      tf8AAi2Q+KDI0WsAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Sheet 5' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAADrUlEQVR4nO3Zz2pjdRjG8SdNmloqrVOrDLpQBlwI4kLmArw6r8PbcOcVuJWKIorj1P6b
      ZNo4bZI2bmZ0BurgYmjB5/PZhPdwAu9v8T0cksFqtVoFSq3d9QJwlwRAtdHLw1dff5Mffj28
      q13g1r0SwP4vf+S7/d/uahe4df/6CjR48Tn4Zx68GOB/YnTTxYefPcj2OJleJM/Optnc3snT
      6SQffXA/R8fH2X/8NA/e38l8ucjk4jpry8vs7t7L6nqZ0XCYxfwyR7OrbGSZ4fp6RqNRzqbT
      nM4Wt30+eK0bA7iaz3OySMbDcTIY5GpxmUens1xfH2Z7a5z39razMVzLajXKw0/v58nkSc5n
      qwyH69nZWcvxbJQvP34njybnWf55nuX47YxXi5zOprd9PnitGwP48WCSnfVV5oNx7m0M8tPB
      NLub6xm/Nc73Pz/O9dowx0lWSY5m82xkkZOzeQZJxifj7G2u59vDabZGqxxPZ9l99zqz6exW
      Dwb/xY0BnD09z1mSZJYXvwmdJcnJ+fNp+fe9FyeTV777bL7I9PmD/snza78fnLyZbeEN8z8A
      1QRANQFQTQBUEwDVBEA1AVBNAFQTANUEQDUBUE0AVBMA1QRANQFQTQBUEwDVBEA1AVBNAFQT
      ANUEQDUBUE0AVBMA1QRANQFQTQBUEwDVBEA1AVBNAFQTANUEQDUBUE0AVBMA1QRANQFQTQBU
      EwDVBEA1AVBNAFQTANUEQDUBUE0AVBMA1QRANQFQTQBUEwDVBEA1AVBNAFQTANUEQDUBUE0A
      VBMA1QRANQFQTQBUEwDVBEA1AVBNAFQTANUEQDUBUE0AVBMA1QRANQFQTQBUEwDVBEA1AVBN
      AFQTANUEQDUBUE0AVBMA1QRANQFQTQBUEwDVBEA1AVBNAFQTANUEQDUBUE0AVBMA1QRANQFQ
      TQBUEwDVBEA1AVBNAFQTANUEQDUBUE0AVBMA1QRANQFQTQBUEwDVBEA1AVBNAFQTANUEQDUB
      UE0AVBMA1QRANQFQTQBUEwDVBEA1AVBNAFQTANUEQDUBUE0AVBMA1QRANQFQTQBUEwDVBEA1
      AVBNAFQTANUEQDUBUE0AVBMA1QRANQFQTQBUEwDVBEA1AVBNAFQTANUEQDUBUE0AVBMA1QRA
      NQFQTQBUEwDVBEA1AVBNAFQTANUEQDUBUE0AVBMA1QRANQFQTQBUEwDVBEA1AVBNAFQTANUE
      QDUBUE0AVBMA1UYvD59/8Um2Pty7q13g1v0FKluOlfzv+/4AAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Sheet 7' width='192'>
      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
      ySKapgn/AmUHycA7KB7OAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='World &amp; Group' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAEh0lEQVR4nO3d0WtbZQDG4e+kcVZaBJmIjjoG4o3/hTf6/1+6YvVOVGxF17ranO/zqm2O
      aXLqAsmp7/PAYFt4u3OxH03Kd5KutdYKhJr9+y/Geti2F3v7Ke3ny3+otZa+70vXdWu/QK21
      zGYr3Tyavf2U9oMAZrNZaa2Vg4ODtV9gsViU+Xy+9vEx9vZT2r97SvA/IACiCYBoAiCaAIgm
      AKIJgGgCIJoAiCYAogmAaAIgmgCINjhWd3tW2j0B9in7lQBqrRvHtdaN9wuMsbef0v4/3w8w
      9vgYe/sp7b0GIJoAiCYAogmAaAIgmgCIJgCiCYBoAiCaAIgmAKIJgGgCIFq3/AEZ3h7dPm3v
      7dHto/eeAhFNAEQTANEEQDQBEE0ARBMA0QRANAEQTQBEEwDRBEA0ARBNAERzP4B99N79APbR
      e0+BiCYAogmAaAIgmgCIJgCiCYBoAiCaAIgmAKIJgGgCIJoAiDY4VldrLa210vf92sHY42Ps
      7ae0HwRwex/ApvPWrbWtzmPb209pvxLA7a9Nxh4fY28/lb3XAEQTANEEQDQBEE0ARBMA0QRA
      NAEQTQBEEwDRBEA0ARBNAETz9uj20Xtvj24fvfcUiGgCIJoAiCYAogmAaAIgmgCIJgCiCYBo
      AiCaAIgmAKIJgGiDY3W3J6OXTkg/aOzxMfb2U9mvBHD7GQHr1Fq3+sft7ae0dz+AffTeawCi
      CYBoAiCaAIgmAKIJgGgCIJoAiCYAogmAaAIgmgCIJgCieXt0++i949D20XtPgYgmAKIJgGgC
      IJoAiCYAogmAaAIgmgCIJgCiCYBoAiCaAIgmAKLd3Q/QWivnv/xUbspB+fj587WDqZ3ntrff
      Zn93MPrtm4tyevZjeXHycuN566md57a332Z/l8Lh0WH54/fr8uHx0Tt/cXhq7r8XdAfl8Fkp
      v/368x4vB3brPoDWl8X1VTm/3O7zl+ApWfoO8Kx8cHxcXp58ssfLgd1aejndlRcnn5e5H4wS
      5O6/+9s35+W70x/K1dXVPq8Hdur+p0DHz8sXrz7b57XAzi094bkp35+elYuLy/1dDezY0k+B
      FmVx08rirz/3eDmwW0s/BZqX+fvz8umJp0HkGHwHKHVWrv++2ePlwG4NvgN8+dWrcuk1AEFm
      y789e31Wjj463t/VwI7dHYvruvfK1998W/q+3+f1wE4NPh+gtTYawNTOc9vbb7MfHKzuuq50
      XefzAexj9k7+EE0ARBMA0QRANAEQTQBEEwDRBEA0ARBNAEQTANEEQDQBEG1wrK7WWmqtGweP
      OTJtb/9U9oMAZrNZaa1tPG899vhjLsDefir7Bw9Wd1238YuMPT7G3n4qe68BiCYAogmAaAIg
      mgCIJgCiCYBoAiCaAIgmAKIJgGgCIJoAiDZ4e/Raa+n7fuNpu6m9vbW9/Tb7B+8H8Pbo9il7
      T4GIJgCiCYBoAiCaAIgmAKIJgGgCIJoAiCYAogmAaAIgmgCItvL26K21snRC+kFjj4+xt5/K
      fuU49O09AeuMfX7AGHv7Ke1XDlZ3Xed+APuY/T/BlmO5uE/1BQAAAABJRU5ErkJggg==
    </thumbnail>
  </thumbnails>
</workbook>
