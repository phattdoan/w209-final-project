<?xml version='1.0' encoding='utf-8' ?>

<!-- build 10400.17.0915.2112                               -->
<workbook original-version='10.4' source-build='10.4.0 (10400.17.0915.2112)' source-platform='win' version='10.4' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='world_gpd_pivoted' inline='true' name='federated.0opxemw1tglw111h5k6551wiyoo5' version='10.4'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='world_gpd_pivoted' name='textscan.0sce2em0d1d3xd1fc3zht00ef3a5'>
            <connection class='textscan' directory='D:/Dropbox/Education/Bekerley Data Science/Fall 2017/w209 Data Visualization/w209-final-project/data' filename='world_gpd_pivoted.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <relation connection='textscan.0sce2em0d1d3xd1fc3zht00ef3a5' name='world_gpd_pivoted.csv' table='[world_gpd_pivoted#csv]' type='table'>
          <columns character-set='windows-1252' header='yes' locale='en_US' separator=','>
            <column datatype='string' name='country_name' ordinal='0' />
            <column datatype='string' name='country_code' ordinal='1' />
            <column datatype='integer' name='year' ordinal='2' />
            <column datatype='real' name='gdp_usd' ordinal='3' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>country_name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[country_name]</local-name>
            <parent-name>[world_gpd_pivoted.csv]</parent-name>
            <remote-alias>country_name</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>country_code</remote-name>
            <remote-type>129</remote-type>
            <local-name>[country_code]</local-name>
            <parent-name>[world_gpd_pivoted.csv]</parent-name>
            <remote-alias>country_code</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>year</remote-name>
            <remote-type>20</remote-type>
            <local-name>[year]</local-name>
            <parent-name>[world_gpd_pivoted.csv]</parent-name>
            <remote-alias>year</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>gdp_usd</remote-name>
            <remote-type>5</remote-type>
            <local-name>[gdp_usd]</local-name>
            <parent-name>[world_gpd_pivoted.csv]</parent-name>
            <remote-alias>gdp_usd</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[world_gpd_pivoted.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;windows-1252&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='Country Code' datatype='string' name='[country_code]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column caption='Country Name' datatype='string' name='[country_name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column caption='Gdp Usd' datatype='real' name='[gdp_usd]' role='measure' type='quantitative' />
      <column aggregation='Sum' caption='Year' datatype='integer' name='[year]' role='dimension' type='ordinal' />
      <column-instance column='[country_name]' derivation='None' name='[none:country_name:nk]' pivot='key' type='nominal' />
      <layout dim-ordering='alphabetic' dim-percentage='0.486146' measure-ordering='alphabetic' measure-percentage='0.513854' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:country_name:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Argentina&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Brunei Darussalam&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Costa Rica&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Estonia&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Greenland&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Indonesia&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Latin America &amp; Caribbean&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Maldives&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Nauru&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Paraguay&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Singapore&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Sudan&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;United Arab Emirates&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Afghanistan&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Benin&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Chad&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;East Asia &amp; Pacific&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;French Polynesia&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Hungary&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Kiribati&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Low income&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Moldova&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;OECD members&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Samoa&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Sri Lanka&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Trinidad and Tobago&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Yemen Rep.&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Andorra&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Bosnia and Herzegovina&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Colombia&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Egypt Arab Rep.&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Germany&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;IDA blend&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Kuwait&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Macedonia FYR&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Morocco&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Pakistan&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Senegal&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;St. Vincent and the Grenadines&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Turks and Caicos Islands&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Azerbaijan&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Cabo Verde&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Curacao&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Europe &amp; Central Asia (excluding high income)&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Guinea&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Isle of Man&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Least developed countries: UN classification&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Mauritania&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;New Zealand&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Portugal&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Small states&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Switzerland&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Uruguay&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Armenia&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Bulgaria&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Cote d&apos;Ivoire&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Ethiopia&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Grenada&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Iran Islamic Rep.&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Latin America &amp; Caribbean (excluding high income)&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Mali&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Nepal&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Peru&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Sint Maarten (Dutch part)&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Suriname&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;United Kingdom&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Angola&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Botswana&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Comoros&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;El Salvador&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Ghana&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;IDA only&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Kyrgyz Republic&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Madagascar&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Mozambique&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Palau&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Serbia&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Sub-Saharan Africa&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Tuvalu&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Belgium&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Central African Republic&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Dominican Republic&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Fragile and conflict affected situations&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Honduras&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Kazakhstan&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Lithuania&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Middle East &amp; North Africa (IDA &amp; IBRD countries)&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Norway&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Russian Federation&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Silicon Valley Revenue&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;South Sudan&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Togo&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;West Bank and Gaza&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Albania&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Bermuda&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Channel Islands&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;East Asia &amp; Pacific (excluding high income)&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Gabon&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;IBRD only&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Korea Dem. People’s Rep.&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Lower middle income&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Monaco&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Oman&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;San Marino&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Silicon Valley Market Cap&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;St. Kitts and Nevis&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Tunisia&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Zambia&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Barbados&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Caribbean small states&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Djibouti&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Fiji&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Heavily indebted poor countries (HIPC)&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Japan&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Libya&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Middle East &amp; North Africa&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;North America&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Qatar&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;South Asia&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Thailand&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Vietnam&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Antigua and Barbuda&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Brazil&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Congo Dem. Rep.&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Equatorial Guinea&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Gibraltar&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;IDA total&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Lao PDR&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Malawi&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Myanmar&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Panama&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Seychelles&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Sub-Saharan Africa (excluding high income)&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Uganda&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Bahamas The&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Cambodia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Cyprus&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Europe &amp; Central Asia (IDA &amp; IBRD countries)&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Guinea-Bissau&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Israel&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Lebanon&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Mauritius&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Nicaragua&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Post-demographic dividend&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Solomon Islands&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Syrian Arab Republic&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Uzbekistan&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Bahrain&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Cameroon&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Czech Republic&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;European Union&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Guyana&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Italy&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Lesotho&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Mexico&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Niger&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Pre-demographic dividend&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Somalia&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Tajikistan&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Vanuatu&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Belarus&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Cayman Islands&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Dominica&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Finland&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;High income&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Jordan&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Liechtenstein&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Middle East &amp; North Africa (excluding high income)&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Northern Mariana Islands&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Romania&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;South Asia (IDA &amp; IBRD)&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Timor-Leste&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Virgin Islands (U.S.)&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Belize&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Central Europe and the Baltics&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Early-demographic dividend&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;France&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Hong Kong SAR China&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Kenya&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Low &amp; middle income&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Middle income&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Not classified&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Rwanda&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Spain&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Tonga&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;World&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Australia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Burkina Faso&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Croatia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Euro area&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Guam&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Iraq&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Latin America &amp; the Caribbean (IDA &amp; IBRD countries)&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Malta&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Netherlands&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Philippines&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Slovak Republic&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Swaziland&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;United States&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Arab World&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;British Virgin Islands&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Congo Rep.&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Eritrea&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Greece&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;India&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Late-demographic dividend&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Malaysia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Namibia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Papua New Guinea&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Sierra Leone&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Sub-Saharan Africa (IDA &amp; IBRD countries)&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Ukraine&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Algeria&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Bhutan&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Chile&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;East Asia &amp; Pacific (IDA &amp; IBRD countries)&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Gambia The&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Iceland&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Korea Rep.&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Luxembourg&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Mongolia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Other small states&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Sao Tome and Principe&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;St. Lucia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Turkey&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Zimbabwe&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Bangladesh&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Canada&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Denmark&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Faroe Islands&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Haiti&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Jamaica&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Liberia&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Micronesia Fed. Sts.&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Nigeria&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Puerto Rico&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;South Africa&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Tanzania&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Venezuela RB&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Austria&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Burundi&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Cuba&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Europe &amp; Central Asia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Guatemala&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Ireland&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Latvia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Marshall Islands&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;New Caledonia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Poland&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Slovenia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Sweden&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Upper middle income&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;American Samoa&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Bolivia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;China&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Ecuador&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Georgia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;IDA &amp; IBRD total&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Kosovo&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Macao SAR China&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Montenegro&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Pacific island small states&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Saudi Arabia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;St. Martin (French part)&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Turkmenistan&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <actions>
    <action caption='Highlight1' name='[Action1]'>
      <activation auto-clear='true' type='on-hover' />
      <source dashboard='Dashboard 1' type='sheet' worksheet='Groups' />
      <command command='tsc:brush'>
        <param name='exclude' value='Countries,Groups' />
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard 1' />
      </command>
    </action>
    <action caption='Highlight2' name='[Action2]'>
      <activation auto-clear='true' type='on-hover' />
      <source dashboard='World GDP Dashboard' type='sheet' worksheet='Groups' />
      <command command='tsc:brush'>
        <param name='exclude' value='Countries,Groups' />
        <param name='special-fields' value='all' />
        <param name='target' value='World GDP Dashboard' />
      </command>
    </action>
  </actions>
  <worksheets>
    <worksheet name='Countries'>
      <table>
        <view>
          <datasources>
            <datasource caption='world_gpd_pivoted' name='federated.0opxemw1tglw111h5k6551wiyoo5' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0opxemw1tglw111h5k6551wiyoo5'>
            <column-instance column='[gdp_usd]' derivation='Avg' name='[avg:gdp_usd:qk]' pivot='key' type='quantitative' />
            <column caption='Country Name' datatype='string' name='[country_name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column caption='Gdp Usd' datatype='real' name='[gdp_usd]' role='measure' type='quantitative' />
            <column-instance column='[country_name]' derivation='None' name='[none:country_name:nk]' pivot='key' type='nominal' />
            <column-instance column='[gdp_usd]' derivation='None' name='[none:gdp_usd:qk]' pivot='key' type='quantitative' />
            <column-instance column='[year]' derivation='None' name='[none:year:ok]' pivot='key' type='ordinal' />
            <column-instance column='[gdp_usd]' derivation='Sum' name='[sum:gdp_usd:qk]' pivot='key' type='quantitative' />
            <column aggregation='Sum' caption='Year' datatype='integer' name='[year]' role='dimension' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0opxemw1tglw111h5k6551wiyoo5].[none:country_name:nk]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:country_name:nk]' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[none:country_name:nk]' member='&quot;Arab World&quot;' />
                <groupfilter function='member' level='[none:country_name:nk]' member='&quot;Central Europe and the Baltics&quot;' />
                <groupfilter function='member' level='[none:country_name:nk]' member='&quot;Early-demographic dividend&quot;' />
                <groupfilter function='member' level='[none:country_name:nk]' member='&quot;East Asia &amp; Pacific&quot;' />
                <groupfilter function='member' level='[none:country_name:nk]' member='&quot;East Asia &amp; Pacific (excluding high income)&quot;' />
                <groupfilter function='member' level='[none:country_name:nk]' member='&quot;East Asia &amp; Pacific (IDA &amp; IBRD countries)&quot;' />
                <groupfilter function='member' level='[none:country_name:nk]' member='&quot;Euro area&quot;' />
                <groupfilter function='member' level='[none:country_name:nk]' member='&quot;Europe &amp; Central Asia&quot;' />
                <groupfilter function='member' level='[none:country_name:nk]' member='&quot;Europe &amp; Central Asia (excluding high income)&quot;' />
                <groupfilter function='member' level='[none:country_name:nk]' member='&quot;Europe &amp; Central Asia (IDA &amp; IBRD countries)&quot;' />
                <groupfilter function='member' level='[none:country_name:nk]' member='&quot;European Union&quot;' />
                <groupfilter function='member' level='[none:country_name:nk]' member='&quot;Fragile and conflict affected situations&quot;' />
                <groupfilter function='member' level='[none:country_name:nk]' member='&quot;Heavily indebted poor countries (HIPC)&quot;' />
                <groupfilter function='member' level='[none:country_name:nk]' member='&quot;High income&quot;' />
                <groupfilter function='member' level='[none:country_name:nk]' member='&quot;IBRD only&quot;' />
                <groupfilter function='member' level='[none:country_name:nk]' member='&quot;IDA &amp; IBRD total&quot;' />
                <groupfilter function='member' level='[none:country_name:nk]' member='&quot;IDA blend&quot;' />
                <groupfilter function='member' level='[none:country_name:nk]' member='&quot;IDA only&quot;' />
                <groupfilter function='member' level='[none:country_name:nk]' member='&quot;IDA total&quot;' />
                <groupfilter function='member' level='[none:country_name:nk]' member='&quot;Late-demographic dividend&quot;' />
                <groupfilter function='member' level='[none:country_name:nk]' member='&quot;Latin America &amp; Caribbean&quot;' />
                <groupfilter function='member' level='[none:country_name:nk]' member='&quot;Latin America &amp; Caribbean (excluding high income)&quot;' />
                <groupfilter function='member' level='[none:country_name:nk]' member='&quot;Latin America &amp; the Caribbean (IDA &amp; IBRD countries)&quot;' />
                <groupfilter function='member' level='[none:country_name:nk]' member='&quot;Least developed countries: UN classification&quot;' />
                <groupfilter function='member' level='[none:country_name:nk]' member='&quot;Low &amp; middle income&quot;' />
                <groupfilter function='member' level='[none:country_name:nk]' member='&quot;Lower middle income&quot;' />
                <groupfilter function='member' level='[none:country_name:nk]' member='&quot;Middle East &amp; North Africa&quot;' />
                <groupfilter function='member' level='[none:country_name:nk]' member='&quot;Middle East &amp; North Africa (excluding high income)&quot;' />
                <groupfilter function='member' level='[none:country_name:nk]' member='&quot;Middle East &amp; North Africa (IDA &amp; IBRD countries)&quot;' />
                <groupfilter function='member' level='[none:country_name:nk]' member='&quot;Middle income&quot;' />
                <groupfilter function='member' level='[none:country_name:nk]' member='&quot;North America&quot;' />
                <groupfilter function='member' level='[none:country_name:nk]' member='&quot;OECD members&quot;' />
                <groupfilter function='member' level='[none:country_name:nk]' member='&quot;Post-demographic dividend&quot;' />
                <groupfilter function='member' level='[none:country_name:nk]' member='&quot;Pre-demographic dividend&quot;' />
                <groupfilter function='member' level='[none:country_name:nk]' member='&quot;Small states&quot;' />
                <groupfilter function='member' level='[none:country_name:nk]' member='&quot;South Asia&quot;' />
                <groupfilter function='member' level='[none:country_name:nk]' member='&quot;South Asia (IDA &amp; IBRD)&quot;' />
                <groupfilter function='member' level='[none:country_name:nk]' member='&quot;Sub-Saharan Africa&quot;' />
                <groupfilter function='member' level='[none:country_name:nk]' member='&quot;Sub-Saharan Africa (excluding high income)&quot;' />
                <groupfilter function='member' level='[none:country_name:nk]' member='&quot;Sub-Saharan Africa (IDA &amp; IBRD countries)&quot;' />
                <groupfilter function='member' level='[none:country_name:nk]' member='&quot;Upper middle income&quot;' />
                <groupfilter function='member' level='[none:country_name:nk]' member='&quot;World&quot;' />
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='quantitative' column='[federated.0opxemw1tglw111h5k6551wiyoo5].[none:gdp_usd:qk]' included-values='in-range'>
            <min>1.0</min>
          </filter>
          <filter class='categorical' column='[federated.0opxemw1tglw111h5k6551wiyoo5].[none:year:ok]' filter-group='3'>
            <groupfilter function='member' level='[none:year:ok]' member='2016' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0opxemw1tglw111h5k6551wiyoo5].[none:country_name:nk]</column>
            <column>[federated.0opxemw1tglw111h5k6551wiyoo5].[none:year:ok]</column>
            <column>[federated.0opxemw1tglw111h5k6551wiyoo5].[none:gdp_usd:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.0opxemw1tglw111h5k6551wiyoo5].[sum:gdp_usd:qk]' num-steps='20' palette='blue_10_0' type='interpolated' />
            <encoding attr='color' field='[federated.0opxemw1tglw111h5k6551wiyoo5].[avg:gdp_usd:qk]' num-steps='5' type='interpolated' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='tab_base' value='true' />
            <format attr='enabled' id='um_lcover' value='true' />
            <format attr='enabled' id='tab_coastline' value='false' />
            <format attr='enabled' id='pp2_line' value='false' />
            <format attr='enabled' id='light_adm0_bnd' value='false' />
            <format attr='enabled' id='light_adm0_lbl' value='false' />
            <format attr='enabled' id='um_adm0_bnd' value='true' />
            <format attr='enabled' id='um_adm0_lbl' value='true' />
            <format attr='enabled' id='light_pp2_statebounds' value='false' />
            <format attr='enabled' id='light_pp2_statelabels' value='false' />
            <format attr='enabled' id='pp2_adminlabels' value='false' />
            <format attr='enabled' id='pp2_statebounds' value='true' />
            <format attr='enabled' id='pp2_statelabels' value='true' />
            <format attr='enabled' id='countybounds' value='false' />
            <format attr='enabled' id='countylabels' value='false' />
            <format attr='enabled' id='zipbounds' value='false' />
            <format attr='enabled' id='ziplabels' value='false' />
            <format attr='enabled' id='tab_areabounds' value='false' />
            <format attr='enabled' id='tab_arealabels' value='false' />
            <format attr='enabled' id='tab_msabounds' value='false' />
            <format attr='enabled' id='tab_msalabels' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.0opxemw1tglw111h5k6551wiyoo5].[sum:gdp_usd:qk]' />
              <text column='[federated.0opxemw1tglw111h5k6551wiyoo5].[none:country_name:nk]' />
              <lod column='[federated.0opxemw1tglw111h5k6551wiyoo5].[none:country_name:nk]' />
              <size column='[federated.0opxemw1tglw111h5k6551wiyoo5].[avg:gdp_usd:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0opxemw1tglw111h5k6551wiyoo5].[Latitude (generated)]</rows>
        <cols>[federated.0opxemw1tglw111h5k6551wiyoo5].[Longitude (generated)]</cols>
      </table>
    </worksheet>
    <worksheet name='Groups'>
      <table>
        <view>
          <datasources>
            <datasource caption='world_gpd_pivoted' name='federated.0opxemw1tglw111h5k6551wiyoo5' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0opxemw1tglw111h5k6551wiyoo5'>
            <column-instance column='[gdp_usd]' derivation='Avg' name='[avg:gdp_usd:qk]' pivot='key' type='quantitative' />
            <column caption='Country Name' datatype='string' name='[country_name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column caption='Gdp Usd' datatype='real' name='[gdp_usd]' role='measure' type='quantitative' />
            <column-instance column='[country_name]' derivation='None' name='[none:country_name:nk]' pivot='key' type='nominal' />
            <column-instance column='[year]' derivation='None' name='[none:year:ok]' pivot='key' type='ordinal' />
            <column aggregation='Sum' caption='Year' datatype='integer' name='[year]' role='dimension' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0opxemw1tglw111h5k6551wiyoo5].[none:country_name:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:country_name:nk]' member='&quot;Arab World&quot;' />
              <groupfilter function='member' level='[none:country_name:nk]' member='&quot;Caribbean small states&quot;' />
              <groupfilter function='member' level='[none:country_name:nk]' member='&quot;Central Europe and the Baltics&quot;' />
              <groupfilter function='member' level='[none:country_name:nk]' member='&quot;East Asia &amp; Pacific&quot;' />
              <groupfilter function='member' level='[none:country_name:nk]' member='&quot;Europe &amp; Central Asia&quot;' />
              <groupfilter function='member' level='[none:country_name:nk]' member='&quot;European Union&quot;' />
              <groupfilter function='member' level='[none:country_name:nk]' member='&quot;Latin America &amp; Caribbean&quot;' />
              <groupfilter function='member' level='[none:country_name:nk]' member='&quot;Middle East &amp; North Africa&quot;' />
              <groupfilter function='member' level='[none:country_name:nk]' member='&quot;North America&quot;' />
              <groupfilter function='member' level='[none:country_name:nk]' member='&quot;OECD members&quot;' />
              <groupfilter function='member' level='[none:country_name:nk]' member='&quot;Pacific island small states&quot;' />
              <groupfilter function='member' level='[none:country_name:nk]' member='&quot;South Asia&quot;' />
              <groupfilter function='member' level='[none:country_name:nk]' member='&quot;Sub-Saharan Africa&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0opxemw1tglw111h5k6551wiyoo5].[none:year:ok]' filter-group='3'>
            <groupfilter function='member' level='[none:year:ok]' member='2016' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0opxemw1tglw111h5k6551wiyoo5].[none:country_name:nk]</column>
            <column>[federated.0opxemw1tglw111h5k6551wiyoo5].[none:year:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.0opxemw1tglw111h5k6551wiyoo5].[avg:gdp_usd:qk]' num-steps='5' type='interpolated' />
            <encoding attr='size-bar' field='[federated.0opxemw1tglw111h5k6551wiyoo5].[avg:gdp_usd:qk]' field-type='quantitative' max-size='1' min-size='0.005' type='centersize' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='tab_base' value='true' />
            <format attr='enabled' id='um_lcover' value='true' />
            <format attr='enabled' id='tab_coastline' value='false' />
            <format attr='enabled' id='pp2_line' value='false' />
            <format attr='enabled' id='light_adm0_bnd' value='false' />
            <format attr='enabled' id='light_adm0_lbl' value='false' />
            <format attr='enabled' id='um_adm0_bnd' value='true' />
            <format attr='enabled' id='um_adm0_lbl' value='true' />
            <format attr='enabled' id='light_pp2_statebounds' value='false' />
            <format attr='enabled' id='light_pp2_statelabels' value='false' />
            <format attr='enabled' id='pp2_adminlabels' value='false' />
            <format attr='enabled' id='pp2_statebounds' value='true' />
            <format attr='enabled' id='pp2_statelabels' value='true' />
            <format attr='enabled' id='countybounds' value='false' />
            <format attr='enabled' id='countylabels' value='false' />
            <format attr='enabled' id='zipbounds' value='false' />
            <format attr='enabled' id='ziplabels' value='false' />
            <format attr='enabled' id='tab_areabounds' value='false' />
            <format attr='enabled' id='tab_arealabels' value='false' />
            <format attr='enabled' id='tab_msabounds' value='false' />
            <format attr='enabled' id='tab_msalabels' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='on' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <size column='[federated.0opxemw1tglw111h5k6551wiyoo5].[avg:gdp_usd:qk]' />
              <color column='[federated.0opxemw1tglw111h5k6551wiyoo5].[avg:gdp_usd:qk]' />
              <text column='[federated.0opxemw1tglw111h5k6551wiyoo5].[none:country_name:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
    </worksheet>
    <worksheet name='Sheet 4'>
      <table>
        <view>
          <datasources>
            <datasource caption='world_gpd_pivoted' name='federated.0opxemw1tglw111h5k6551wiyoo5' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0opxemw1tglw111h5k6551wiyoo5'>
            <column-instance column='[gdp_usd]' derivation='Avg' name='[avg:gdp_usd:qk]' pivot='key' type='quantitative' />
            <column caption='Country Name' datatype='string' name='[country_name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column caption='Gdp Usd' datatype='real' name='[gdp_usd]' role='measure' type='quantitative' />
            <column-instance column='[country_name]' derivation='None' name='[none:country_name:nk]' pivot='key' type='nominal' />
            <column-instance column='[gdp_usd]' derivation='None' name='[none:gdp_usd:qk]' pivot='key' type='quantitative' />
            <column-instance column='[year]' derivation='None' name='[none:year:ok]' pivot='key' type='ordinal' />
            <column-instance column='[gdp_usd]' derivation='Sum' name='[sum:gdp_usd:qk]' pivot='key' type='quantitative' />
            <column aggregation='Sum' caption='Year' datatype='integer' name='[year]' role='dimension' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0opxemw1tglw111h5k6551wiyoo5].[none:country_name:nk]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:country_name:nk]' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[none:country_name:nk]' member='&quot;Arab World&quot;' />
                <groupfilter function='member' level='[none:country_name:nk]' member='&quot;Central Europe and the Baltics&quot;' />
                <groupfilter function='member' level='[none:country_name:nk]' member='&quot;Early-demographic dividend&quot;' />
                <groupfilter function='member' level='[none:country_name:nk]' member='&quot;East Asia &amp; Pacific&quot;' />
                <groupfilter function='member' level='[none:country_name:nk]' member='&quot;East Asia &amp; Pacific (excluding high income)&quot;' />
                <groupfilter function='member' level='[none:country_name:nk]' member='&quot;East Asia &amp; Pacific (IDA &amp; IBRD countries)&quot;' />
                <groupfilter function='member' level='[none:country_name:nk]' member='&quot;Euro area&quot;' />
                <groupfilter function='member' level='[none:country_name:nk]' member='&quot;Europe &amp; Central Asia&quot;' />
                <groupfilter function='member' level='[none:country_name:nk]' member='&quot;Europe &amp; Central Asia (excluding high income)&quot;' />
                <groupfilter function='member' level='[none:country_name:nk]' member='&quot;Europe &amp; Central Asia (IDA &amp; IBRD countries)&quot;' />
                <groupfilter function='member' level='[none:country_name:nk]' member='&quot;European Union&quot;' />
                <groupfilter function='member' level='[none:country_name:nk]' member='&quot;Fragile and conflict affected situations&quot;' />
                <groupfilter function='member' level='[none:country_name:nk]' member='&quot;Heavily indebted poor countries (HIPC)&quot;' />
                <groupfilter function='member' level='[none:country_name:nk]' member='&quot;High income&quot;' />
                <groupfilter function='member' level='[none:country_name:nk]' member='&quot;IBRD only&quot;' />
                <groupfilter function='member' level='[none:country_name:nk]' member='&quot;IDA &amp; IBRD total&quot;' />
                <groupfilter function='member' level='[none:country_name:nk]' member='&quot;IDA blend&quot;' />
                <groupfilter function='member' level='[none:country_name:nk]' member='&quot;IDA only&quot;' />
                <groupfilter function='member' level='[none:country_name:nk]' member='&quot;IDA total&quot;' />
                <groupfilter function='member' level='[none:country_name:nk]' member='&quot;Late-demographic dividend&quot;' />
                <groupfilter function='member' level='[none:country_name:nk]' member='&quot;Latin America &amp; Caribbean&quot;' />
                <groupfilter function='member' level='[none:country_name:nk]' member='&quot;Latin America &amp; Caribbean (excluding high income)&quot;' />
                <groupfilter function='member' level='[none:country_name:nk]' member='&quot;Latin America &amp; the Caribbean (IDA &amp; IBRD countries)&quot;' />
                <groupfilter function='member' level='[none:country_name:nk]' member='&quot;Least developed countries: UN classification&quot;' />
                <groupfilter function='member' level='[none:country_name:nk]' member='&quot;Low &amp; middle income&quot;' />
                <groupfilter function='member' level='[none:country_name:nk]' member='&quot;Lower middle income&quot;' />
                <groupfilter function='member' level='[none:country_name:nk]' member='&quot;Middle East &amp; North Africa&quot;' />
                <groupfilter function='member' level='[none:country_name:nk]' member='&quot;Middle East &amp; North Africa (excluding high income)&quot;' />
                <groupfilter function='member' level='[none:country_name:nk]' member='&quot;Middle East &amp; North Africa (IDA &amp; IBRD countries)&quot;' />
                <groupfilter function='member' level='[none:country_name:nk]' member='&quot;Middle income&quot;' />
                <groupfilter function='member' level='[none:country_name:nk]' member='&quot;North America&quot;' />
                <groupfilter function='member' level='[none:country_name:nk]' member='&quot;OECD members&quot;' />
                <groupfilter function='member' level='[none:country_name:nk]' member='&quot;Post-demographic dividend&quot;' />
                <groupfilter function='member' level='[none:country_name:nk]' member='&quot;Pre-demographic dividend&quot;' />
                <groupfilter function='member' level='[none:country_name:nk]' member='&quot;Small states&quot;' />
                <groupfilter function='member' level='[none:country_name:nk]' member='&quot;South Asia&quot;' />
                <groupfilter function='member' level='[none:country_name:nk]' member='&quot;South Asia (IDA &amp; IBRD)&quot;' />
                <groupfilter function='member' level='[none:country_name:nk]' member='&quot;Sub-Saharan Africa&quot;' />
                <groupfilter function='member' level='[none:country_name:nk]' member='&quot;Sub-Saharan Africa (excluding high income)&quot;' />
                <groupfilter function='member' level='[none:country_name:nk]' member='&quot;Sub-Saharan Africa (IDA &amp; IBRD countries)&quot;' />
                <groupfilter function='member' level='[none:country_name:nk]' member='&quot;Upper middle income&quot;' />
                <groupfilter function='member' level='[none:country_name:nk]' member='&quot;World&quot;' />
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='quantitative' column='[federated.0opxemw1tglw111h5k6551wiyoo5].[none:gdp_usd:qk]' included-values='in-range'>
            <min>1.0</min>
          </filter>
          <filter class='categorical' column='[federated.0opxemw1tglw111h5k6551wiyoo5].[none:year:ok]'>
            <groupfilter function='member' level='[none:year:ok]' member='2016' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0opxemw1tglw111h5k6551wiyoo5].[none:country_name:nk]</column>
            <column>[federated.0opxemw1tglw111h5k6551wiyoo5].[none:gdp_usd:qk]</column>
            <column>[federated.0opxemw1tglw111h5k6551wiyoo5].[none:year:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.0opxemw1tglw111h5k6551wiyoo5].[sum:gdp_usd:qk]' num-steps='20' palette='blue_10_0' type='interpolated' />
            <encoding attr='color' field='[federated.0opxemw1tglw111h5k6551wiyoo5].[avg:gdp_usd:qk]' num-steps='5' type='interpolated' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='tab_base' value='true' />
            <format attr='enabled' id='um_lcover' value='true' />
            <format attr='enabled' id='tab_coastline' value='false' />
            <format attr='enabled' id='pp2_line' value='false' />
            <format attr='enabled' id='light_adm0_bnd' value='false' />
            <format attr='enabled' id='light_adm0_lbl' value='false' />
            <format attr='enabled' id='um_adm0_bnd' value='true' />
            <format attr='enabled' id='um_adm0_lbl' value='true' />
            <format attr='enabled' id='light_pp2_statebounds' value='false' />
            <format attr='enabled' id='light_pp2_statelabels' value='false' />
            <format attr='enabled' id='pp2_adminlabels' value='false' />
            <format attr='enabled' id='pp2_statebounds' value='true' />
            <format attr='enabled' id='pp2_statelabels' value='true' />
            <format attr='enabled' id='countybounds' value='false' />
            <format attr='enabled' id='countylabels' value='false' />
            <format attr='enabled' id='zipbounds' value='false' />
            <format attr='enabled' id='ziplabels' value='false' />
            <format attr='enabled' id='tab_areabounds' value='false' />
            <format attr='enabled' id='tab_arealabels' value='false' />
            <format attr='enabled' id='tab_msabounds' value='false' />
            <format attr='enabled' id='tab_msalabels' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='on' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <size column='[federated.0opxemw1tglw111h5k6551wiyoo5].[avg:gdp_usd:qk]' />
              <color column='[federated.0opxemw1tglw111h5k6551wiyoo5].[sum:gdp_usd:qk]' />
              <text column='[federated.0opxemw1tglw111h5k6551wiyoo5].[none:country_name:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
    </worksheet>
    <worksheet name='Sheet 5'>
      <table>
        <view>
          <datasources>
            <datasource caption='world_gpd_pivoted' name='federated.0opxemw1tglw111h5k6551wiyoo5' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0opxemw1tglw111h5k6551wiyoo5'>
            <column-instance column='[gdp_usd]' derivation='Avg' name='[avg:gdp_usd:qk]' pivot='key' type='quantitative' />
            <column caption='Country Name' datatype='string' name='[country_name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column caption='Gdp Usd' datatype='real' name='[gdp_usd]' role='measure' type='quantitative' />
            <column-instance column='[country_name]' derivation='None' name='[none:country_name:nk]' pivot='key' type='nominal' />
            <column-instance column='[year]' derivation='None' name='[none:year:ok]' pivot='key' type='ordinal' />
            <column aggregation='Sum' caption='Year' datatype='integer' name='[year]' role='dimension' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0opxemw1tglw111h5k6551wiyoo5].[none:country_name:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:country_name:nk]' member='&quot;Arab World&quot;' />
              <groupfilter function='member' level='[none:country_name:nk]' member='&quot;Caribbean small states&quot;' />
              <groupfilter function='member' level='[none:country_name:nk]' member='&quot;Central Europe and the Baltics&quot;' />
              <groupfilter function='member' level='[none:country_name:nk]' member='&quot;East Asia &amp; Pacific&quot;' />
              <groupfilter function='member' level='[none:country_name:nk]' member='&quot;Europe &amp; Central Asia&quot;' />
              <groupfilter function='member' level='[none:country_name:nk]' member='&quot;European Union&quot;' />
              <groupfilter function='member' level='[none:country_name:nk]' member='&quot;Latin America &amp; Caribbean&quot;' />
              <groupfilter function='member' level='[none:country_name:nk]' member='&quot;Middle East &amp; North Africa&quot;' />
              <groupfilter function='member' level='[none:country_name:nk]' member='&quot;North America&quot;' />
              <groupfilter function='member' level='[none:country_name:nk]' member='&quot;OECD members&quot;' />
              <groupfilter function='member' level='[none:country_name:nk]' member='&quot;Pacific island small states&quot;' />
              <groupfilter function='member' level='[none:country_name:nk]' member='&quot;Silicon Valley Market Cap&quot;' />
              <groupfilter function='member' level='[none:country_name:nk]' member='&quot;Silicon Valley Revenue&quot;' />
              <groupfilter function='member' level='[none:country_name:nk]' member='&quot;South Asia&quot;' />
              <groupfilter function='member' level='[none:country_name:nk]' member='&quot;Sub-Saharan Africa&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0opxemw1tglw111h5k6551wiyoo5].[none:year:ok]' filter-group='3'>
            <groupfilter function='member' level='[none:year:ok]' member='2016' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0opxemw1tglw111h5k6551wiyoo5].[none:country_name:nk]</column>
            <column>[federated.0opxemw1tglw111h5k6551wiyoo5].[none:year:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.0opxemw1tglw111h5k6551wiyoo5].[avg:gdp_usd:qk]' num-steps='5' type='interpolated' />
            <encoding attr='size-bar' field='[federated.0opxemw1tglw111h5k6551wiyoo5].[avg:gdp_usd:qk]' field-type='quantitative' max-size='1' min-size='0.005' type='centersize' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='tab_base' value='true' />
            <format attr='enabled' id='um_lcover' value='true' />
            <format attr='enabled' id='tab_coastline' value='false' />
            <format attr='enabled' id='pp2_line' value='false' />
            <format attr='enabled' id='light_adm0_bnd' value='false' />
            <format attr='enabled' id='light_adm0_lbl' value='false' />
            <format attr='enabled' id='um_adm0_bnd' value='true' />
            <format attr='enabled' id='um_adm0_lbl' value='true' />
            <format attr='enabled' id='light_pp2_statebounds' value='false' />
            <format attr='enabled' id='light_pp2_statelabels' value='false' />
            <format attr='enabled' id='pp2_adminlabels' value='false' />
            <format attr='enabled' id='pp2_statebounds' value='true' />
            <format attr='enabled' id='pp2_statelabels' value='true' />
            <format attr='enabled' id='countybounds' value='false' />
            <format attr='enabled' id='countylabels' value='false' />
            <format attr='enabled' id='zipbounds' value='false' />
            <format attr='enabled' id='ziplabels' value='false' />
            <format attr='enabled' id='tab_areabounds' value='false' />
            <format attr='enabled' id='tab_arealabels' value='false' />
            <format attr='enabled' id='tab_msabounds' value='false' />
            <format attr='enabled' id='tab_msalabels' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='on' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <size column='[federated.0opxemw1tglw111h5k6551wiyoo5].[avg:gdp_usd:qk]' />
              <color column='[federated.0opxemw1tglw111h5k6551wiyoo5].[avg:gdp_usd:qk]' />
              <text column='[federated.0opxemw1tglw111h5k6551wiyoo5].[none:country_name:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
    </worksheet>
    <worksheet name='Sheet 7'>
      <table>
        <view>
          <datasources>
            <datasource caption='world_gpd_pivoted' name='federated.0opxemw1tglw111h5k6551wiyoo5' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0opxemw1tglw111h5k6551wiyoo5'>
            <column-instance column='[gdp_usd]' derivation='Avg' name='[avg:gdp_usd:qk]' pivot='key' type='quantitative' />
            <column caption='Country Name' datatype='string' name='[country_name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column caption='Gdp Usd' datatype='real' name='[gdp_usd]' role='measure' type='quantitative' />
            <column-instance column='[country_name]' derivation='None' name='[none:country_name:nk]' pivot='key' type='nominal' />
            <column-instance column='[gdp_usd]' derivation='None' name='[none:gdp_usd:qk]' pivot='key' type='quantitative' />
            <column-instance column='[year]' derivation='None' name='[none:year:ok]' pivot='key' type='ordinal' />
            <column aggregation='Sum' caption='Year' datatype='integer' name='[year]' role='dimension' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0opxemw1tglw111h5k6551wiyoo5].[none:country_name:nk]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:country_name:nk]' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[none:country_name:nk]' member='&quot;Arab World&quot;' />
                <groupfilter function='member' level='[none:country_name:nk]' member='&quot;Central Europe and the Baltics&quot;' />
                <groupfilter function='member' level='[none:country_name:nk]' member='&quot;Early-demographic dividend&quot;' />
                <groupfilter function='member' level='[none:country_name:nk]' member='&quot;East Asia &amp; Pacific&quot;' />
                <groupfilter function='member' level='[none:country_name:nk]' member='&quot;East Asia &amp; Pacific (excluding high income)&quot;' />
                <groupfilter function='member' level='[none:country_name:nk]' member='&quot;East Asia &amp; Pacific (IDA &amp; IBRD countries)&quot;' />
                <groupfilter function='member' level='[none:country_name:nk]' member='&quot;Euro area&quot;' />
                <groupfilter function='member' level='[none:country_name:nk]' member='&quot;Europe &amp; Central Asia&quot;' />
                <groupfilter function='member' level='[none:country_name:nk]' member='&quot;Europe &amp; Central Asia (excluding high income)&quot;' />
                <groupfilter function='member' level='[none:country_name:nk]' member='&quot;Europe &amp; Central Asia (IDA &amp; IBRD countries)&quot;' />
                <groupfilter function='member' level='[none:country_name:nk]' member='&quot;European Union&quot;' />
                <groupfilter function='member' level='[none:country_name:nk]' member='&quot;Fragile and conflict affected situations&quot;' />
                <groupfilter function='member' level='[none:country_name:nk]' member='&quot;Heavily indebted poor countries (HIPC)&quot;' />
                <groupfilter function='member' level='[none:country_name:nk]' member='&quot;High income&quot;' />
                <groupfilter function='member' level='[none:country_name:nk]' member='&quot;IBRD only&quot;' />
                <groupfilter function='member' level='[none:country_name:nk]' member='&quot;IDA &amp; IBRD total&quot;' />
                <groupfilter function='member' level='[none:country_name:nk]' member='&quot;IDA blend&quot;' />
                <groupfilter function='member' level='[none:country_name:nk]' member='&quot;IDA only&quot;' />
                <groupfilter function='member' level='[none:country_name:nk]' member='&quot;IDA total&quot;' />
                <groupfilter function='member' level='[none:country_name:nk]' member='&quot;Late-demographic dividend&quot;' />
                <groupfilter function='member' level='[none:country_name:nk]' member='&quot;Latin America &amp; Caribbean&quot;' />
                <groupfilter function='member' level='[none:country_name:nk]' member='&quot;Latin America &amp; Caribbean (excluding high income)&quot;' />
                <groupfilter function='member' level='[none:country_name:nk]' member='&quot;Latin America &amp; the Caribbean (IDA &amp; IBRD countries)&quot;' />
                <groupfilter function='member' level='[none:country_name:nk]' member='&quot;Least developed countries: UN classification&quot;' />
                <groupfilter function='member' level='[none:country_name:nk]' member='&quot;Low &amp; middle income&quot;' />
                <groupfilter function='member' level='[none:country_name:nk]' member='&quot;Lower middle income&quot;' />
                <groupfilter function='member' level='[none:country_name:nk]' member='&quot;Middle East &amp; North Africa&quot;' />
                <groupfilter function='member' level='[none:country_name:nk]' member='&quot;Middle East &amp; North Africa (excluding high income)&quot;' />
                <groupfilter function='member' level='[none:country_name:nk]' member='&quot;Middle East &amp; North Africa (IDA &amp; IBRD countries)&quot;' />
                <groupfilter function='member' level='[none:country_name:nk]' member='&quot;Middle income&quot;' />
                <groupfilter function='member' level='[none:country_name:nk]' member='&quot;North America&quot;' />
                <groupfilter function='member' level='[none:country_name:nk]' member='&quot;OECD members&quot;' />
                <groupfilter function='member' level='[none:country_name:nk]' member='&quot;Post-demographic dividend&quot;' />
                <groupfilter function='member' level='[none:country_name:nk]' member='&quot;Pre-demographic dividend&quot;' />
                <groupfilter function='member' level='[none:country_name:nk]' member='&quot;Small states&quot;' />
                <groupfilter function='member' level='[none:country_name:nk]' member='&quot;South Asia&quot;' />
                <groupfilter function='member' level='[none:country_name:nk]' member='&quot;South Asia (IDA &amp; IBRD)&quot;' />
                <groupfilter function='member' level='[none:country_name:nk]' member='&quot;Sub-Saharan Africa&quot;' />
                <groupfilter function='member' level='[none:country_name:nk]' member='&quot;Sub-Saharan Africa (excluding high income)&quot;' />
                <groupfilter function='member' level='[none:country_name:nk]' member='&quot;Sub-Saharan Africa (IDA &amp; IBRD countries)&quot;' />
                <groupfilter function='member' level='[none:country_name:nk]' member='&quot;Upper middle income&quot;' />
                <groupfilter function='member' level='[none:country_name:nk]' member='&quot;World&quot;' />
              </groupfilter>
            </groupfilter>
          </filter>
          <sort class='manual' column='[federated.0opxemw1tglw111h5k6551wiyoo5].[none:country_name:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;United States&quot;</bucket>
              <bucket>&quot;China&quot;</bucket>
              <bucket>&quot;Silicon Valley Market Cap&quot;</bucket>
              <bucket>&quot;Japan&quot;</bucket>
              <bucket>&quot;Germany&quot;</bucket>
              <bucket>&quot;United Kingdom&quot;</bucket>
              <bucket>&quot;France&quot;</bucket>
              <bucket>&quot;India&quot;</bucket>
              <bucket>&quot;Italy&quot;</bucket>
              <bucket>&quot;Silicon Valley Revenue&quot;</bucket>
              <bucket>&quot;Brazil&quot;</bucket>
              <bucket>&quot;Canada&quot;</bucket>
              <bucket>&quot;Korea Rep.&quot;</bucket>
              <bucket>&quot;Russian Federation&quot;</bucket>
              <bucket>&quot;Spain&quot;</bucket>
              <bucket>&quot;Australia&quot;</bucket>
              <bucket>&quot;Mexico&quot;</bucket>
              <bucket>&quot;Indonesia&quot;</bucket>
              <bucket>&quot;Turkey&quot;</bucket>
              <bucket>&quot;Netherlands&quot;</bucket>
              <bucket>&quot;Switzerland&quot;</bucket>
              <bucket>&quot;Saudi Arabia&quot;</bucket>
              <bucket>&quot;Argentina&quot;</bucket>
              <bucket>&quot;Sweden&quot;</bucket>
              <bucket>&quot;Poland&quot;</bucket>
              <bucket>&quot;Belgium&quot;</bucket>
              <bucket>&quot;Thailand&quot;</bucket>
              <bucket>&quot;Low income&quot;</bucket>
              <bucket>&quot;Nigeria&quot;</bucket>
              <bucket>&quot;Austria&quot;</bucket>
              <bucket>&quot;Norway&quot;</bucket>
              <bucket>&quot;Other small states&quot;</bucket>
              <bucket>&quot;United Arab Emirates&quot;</bucket>
              <bucket>&quot;Egypt Arab Rep.&quot;</bucket>
              <bucket>&quot;Hong Kong SAR China&quot;</bucket>
              <bucket>&quot;Israel&quot;</bucket>
              <bucket>&quot;Denmark&quot;</bucket>
              <bucket>&quot;Philippines&quot;</bucket>
              <bucket>&quot;Singapore&quot;</bucket>
              <bucket>&quot;Malaysia&quot;</bucket>
              <bucket>&quot;South Africa&quot;</bucket>
              <bucket>&quot;Ireland&quot;</bucket>
              <bucket>&quot;Pakistan&quot;</bucket>
              <bucket>&quot;Colombia&quot;</bucket>
              <bucket>&quot;Chile&quot;</bucket>
              <bucket>&quot;Finland&quot;</bucket>
              <bucket>&quot;Bangladesh&quot;</bucket>
              <bucket>&quot;Portugal&quot;</bucket>
              <bucket>&quot;Vietnam&quot;</bucket>
              <bucket>&quot;Greece&quot;</bucket>
              <bucket>&quot;Czech Republic&quot;</bucket>
              <bucket>&quot;Peru&quot;</bucket>
              <bucket>&quot;Romania&quot;</bucket>
              <bucket>&quot;New Zealand&quot;</bucket>
              <bucket>&quot;Iraq&quot;</bucket>
              <bucket>&quot;Algeria&quot;</bucket>
              <bucket>&quot;Qatar&quot;</bucket>
              <bucket>&quot;Kazakhstan&quot;</bucket>
              <bucket>&quot;Hungary&quot;</bucket>
              <bucket>&quot;Morocco&quot;</bucket>
              <bucket>&quot;Ecuador&quot;</bucket>
              <bucket>&quot;Sudan&quot;</bucket>
              <bucket>&quot;Ukraine&quot;</bucket>
              <bucket>&quot;Angola&quot;</bucket>
              <bucket>&quot;Slovak Republic&quot;</bucket>
              <bucket>&quot;Sri Lanka&quot;</bucket>
              <bucket>&quot;Ethiopia&quot;</bucket>
              <bucket>&quot;Dominican Republic&quot;</bucket>
              <bucket>&quot;Kenya&quot;</bucket>
              <bucket>&quot;Guatemala&quot;</bucket>
              <bucket>&quot;Myanmar&quot;</bucket>
              <bucket>&quot;Uzbekistan&quot;</bucket>
              <bucket>&quot;Oman&quot;</bucket>
              <bucket>&quot;Caribbean small states&quot;</bucket>
              <bucket>&quot;Luxembourg&quot;</bucket>
              <bucket>&quot;Costa Rica&quot;</bucket>
              <bucket>&quot;Panama&quot;</bucket>
              <bucket>&quot;Uruguay&quot;</bucket>
              <bucket>&quot;Bulgaria&quot;</bucket>
              <bucket>&quot;Croatia&quot;</bucket>
              <bucket>&quot;Lebanon&quot;</bucket>
              <bucket>&quot;Belarus&quot;</bucket>
              <bucket>&quot;Tanzania&quot;</bucket>
              <bucket>&quot;Macao SAR China&quot;</bucket>
              <bucket>&quot;Slovenia&quot;</bucket>
              <bucket>&quot;Lithuania&quot;</bucket>
              <bucket>&quot;Ghana&quot;</bucket>
              <bucket>&quot;Tunisia&quot;</bucket>
              <bucket>&quot;Jordan&quot;</bucket>
              <bucket>&quot;Azerbaijan&quot;</bucket>
              <bucket>&quot;Serbia&quot;</bucket>
              <bucket>&quot;Turkmenistan&quot;</bucket>
              <bucket>&quot;Cote d&apos;Ivoire&quot;</bucket>
              <bucket>&quot;Congo Dem. Rep.&quot;</bucket>
              <bucket>&quot;Bolivia&quot;</bucket>
              <bucket>&quot;Bahrain&quot;</bucket>
              <bucket>&quot;Latvia&quot;</bucket>
              <bucket>&quot;Paraguay&quot;</bucket>
              <bucket>&quot;Yemen Rep.&quot;</bucket>
              <bucket>&quot;El Salvador&quot;</bucket>
              <bucket>&quot;Uganda&quot;</bucket>
              <bucket>&quot;Cameroon&quot;</bucket>
              <bucket>&quot;Estonia&quot;</bucket>
              <bucket>&quot;Honduras&quot;</bucket>
              <bucket>&quot;Nepal&quot;</bucket>
              <bucket>&quot;Trinidad and Tobago&quot;</bucket>
              <bucket>&quot;Iceland&quot;</bucket>
              <bucket>&quot;Cambodia&quot;</bucket>
              <bucket>&quot;Cyprus&quot;</bucket>
              <bucket>&quot;Zambia&quot;</bucket>
              <bucket>&quot;Afghanistan&quot;</bucket>
              <bucket>&quot;Bosnia and Herzegovina&quot;</bucket>
              <bucket>&quot;Zimbabwe&quot;</bucket>
              <bucket>&quot;Lao PDR&quot;</bucket>
              <bucket>&quot;Botswana&quot;</bucket>
              <bucket>&quot;Senegal&quot;</bucket>
              <bucket>&quot;Georgia&quot;</bucket>
              <bucket>&quot;Gabon&quot;</bucket>
              <bucket>&quot;Mali&quot;</bucket>
              <bucket>&quot;Jamaica&quot;</bucket>
              <bucket>&quot;West Bank and Gaza&quot;</bucket>
              <bucket>&quot;Nicaragua&quot;</bucket>
              <bucket>&quot;Mauritius&quot;</bucket>
              <bucket>&quot;Burkina Faso&quot;</bucket>
              <bucket>&quot;Albania&quot;</bucket>
              <bucket>&quot;Brunei Darussalam&quot;</bucket>
              <bucket>&quot;Mongolia&quot;</bucket>
              <bucket>&quot;Mozambique&quot;</bucket>
              <bucket>&quot;Malta&quot;</bucket>
              <bucket>&quot;Macedonia FYR&quot;</bucket>
              <bucket>&quot;Armenia&quot;</bucket>
              <bucket>&quot;Namibia&quot;</bucket>
              <bucket>&quot;Equatorial Guinea&quot;</bucket>
              <bucket>&quot;Madagascar&quot;</bucket>
              <bucket>&quot;Chad&quot;</bucket>
              <bucket>&quot;Bahamas The&quot;</bucket>
              <bucket>&quot;Pacific island small states&quot;</bucket>
              <bucket>&quot;Benin&quot;</bucket>
              <bucket>&quot;Rwanda&quot;</bucket>
              <bucket>&quot;Haiti&quot;</bucket>
              <bucket>&quot;Congo Rep.&quot;</bucket>
              <bucket>&quot;Niger&quot;</bucket>
              <bucket>&quot;Tajikistan&quot;</bucket>
              <bucket>&quot;Moldova&quot;</bucket>
              <bucket>&quot;Kosovo&quot;</bucket>
              <bucket>&quot;Kyrgyz Republic&quot;</bucket>
              <bucket>&quot;Guinea&quot;</bucket>
              <bucket>&quot;Somalia&quot;</bucket>
              <bucket>&quot;Malawi&quot;</bucket>
              <bucket>&quot;Mauritania&quot;</bucket>
              <bucket>&quot;Fiji&quot;</bucket>
              <bucket>&quot;Barbados&quot;</bucket>
              <bucket>&quot;Togo&quot;</bucket>
              <bucket>&quot;Montenegro&quot;</bucket>
              <bucket>&quot;Swaziland&quot;</bucket>
              <bucket>&quot;Sierra Leone&quot;</bucket>
              <bucket>&quot;Suriname&quot;</bucket>
              <bucket>&quot;Maldives&quot;</bucket>
              <bucket>&quot;Guyana&quot;</bucket>
              <bucket>&quot;Burundi&quot;</bucket>
              <bucket>&quot;Bhutan&quot;</bucket>
              <bucket>&quot;Lesotho&quot;</bucket>
              <bucket>&quot;Liberia&quot;</bucket>
              <bucket>&quot;Belize&quot;</bucket>
              <bucket>&quot;Central African Republic&quot;</bucket>
              <bucket>&quot;Cabo Verde&quot;</bucket>
              <bucket>&quot;Antigua and Barbuda&quot;</bucket>
              <bucket>&quot;Seychelles&quot;</bucket>
              <bucket>&quot;St. Lucia&quot;</bucket>
              <bucket>&quot;Solomon Islands&quot;</bucket>
              <bucket>&quot;Guinea-Bissau&quot;</bucket>
              <bucket>&quot;Grenada&quot;</bucket>
              <bucket>&quot;Gambia The&quot;</bucket>
              <bucket>&quot;St. Kitts and Nevis&quot;</bucket>
              <bucket>&quot;Samoa&quot;</bucket>
              <bucket>&quot;Vanuatu&quot;</bucket>
              <bucket>&quot;St. Vincent and the Grenadines&quot;</bucket>
              <bucket>&quot;Comoros&quot;</bucket>
              <bucket>&quot;Dominica&quot;</bucket>
              <bucket>&quot;Tonga&quot;</bucket>
              <bucket>&quot;Sao Tome and Principe&quot;</bucket>
              <bucket>&quot;Micronesia Fed. Sts.&quot;</bucket>
              <bucket>&quot;Palau&quot;</bucket>
              <bucket>&quot;Marshall Islands&quot;</bucket>
              <bucket>&quot;Kiribati&quot;</bucket>
              <bucket>&quot;Nauru&quot;</bucket>
              <bucket>&quot;Tuvalu&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </sort>
          <filter class='quantitative' column='[federated.0opxemw1tglw111h5k6551wiyoo5].[none:gdp_usd:qk]' included-values='in-range'>
            <min>1.0</min>
          </filter>
          <filter class='categorical' column='[federated.0opxemw1tglw111h5k6551wiyoo5].[none:year:ok]' filter-group='3'>
            <groupfilter function='member' level='[none:year:ok]' member='2016' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0opxemw1tglw111h5k6551wiyoo5].[none:country_name:nk]</column>
            <column>[federated.0opxemw1tglw111h5k6551wiyoo5].[none:year:ok]</column>
            <column>[federated.0opxemw1tglw111h5k6551wiyoo5].[none:gdp_usd:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.0opxemw1tglw111h5k6551wiyoo5].[avg:gdp_usd:qk]' num-steps='5' type='interpolated' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='tab_base' value='true' />
            <format attr='enabled' id='um_lcover' value='true' />
            <format attr='enabled' id='tab_coastline' value='false' />
            <format attr='enabled' id='pp2_line' value='false' />
            <format attr='enabled' id='light_adm0_bnd' value='false' />
            <format attr='enabled' id='light_adm0_lbl' value='false' />
            <format attr='enabled' id='um_adm0_bnd' value='true' />
            <format attr='enabled' id='um_adm0_lbl' value='true' />
            <format attr='enabled' id='light_pp2_statebounds' value='false' />
            <format attr='enabled' id='light_pp2_statelabels' value='false' />
            <format attr='enabled' id='pp2_adminlabels' value='false' />
            <format attr='enabled' id='pp2_statebounds' value='true' />
            <format attr='enabled' id='pp2_statelabels' value='true' />
            <format attr='enabled' id='countybounds' value='false' />
            <format attr='enabled' id='countylabels' value='false' />
            <format attr='enabled' id='zipbounds' value='false' />
            <format attr='enabled' id='ziplabels' value='false' />
            <format attr='enabled' id='tab_areabounds' value='false' />
            <format attr='enabled' id='tab_arealabels' value='false' />
            <format attr='enabled' id='tab_msabounds' value='false' />
            <format attr='enabled' id='tab_msalabels' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.0opxemw1tglw111h5k6551wiyoo5].[avg:gdp_usd:qk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0opxemw1tglw111h5k6551wiyoo5].[none:country_name:nk]</rows>
        <cols />
      </table>
    </worksheet>
    <worksheet name='World &amp; Group'>
      <table>
        <view>
          <datasources>
            <datasource caption='world_gpd_pivoted' name='federated.0opxemw1tglw111h5k6551wiyoo5' />
          </datasources>
          <datasource-dependencies datasource='federated.0opxemw1tglw111h5k6551wiyoo5'>
            <column-instance column='[gdp_usd]' derivation='Avg' name='[avg:gdp_usd:qk]' pivot='key' type='quantitative' />
            <column caption='Country Name' datatype='string' name='[country_name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column caption='Gdp Usd' datatype='real' name='[gdp_usd]' role='measure' type='quantitative' />
            <column-instance column='[country_name]' derivation='None' name='[none:country_name:nk]' pivot='key' type='nominal' />
            <column-instance column='[year]' derivation='None' name='[none:year:qk]' pivot='key' type='quantitative' />
            <column aggregation='Sum' caption='Year' datatype='integer' name='[year]' role='dimension' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0opxemw1tglw111h5k6551wiyoo5].[none:country_name:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:country_name:nk]' member='&quot;Arab World&quot;' />
              <groupfilter function='member' level='[none:country_name:nk]' member='&quot;Central African Republic&quot;' />
              <groupfilter function='member' level='[none:country_name:nk]' member='&quot;Central Europe and the Baltics&quot;' />
              <groupfilter function='member' level='[none:country_name:nk]' member='&quot;East Asia &amp; Pacific&quot;' />
              <groupfilter function='member' level='[none:country_name:nk]' member='&quot;Euro area&quot;' />
              <groupfilter function='member' level='[none:country_name:nk]' member='&quot;Europe &amp; Central Asia&quot;' />
              <groupfilter function='member' level='[none:country_name:nk]' member='&quot;European Union&quot;' />
              <groupfilter function='member' level='[none:country_name:nk]' member='&quot;Latin America &amp; Caribbean&quot;' />
              <groupfilter function='member' level='[none:country_name:nk]' member='&quot;Middle East &amp; North Africa&quot;' />
              <groupfilter function='member' level='[none:country_name:nk]' member='&quot;North America&quot;' />
              <groupfilter function='member' level='[none:country_name:nk]' member='&quot;OECD members&quot;' />
              <groupfilter function='member' level='[none:country_name:nk]' member='&quot;Pacific island small states&quot;' />
              <groupfilter function='member' level='[none:country_name:nk]' member='&quot;Sub-Saharan Africa&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0opxemw1tglw111h5k6551wiyoo5].[none:country_name:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.0opxemw1tglw111h5k6551wiyoo5].[avg:gdp_usd:qk]' scope='rows' value='GDP (USD)' />
            <format attr='subtitle' class='0' field='[federated.0opxemw1tglw111h5k6551wiyoo5].[avg:gdp_usd:qk]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[federated.0opxemw1tglw111h5k6551wiyoo5].[avg:gdp_usd:qk]' scope='rows' value='true' />
            <format attr='width' field='[federated.0opxemw1tglw111h5k6551wiyoo5].[avg:gdp_usd:qk]' value='40' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Area' />
            <encodings>
              <color column='[federated.0opxemw1tglw111h5k6551wiyoo5].[none:country_name:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0opxemw1tglw111h5k6551wiyoo5].[avg:gdp_usd:qk]</rows>
        <cols>[federated.0opxemw1tglw111h5k6551wiyoo5].[none:year:qk]</cols>
      </table>
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard name='Dashboard 1'>
      <style />
      <size sizing-mode='automatic' />
      <datasources>
        <datasource caption='world_gpd_pivoted' name='federated.0opxemw1tglw111h5k6551wiyoo5' />
      </datasources>
      <datasource-dependencies datasource='federated.0opxemw1tglw111h5k6551wiyoo5'>
        <column-instance column='[year]' derivation='None' name='[none:year:ok]' pivot='key' type='ordinal' />
        <column aggregation='Sum' caption='Year' datatype='integer' name='[year]' role='dimension' type='ordinal' />
      </datasource-dependencies>
      <zones use-insets='false'>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='61282' id='5' param='horz' type='layout-flow' w='99064' x='468' y='885'>
            <zone h='61282' id='3' type='layout-basic' w='89702' x='468' y='885'>
              <zone h='61282' id='1' name='Countries' w='44851' x='468' y='885'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='61282' id='8' name='Groups' w='44851' x='45319' y='885'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
            <zone fixed-size='160' h='61282' id='4' is-fixed='true' param='vert' type='layout-flow' w='9362' x='90170' y='885'>
              <zone h='5752' id='6' mode='dropdown' name='Countries' param='[federated.0opxemw1tglw111h5k6551wiyoo5].[none:year:ok]' type='filter' w='9362' x='90170' y='885'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='7190' id='7' name='Countries' pane-specification-id='0' param='[federated.0opxemw1tglw111h5k6551wiyoo5].[sum:gdp_usd:qk]' type='color' w='9362' x='90170' y='6637'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='31637' id='11' name='World &amp; Group' pane-specification-id='0' param='[federated.0opxemw1tglw111h5k6551wiyoo5].[none:country_name:nk]' type='color' w='9362' x='90170' y='13827'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone h='36948' id='10' name='World &amp; Group' w='99064' x='468' y='62167'>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
    </dashboard>
    <dashboard name='Dashboard 3'>
      <style />
      <size sizing-mode='automatic' />
      <datasources>
        <datasource caption='world_gpd_pivoted' name='federated.0opxemw1tglw111h5k6551wiyoo5' />
      </datasources>
      <datasource-dependencies datasource='federated.0opxemw1tglw111h5k6551wiyoo5'>
        <column-instance column='[year]' derivation='None' name='[none:year:ok]' pivot='key' type='ordinal' />
        <column aggregation='Sum' caption='Year' datatype='integer' name='[year]' role='dimension' type='ordinal' />
      </datasource-dependencies>
      <zones use-insets='false'>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='98230' id='5' param='horz' type='layout-flow' w='99064' x='468' y='885'>
            <zone h='98230' id='3' type='layout-basic' w='89702' x='468' y='885'>
              <zone h='98230' id='1' name='Sheet 7' w='44851' x='45319' y='885'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='49115' id='7' name='Sheet 4' w='44851' x='468' y='885'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='49115' id='9' name='Sheet 5' w='44851' x='468' y='50000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
            <zone fixed-size='160' h='98230' id='4' is-fixed='true' param='vert' type='layout-flow' w='9362' x='90170' y='885'>
              <zone h='5752' id='6' mode='dropdown' name='Sheet 7' param='[federated.0opxemw1tglw111h5k6551wiyoo5].[none:year:ok]' type='filter' w='9362' x='90170' y='885'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='7190' id='8' name='Sheet 4' pane-specification-id='0' param='[federated.0opxemw1tglw111h5k6551wiyoo5].[sum:gdp_usd:qk]' type='color' w='9362' x='90170' y='6637'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='7190' id='10' name='Sheet 5' pane-specification-id='0' param='[federated.0opxemw1tglw111h5k6551wiyoo5].[avg:gdp_usd:qk]' type='color' w='9362' x='90170' y='13827'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
    </dashboard>
    <dashboard name='World GDP Dashboard'>
      <style />
      <size sizing-mode='automatic' />
      <datasources>
        <datasource caption='world_gpd_pivoted' name='federated.0opxemw1tglw111h5k6551wiyoo5' />
      </datasources>
      <datasource-dependencies datasource='federated.0opxemw1tglw111h5k6551wiyoo5'>
        <column-instance column='[year]' derivation='None' name='[none:year:ok]' pivot='key' type='ordinal' />
        <column aggregation='Sum' caption='Year' datatype='integer' name='[year]' role='dimension' type='ordinal' />
      </datasource-dependencies>
      <zones use-insets='false'>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='98230' id='5' param='horz' type='layout-flow' w='99064' x='468' y='885'>
            <zone h='98230' id='3' type='layout-basic' w='99064' x='468' y='885'>
              <zone h='58296' id='1' name='Countries' w='99064' x='468' y='885'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='39934' id='9' name='Groups' w='36252' x='468' y='59181'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='39934' id='11' name='World &amp; Group' w='52473' x='36720' y='59181'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='39934' id='12' name='World &amp; Group' pane-specification-id='0' param='[federated.0opxemw1tglw111h5k6551wiyoo5].[none:country_name:nk]' type='color' w='10339' x='89193' y='59181'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
        <zone h='8407' id='7' name='Countries' pane-specification-id='0' param='[federated.0opxemw1tglw111h5k6551wiyoo5].[sum:gdp_usd:qk]' type='color' w='10942' x='936' y='6527'>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='4' />
          </zone-style>
        </zone>
        <zone h='3429' id='6' mode='dropdown' name='Countries' param='[federated.0opxemw1tglw111h5k6551wiyoo5].[none:year:ok]' type='filter' w='9830' x='79462' y='1438'>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='4' />
          </zone-style>
        </zone>
        <zone h='5531' id='10' name='Groups' pane-specification-id='0' param='[federated.0opxemw1tglw111h5k6551wiyoo5].[avg:gdp_usd:qk]' show-title='false' type='color' w='11995' x='7782' y='60177'>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='4' />
          </zone-style>
        </zone>
      </zones>
    </dashboard>
  </dashboards>
  <windows source-height='30'>
    <window class='dashboard' maximized='true' name='World GDP Dashboard'>
      <viewpoints>
        <viewpoint name='Countries'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Groups' />
        <viewpoint name='World &amp; Group'>
          <zoom type='entire-view' />
          <highlight>
            <color-one-way>
              <field>[federated.0opxemw1tglw111h5k6551wiyoo5].[none:country_name:nk]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
      </viewpoints>
      <active id='-1' />
    </window>
    <window class='dashboard' name='Dashboard 1'>
      <viewpoints>
        <viewpoint name='Countries'>
          <highlight>
            <color-one-way>
              <field>[federated.0opxemw1tglw111h5k6551wiyoo5].[sum:gdp_usd:qk]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
        <viewpoint name='Groups' />
        <viewpoint name='World &amp; Group'>
          <zoom type='entire-view' />
          <highlight field='[federated.0opxemw1tglw111h5k6551wiyoo5].[none:country_name:nk]'>
            <bucket-selection />
          </highlight>
        </viewpoint>
      </viewpoints>
      <active id='6' />
    </window>
    <window class='worksheet' name='Sheet 4'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0opxemw1tglw111h5k6551wiyoo5].[sum:gdp_usd:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0opxemw1tglw111h5k6551wiyoo5].[avg:gdp_usd:qk]</field>
            <field>[federated.0opxemw1tglw111h5k6551wiyoo5].[none:country_name:nk]</field>
            <field>[federated.0opxemw1tglw111h5k6551wiyoo5].[none:gdp_usd:qk]</field>
            <field>[federated.0opxemw1tglw111h5k6551wiyoo5].[none:year:ok]</field>
            <field>[federated.0opxemw1tglw111h5k6551wiyoo5].[none:year:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Sheet 5'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0opxemw1tglw111h5k6551wiyoo5].[avg:gdp_usd:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0opxemw1tglw111h5k6551wiyoo5].[avg:gdp_usd:qk]</field>
            <field>[federated.0opxemw1tglw111h5k6551wiyoo5].[none:country_name:nk]</field>
            <field>[federated.0opxemw1tglw111h5k6551wiyoo5].[none:year:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Sheet 7'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='dropdown' param='[federated.0opxemw1tglw111h5k6551wiyoo5].[none:year:ok]' type='filter' />
          </strip>
        </edge>
      </cards>
    </window>
    <window class='dashboard' name='Dashboard 3'>
      <viewpoints>
        <viewpoint name='Sheet 4' />
        <viewpoint name='Sheet 5' />
        <viewpoint name='Sheet 7' />
      </viewpoints>
      <active id='1' />
    </window>
    <window class='worksheet' hidden='true' name='Countries'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='dropdown' param='[federated.0opxemw1tglw111h5k6551wiyoo5].[none:year:ok]' type='filter' />
            <card pane-specification-id='0' param='[federated.0opxemw1tglw111h5k6551wiyoo5].[sum:gdp_usd:qk]' type='color' />
            <card pane-specification-id='0' param='[federated.0opxemw1tglw111h5k6551wiyoo5].[avg:gdp_usd:qk]' type='size' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0opxemw1tglw111h5k6551wiyoo5].[avg:gdp_usd:qk]</field>
            <field>[federated.0opxemw1tglw111h5k6551wiyoo5].[none:country_name:nk]</field>
            <field>[federated.0opxemw1tglw111h5k6551wiyoo5].[none:gdp_usd:qk]</field>
            <field>[federated.0opxemw1tglw111h5k6551wiyoo5].[none:year:ok]</field>
            <field>[federated.0opxemw1tglw111h5k6551wiyoo5].[none:year:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' hidden='true' name='Groups'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='dropdown' param='[federated.0opxemw1tglw111h5k6551wiyoo5].[none:year:ok]' type='filter' />
            <card pane-specification-id='0' param='[federated.0opxemw1tglw111h5k6551wiyoo5].[avg:gdp_usd:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0opxemw1tglw111h5k6551wiyoo5].[avg:gdp_usd:qk]</field>
            <field>[federated.0opxemw1tglw111h5k6551wiyoo5].[none:country_name:nk]</field>
            <field>[federated.0opxemw1tglw111h5k6551wiyoo5].[none:year:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' hidden='true' name='World &amp; Group'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0opxemw1tglw111h5k6551wiyoo5].[none:country_name:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0opxemw1tglw111h5k6551wiyoo5].[none:country_code:nk]</field>
            <field>[federated.0opxemw1tglw111h5k6551wiyoo5].[none:country_name:nk]</field>
            <field>[federated.0opxemw1tglw111h5k6551wiyoo5].[none:year:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Dashboard 1' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Dashboard 3' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Sheet 4' width='192'>
      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
      rkJggg==
    </thumbnail>
    <thumbnail height='192' name='Sheet 5' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAADrUlEQVR4nO3Zz2pjdRjG8SdNmloqrVOrDLpQBlwI4kLmArw6r8PbcOcVuJWKIorj1P6b
      ZNo4bZI2bmZ0BurgYmjB5/PZhPdwAu9v8T0cksFqtVoFSq3d9QJwlwRAtdHLw1dff5Mffj28
      q13g1r0SwP4vf+S7/d/uahe4df/6CjR48Tn4Zx68GOB/YnTTxYefPcj2OJleJM/Optnc3snT
      6SQffXA/R8fH2X/8NA/e38l8ucjk4jpry8vs7t7L6nqZ0XCYxfwyR7OrbGSZ4fp6RqNRzqbT
      nM4Wt30+eK0bA7iaz3OySMbDcTIY5GpxmUens1xfH2Z7a5z39razMVzLajXKw0/v58nkSc5n
      qwyH69nZWcvxbJQvP34njybnWf55nuX47YxXi5zOprd9PnitGwP48WCSnfVV5oNx7m0M8tPB
      NLub6xm/Nc73Pz/O9dowx0lWSY5m82xkkZOzeQZJxifj7G2u59vDabZGqxxPZ9l99zqz6exW
      Dwb/xY0BnD09z1mSZJYXvwmdJcnJ+fNp+fe9FyeTV777bL7I9PmD/snza78fnLyZbeEN8z8A
      1QRANQFQTQBUEwDVBEA1AVBNAFQTANUEQDUBUE0AVBMA1QRANQFQTQBUEwDVBEA1AVBNAFQT
      ANUEQDUBUE0AVBMA1QRANQFQTQBUEwDVBEA1AVBNAFQTANUEQDUBUE0AVBMA1QRANQFQTQBU
      EwDVBEA1AVBNAFQTANUEQDUBUE0AVBMA1QRANQFQTQBUEwDVBEA1AVBNAFQTANUEQDUBUE0A
      VBMA1QRANQFQTQBUEwDVBEA1AVBNAFQTANUEQDUBUE0AVBMA1QRANQFQTQBUEwDVBEA1AVBN
      AFQTANUEQDUBUE0AVBMA1QRANQFQTQBUEwDVBEA1AVBNAFQTANUEQDUBUE0AVBMA1QRANQFQ
      TQBUEwDVBEA1AVBNAFQTANUEQDUBUE0AVBMA1QRANQFQTQBUEwDVBEA1AVBNAFQTANUEQDUB
      UE0AVBMA1QRANQFQTQBUEwDVBEA1AVBNAFQTANUEQDUBUE0AVBMA1QRANQFQTQBUEwDVBEA1
      AVBNAFQTANUEQDUBUE0AVBMA1QRANQFQTQBUEwDVBEA1AVBNAFQTANUEQDUBUE0AVBMA1QRA
      NQFQTQBUEwDVBEA1AVBNAFQTANUEQDUBUE0AVBMA1QRANQFQTQBUEwDVBEA1AVBNAFQTANUE
      QDUBUE0AVBMA1UYvD59/8Um2Pty7q13g1v0FKluOlfzv+/4AAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Sheet 7' width='192'>
      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
      67rwD97n+QvI/AJVAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='World GDP Dashboard' width='192'>
      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
      RU5ErkJggg==
    </thumbnail>
  </thumbnails>
</workbook>
